{"version":3,"sources":["views/components/reactstrap/examples/tabs.js","views/components/reactstrap/examples/tabsJustified.js","views/components/reactstrap/examples/tabsBorderBottom.js","views/components/reactstrap/examples/tabsVertical.js","views/components/reactstrap/examples/tabsPills.js","views/components/reactstrap/tabs.js","views/components/reactstrap/exampleSource/tabs.js","views/components/reactstrap/exampleSource/tabsJustified.js","views/components/reactstrap/exampleSource/tabsBorderBottom.js","views/components/reactstrap/exampleSource/tabsVertical.js","views/components/reactstrap/exampleSource/tabsPills.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js","components/tabs/customTabs.js"],"names":["Tabs","state","activeTab","toggle","tab","_this","setState","_this2","this","react_default","a","createElement","reactstrap_es","tabs","className","classnames","active","onClick","tabId","sm","body","Component","TabsJustified","TabsBorderBottom","TabsVertical","TabsPills","pills","react","contentHeader","contentSubHeader","md","lg","customTabs","TabContent1","TabContent2","lib","component","tabsJustified","tabsBorderBottom","tabsVertical","tabsPills","React","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","concat","undefined","children","ContentSubHeader","Example","Object","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","bind","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_feather__WEBPACK_IMPORTED_MODULE_7__","size"],"mappings":"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","file":"static/js/35.64cffd85.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass Tabs extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsJustified extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs className=\"nav-justified\">\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsJustified;\n","import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsBorderBottom extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs className=\"nav-border-bottom\">\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsBorderBottom;\n","import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsVertical extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div className=\"tabs-vertical\">\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsVertical;\n","import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsPills extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav pills>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Pill1\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Pill2\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Pill 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah. Danish sweet roll cheesecake candy canes marzipan liquorice. Sugar plum halvah lemon drops donut sesame snaps lollipop oat cake. Cake dessert topping tiramisu jelly beans. Gummies oat cake sugar plum cookie carrot cake halvah powder sesame snaps. Bear claw gummi bears marzipan powder pudding lemon drops cotton candy sweet roll chupa chups. Marzipan tootsie roll tart lemon drops gummies. Cheesecake wafer carrot cake chocolate jelly beans candy liquorice fruitcake pastry. Gummi bears cheesecake macaroon jelly beans wafer cookie. Gingerbread chocolate bar icing. Candy canes donut icing macaroon cupcake. Ice cream ice cream cake pudding gummi bears.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsPills;\n","import React, { Fragment } from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\n//Prism\n// eslint-disable-next-line\nimport Prism from \"prismjs\";  //Include JS\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\nimport { PrismCode } from \"react-prism\"; //Prism Component\n\n// import classnames from \"classnames\";\nimport CustomTabs from \"../../../components/tabs/customTabs\";\nimport ContentHeader from \"../../../components/contentHead/contentHeader\";\nimport ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\n\n// Import examples\nimport TabsExample from \"./examples/tabs\";\nimport TabsJustified from \"./examples/tabsJustified\";\nimport TabsBorderBottom from \"./examples/tabsBorderBottom\";\nimport TabsVertical from \"./examples/tabsVertical\";\nimport TabsPills from \"./examples/tabsPills\";\n\n// Import Example Source Code\nimport TabsExampleSource from \"./exampleSource/tabs\";\nimport TabsJustifiedSource from \"./exampleSource/tabsJustified\";\nimport TabsBorderBottomSource from \"./exampleSource/tabsBorderBottom\";\nimport TabsVerticalSource from \"./exampleSource/tabsVertical\";\nimport TabsPillsSource from \"./exampleSource/tabsPills\";\n\nclass Tabs extends React.Component {\n   \n   render() {\n      return (\n         <Fragment>\n            <ContentHeader>Tabs</ContentHeader>\n            <ContentSubHeader>Tabs React Component.</ContentSubHeader>\n            <Row>\n               <Col md=\"12\" lg=\"6\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Tabs</CardTitle>\n                        <CustomTabs\n                           TabContent1={<TabsExample />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {TabsExampleSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n               <Col md=\"12\" lg=\"6\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Justified Tabs</CardTitle>\n                        <CustomTabs\n                           TabContent1={<TabsJustified />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {TabsJustifiedSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col md=\"12\" lg=\"6\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Border Bottom Tabs</CardTitle>\n                        <CustomTabs\n                           TabContent1={<TabsBorderBottom />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {TabsBorderBottomSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n               <Col md=\"12\" lg=\"6\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Vertical Tabs</CardTitle>\n                        <CustomTabs\n                           TabContent1={<TabsVertical />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {TabsVerticalSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Pills</CardTitle>\n                        <CustomTabs\n                           TabContent1={<TabsPills />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {TabsPillsSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </Fragment>\n      );\n   }\n}\n\nexport default Tabs;\n","const TabsExampleSource = `import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass Tabs extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Tab1\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Tab2\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah. Danish sweet roll cheesecake candy canes marzipan liquorice. Sugar plum halvah lemon drops donut sesame snaps lollipop oat cake. Cake dessert topping tiramisu jelly beans. Gummies oat cake sugar plum cookie carrot cake halvah powder sesame snaps. Bear claw gummi bears marzipan powder pudding lemon drops cotton candy sweet roll chupa chups. Marzipan tootsie roll tart lemon drops gummies. Cheesecake wafer carrot cake chocolate jelly beans candy liquorice fruitcake pastry. Gummi bears cheesecake macaroon jelly beans wafer cookie. Gingerbread chocolate bar icing. Candy canes donut icing macaroon cupcake. Ice cream ice cream cake pudding gummi bears.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default Tabs;`;\n\nexport default TabsExampleSource;\n","const TabsJustifiedSource = `import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsJustified extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs className=\"nav-justified\">\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsJustified;`;\n\nexport default TabsJustifiedSource;","const TabsBorderBottomSource = `import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsBorderBottom extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav tabs className=\"nav-border-bottom\">\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsBorderBottom;`;\n\nexport default TabsBorderBottomSource;","const TabsVerticalSource = `import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsVertical extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div className=\"tabs-vertical\">\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Demo Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Example Content\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"3\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"3\");\n                     }}\n                  >\n                     Tab Content\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"3\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Tab 3 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsVertical;`;\n\nexport default TabsVerticalSource;","const TabsPillsSource = `import React, { Component } from \"react\";\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,\n   Card,\n   Button,\n   CardTitle,\n   CardText,\n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass TabsPills extends Component {\n   state = {\n      activeTab: \"1\"\n   };\n\n   toggle = tab => {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   };\n   render() {\n      return (\n         <div>\n            <Nav pills>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     Pill1\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     Pill2\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        <h4>Pill 1 Contents</h4>\n                        <p>Lemon drops pastry chocolate. Jujubes sweet roll tootsie roll. Oat cake donut bonbon chocolate croissant candy candy brownie. Wafer jelly beans jelly ice cream caramels. Cookie bonbon lemon drops cheesecake brownie cake macaroon sweet. Toffee pie icing candy ice cream croissant caramels jelly. Muffin jelly gummies icing cheesecake chocolate cake. Sweet chupa chups croissant pudding sesame snaps soufflé. Marzipan cotton candy jujubes halvah cheesecake. Cupcake wafer gummies croissant candy brownie jelly. Sweet wafer chocolate halvah. Danish sweet roll cheesecake candy canes marzipan liquorice. Sugar plum halvah lemon drops donut sesame snaps lollipop oat cake. Cake dessert topping tiramisu jelly beans. Gummies oat cake sugar plum cookie carrot cake halvah powder sesame snaps. Bear claw gummi bears marzipan powder pudding lemon drops cotton candy sweet roll chupa chups. Marzipan tootsie roll tart lemon drops gummies. Cheesecake wafer carrot cake chocolate jelly beans candy liquorice fruitcake pastry. Gummi bears cheesecake macaroon jelly beans wafer cookie. Gingerbread chocolate bar icing. Candy canes donut icing macaroon cupcake. Ice cream ice cream cake pudding gummi bears.</p>\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-success\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                     <Col sm=\"6\">\n                        <Card body>\n                           <CardTitle>Special Title Treatment</CardTitle>\n                           <CardText>\n                              With supporting text below as a natural lead-in to\n                              additional content.\n                           </CardText>\n                           <Button className=\"btn btn-danger\">Go somewhere</Button>\n                        </Card>\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n\nexport default TabsPills;`;\n\nexport default TabsPillsSource","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","import React from \"react\";\n\nconst ContentSubHeader = props => {\n   const { className } = props;\n   return (\n      <div\n         className={`content-sub-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentSubHeader;\n","import React from \"react\";\nimport { Eye, Code } from 'react-feather';\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,   \n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nexport default class Example extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n         activeTab: \"1\"\n      };\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"nav-tabs-vc\">\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     <Eye size={18} />\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     <Code size={18} />\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            \n            <TabContent activeTab={this.state.activeTab} className=\"px-0\">\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        {this.props.TabContent1}\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"12\">\n                        {this.props.TabContent2}\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n"],"sourceRoot":""}