{"version":3,"sources":["views/forms/validation.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js"],"names":["formSchema","Yup","shape","required","email","number","url","date","minlength","min","maxlength","max","Validation","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","_components_contentHead_contentHeader__WEBPACK_IMPORTED_MODULE_9__","_components_contentHead_contentSubHeader__WEBPACK_IMPORTED_MODULE_10__","href","target","rel","src","alt","reactstrap__WEBPACK_IMPORTED_MODULE_6__","sm","formik__WEBPACK_IMPORTED_MODULE_7__","initialValues","validationSchema","onSubmit","values","console","log","_ref","errors","touched","for","name","id","className","concat","type","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","undefined","children","ContentSubHeader"],"mappings":"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","file":"static/js/60.ccc79d9b.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col, Button, FormGroup, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\n// import classnames from \"classnames\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport ContentSubHeader from \"../../components/contentHead/contentSubHeader\";\n\nconst formSchema = Yup.object().shape({\n   required: Yup.string()\n      .required(\"Required\"),\n   email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Required\"),\n   number: Yup.number()\n      .required(\"Required\"),\n   url: Yup.string()\n      .url()\n      .required(\"Required\"),\n   date: Yup.date()\n      .required(\"Required\"),\n   minlength: Yup.string()\n      .min(4, \"Too Short!\")\n      .required(\"Required\"),\n   maxlength: Yup.string()\n      .max(5, \"Too Long!\")\n      .required(\"Required\"),\n});\n\nclass Validation extends Component {\n   render() {\n      return (\n         <Fragment>\n            <ContentHeader>Form Validation</ContentHeader>\n            <ContentSubHeader>\n            <p>Form Validation example.</p>\n            <a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src=\"https://img.shields.io/github/stars/jaredpalmer/formik.svg?style=social\" alt=\"Stars\" />\n                  <img src=\"https://img.shields.io/npm/dm/formik.svg\" alt=\"Downloads\"/>\n            </a>\n            </ContentSubHeader>\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Formik</CardTitle>\n                        <p><a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noopener noreferrer\">Formik</a> is designed to manage forms with complex validation with ease. Formik supports synchronous and asynchronous form-level and field-level validation. Furthermore, it comes with baked-in support for schema-based form-level validation through Yup.</p>\n                        <Formik\n                           initialValues={{\n                              required: \"\",\n                              email: \"\",\n                              url: \"\",\n                              number: \"\",\n                              date: \"\",\n                              minlength: \"\",\n                              maxlength: \"\"\n                           }}\n                           validationSchema={formSchema}\n                           onSubmit={values => {\n                              // same shape as initial values\n                              console.log(values);\n                           }}\n                        >\n                           {({ errors, touched }) => (\n                              <Form>\n                                 <FormGroup>\n                                    <Label for=\"required\">Required</Label>\n                                    <Field name=\"required\" id=\"required\" className={`form-control ${errors.required && touched.required && 'is-invalid'}`} />\n                                    {errors.required && touched.required ? <div className=\"invalid-feedback\">{errors.required}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"email\">Email</Label>\n                                    <Field type=\"email\" name=\"email\" id=\"email\" className={`form-control ${errors.email && touched.email && 'is-invalid'}`} />\n                                    {errors.email && touched.email ? <div className=\"invalid-feedback\">{errors.email}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"url\">Website URL</Label>\n                                    <Field name=\"url\" id=\"url\" className={`form-control ${errors.url && touched.url && 'is-invalid'}`} />\n                                    {errors.url && touched.url ? <div className=\"invalid-feedback\">{errors.url}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"number\">Number</Label>\n                                    <Field name=\"number\" id=\"number\" className={`form-control ${errors.number && touched.number && 'is-invalid'}`} />\n                                    {errors.number && touched.number ? <div className=\"invalid-feedback\">{errors.number}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"date\">Date</Label>\n                                    <Field type=\"date\" name=\"date\" id=\"date\" className={`form-control ${errors.date && touched.date && 'is-invalid'}`} />\n                                    {errors.date && touched.date ? <div className=\"invalid-feedback\">{errors.date}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"minlength\">Min Length (Minimum 4 Characters)</Label>\n                                    <Field name=\"minlength\" id=\"minlength\" className={`form-control ${errors.minlength && touched.minlength && 'is-invalid'}`} />\n                                    {errors.minlength && touched.minlength ? <div className=\"invalid-feedback\">{errors.minlength}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"maxlength\">Max Length (Maximum 5 Characters)</Label>\n                                    <Field name=\"maxlength\" id=\"maxlength\" className={`form-control ${errors.maxlength && touched.maxlength && 'is-invalid'}`} />\n                                    {errors.maxlength && touched.maxlength ? <div className=\"invalid-feedback\">{errors.maxlength}</div> : null}\n                                 </FormGroup>\n                                 <Button type=\"submit\">Submit</Button>\n                              </Form>\n                           )}\n                        </Formik>\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </Fragment>\n      );\n   }\n}\n\nexport default Validation;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","import React from \"react\";\n\nconst ContentSubHeader = props => {\n   const { className } = props;\n   return (\n      <div\n         className={`content-sub-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentSubHeader;\n"],"sourceRoot":""}