{"version":3,"sources":["../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/react-table/es/utils.js","../node_modules/react-table/es/lifecycle.js","../node_modules/react-table/es/methods.js","../node_modules/react-table/es/pagination.js","../node_modules/react-table/es/defaultProps.js","../node_modules/react-table/es/propTypes.js","../node_modules/react-table/es/index.js","../node_modules/react-table/lib/hoc/treeTable/index.js","../node_modules/chance/chance.js","../node_modules/react-table/lib/hoc/selectTable/index.js"],"names":["global","base64","__webpack_require__","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","i","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","exports","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","module","_extends","assign","source","key","hasOwnProperty","_objectWithoutProperties","keys","utils","get","path","def","pathObj","makePathArray","reduce","current","pathPart","keyPart","cursor","shift","takeRight","last","orderBy","funcs","dirs","indexKey","sort","rowA","rowB","comp","desc","sortInt","range","remove","filter","o","r","splice","clone","JSON","parse","stringify","getFirstDefined","sum","makeTemplateComponent","compClass","displayName","cmp","_ref","children","className","rest","react_default","createElement","classnames_default","groupBy","xs","rv","resKey","splitProps","_ref2","style","compactObject","newObj","map","isSortingDesc","asc","normalizeComponent","Comp","params","fallback","getPrototypeOf","isReactComponent","asPx","flattenDeep","newArr","split","_createClass","defineProperties","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","lifecycle","Base","_Base","_class","instance","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","subClass","superClass","create","constructor","setPrototypeOf","_inherits","setStateWithData","getDataModel","getResolvedState","fireFetchData","nextProps","nextState","oldState","newState","forEach","defaultName","charAt","toUpperCase","optionName","columns","pivotBy","sorted","filtered","cb","_this2","newResolvedState","freezeWhenExpanded","frozen","expanded","showFilters","resolvedData","collapseOnSortingChange","sortedData","collapseOnDataChange","getSortedData","page","pages","manual","ceil","pageSize","setState","_slicedToArray","iterator","_n","_d","_e","_s","_i","next","done","err","sliceIterator","methods_extends","methods_createClass","_defineProperty","_toConsumableArray","arr2","methods","methods_classCallCheck","methods_possibleConstructorReturn","methods_inherits","state","dataChanged","_newState$pivotBy","resolveData","pivotIDKey","pivotValKey","subRowsKey","aggregatedKey","nestingLevelKey","originalKey","groupedByPivotKey","SubComponent","hasHeaderGroups","column","columnsWithExpander","expanderColumn","find","col","expander","some","col2","allDecoratedColumns","decorateAndAddToAll","parentColumn","decoratedColumn","dcol","expanderDefaults","maxWidth","minWidth","accessor","id","accessorString","row","console","warn","makeDecoratedColumn","visibleColumns","allVisibleColumns","pivotIndex","visibleSubColumns","show","findIndex","pivot","pivotColumns","pivotID","PivotParentColumn","prev","PivotGroupHeader","Header","pivotColumnGroup","pivotDefaults","pivoted","unshift","headerGroups","currentSpan","addHeader","accessRow","_row","level","aggregatingColumns","aggregate","groupRecursively","rows","groupedRows","entries","_ref3","rowGroup","_extends2","subRows","aggregationValues","values","resolvedState","defaultFilterMethod","sortMethodsByColumnID","sortMethod","sortData","filterData","onFetchData","_this3","filteredData","filteredSoFar","nextFilter","filterable","filterMethod","filterAll","_this4","orderByMethod","defaultSortMethod","minRows","getStateOrProp","_props","onPageChange","collapseOnPageChange","newPageSize","onPageSizeChange","_getResolvedState","currentRow","newPage","additive","_getResolvedState2","skipNextSort","defaultSortDesc","firstSortDirection","secondSortDirection","onSortedChange","newSorted","_existingIndex","existingIndex","existing","onFilteredChange","newFiltering","event","isTouch","_this5","stopPropagation","parentWidth","parentElement","getBoundingClientRect","width","pageX","changedTouches","trapEvents","currentlyResizing","startX","document","addEventListener","resizeColumnMoving","resizeColumnEnd","onResizedChange","_getResolvedState4","resized","newResized","newWidth","removeEventListener","pagination_createClass","pagination_extends","pagination_defaultButton","es_pagination","_Component","ReactTablePagination","pagination_classCallCheck","_this","pagination_possibleConstructorReturn","getSafePage","bind","changePage","applyPage","pagination_inherits","react","preventDefault","showPageSizeOptions","pageSizeOptions","showPageJump","canPrevious","canNext","_props$PreviousCompon","PreviousComponent","_props$NextComponent","NextComponent","onClick","disabled","previousText","pageText","onChange","onBlur","onKeyPress","which","keyCode","ofText","option","rowsText","nextText","defaultProps_extends","defaultProps_objectWithoutProperties","emptyObj","defaultProps","loading","showPagination","showPaginationTop","showPaginationBottom","defaultPageSize","sortable","multiSort","resizable","defaultSorted","defaultFiltered","defaultResized","defaultExpanded","pivotId","startsWith","onExpandedChange","getProps","getTableProps","getTheadGroupProps","getTheadGroupTrProps","getTheadGroupThProps","getTheadProps","getTheadTrProps","getTheadThProps","getTheadFilterProps","getTheadFilterTrProps","getTheadFilterThProps","getTbodyProps","getTrGroupProps","getTrProps","getTdProps","getTfootProps","getTfootTrProps","getTfootTdProps","getPaginationProps","getLoadingProps","getNoDataProps","getResizerProps","Cell","Footer","Aggregated","Pivot","PivotValue","Expander","Filter","headerClassName","headerStyle","getHeaderProps","footerClassName","footerStyle","getFooterProps","loadingText","noDataText","TableComponent","role","TheadComponent","TbodyComponent","TrGroupComponent","TrComponent","ThComponent","_ref4","toggleSort","tabIndex","TdComponent","_ref5","TfootComponent","FilterComponent","_ref6","_onChange","ExpanderComponent","_ref7","isExpanded","PivotValueComponent","_ref8","AggregatedComponent","_ref9","previewValues","PivotComponent","PaginationComponent","LoadingComponent","_ref10","-active","NoDataComponent","ResizerComponent","PadRowComponent","propTypes","prop_types_default","any","bool","number","object","func","arrayOf","shape","oneOfType","element","node","es_slicedToArray","es_extends","es_createClass","es_ReactTable","_Methods","ReactTable","es_classCallCheck","es_possibleConstructorReturn","getPropOrState","getMinRows","sortColumn","filterColumn","resizeColumnStart","es_inherits","startRow","endRow","pageRows","padRows","hasColumnFooter","hasFilters","_recurseRowsViewIndex3","recurseRowsViewIndex","index","rowWithViewIndex","_viewIndex","newPath","_recurseRowsViewIndex","_recurseRowsViewIndex2","_recurseRowsViewIndex4","rowMinWidth","resizedColumn","rowIndex","finalState","rootProps","tableProps","tBodyProps","loadingProps","noDataProps","makeHeaderGroup","resizedValue","flex","theadGroupThProps","columnHeaderProps","classes","styles","flexStyles","makeHeader","resizedCol","theadThProps","isResizable","resizer","onMouseDown","onTouchStart","isSortable","shiftKey","makeFilter","theadFilterThProps","ResolvedFilterComponent","isFilterable","makePadColumn","tdProps","columnProps","makePadRow","trGroupProps","trProps","makeColumnFooter","tFootTdProps","columnFooterProps","makeTable","pagination","paginationProps","makePagination","theadGroupProps","theadGroupTrProps","makeHeaderGroups","theadProps","theadTrProps","makeHeaders","theadFilterProps","theadFilterTrProps","makeFilters","makePageRow","rowInfo","original","viewIndex","nestingPath","aggregated","groupedByPivot","i2","cellInfo","useOnExpanderClick","isBranch","isPreview","resolvedCell","ResolvedAggregatedComponent","ResolvedExpanderComponent","ResolvedPivotValueComponent","DefaultResolvedPivotComponent","ResolvedPivotComponent","expandable","resolvedOnExpanderClick","newExpanded","interactionProps","tFootProps","tFootTrProps","makeColumnFooters","__webpack_exports__","_react","_react2","__esModule","default","Component","_temp","_initialiseProps","wrapper","_React$Component","RTTreeTable","getWrappedInstance","treeTableIndent","extra","ref","wrappedInstance","ri","cell","paddingLeft","borderBottom","ci","__WEBPACK_AMD_DEFINE_RESULT__","MAX_INT","CHARS_LOWER","CHARS_UPPER","HEX_POOL","NUMBERS","UnsupportedError","message","name","Chance","seed","random","seedling","hash","k","mt","mersenne_twister","bimd5","blueimp_md5","initOptions","options","defaults","testRange","test","errorMessage","VERSION","diceFn","natural","btoa","input","likelihood","animal","pick","animalTypeArray","character","letters","pool","casing","alpha","numeric","symbols","floating","fixed","precision","num_fixed","integer","toFixed","parseFloat","numerals","prime","lastPrime","primes","is_prime","targetPrimes","sqrt","hex","letter","content","capitalize","word","mixin","func_name","unique","fn","comparator","result","count","MAX_DUPLICATES","clonedParams","pad","shuffle","pickone","pickset","selected_source_index","new_array","source_indexes","_","last_source_index","weighted","weights","weightIndex","chosenIdx","selected","total","lastGoodIdx","chosen","paragraph","sentences","sentence","text","words","punctuation","syllable","chr","consonants","syllables","substring","age","ageRange","birthday","currentYear","Date","getFullYear","setFullYear","year","date","cpf","formatted","d1","d2","cnpj","first","gender","nationality","profession","rank","company","extraGenders","allLastNames","lastNames","israelId","thisDigit","mrz","checkDigit","multipliers","runningTotal","idx","opts","issuer","passportNumber","dob","expiry","generate","getMonth","getDate","middle","middle_initial","prefix","suffix","name_prefixes","prefixes","abbreviation","name_prefix","full","HIDN","idn","ssn","dash","ssnFour","dashes","aadhar","whiteSpace","onlyLastFour","separatedByWhiteSpace","name_suffixes","name_suffix","nationalities","android_id","apple_token","wp8_anid2","wp7_anid","guid","bb_pin","avatar","protocol","email","fileExtension","rating","http","https","g","pg","404","mm","identicon","monsterid","wavatar","retro","blank","bmp","gif","jpg","png","md5","color","gray","delimiter","rgb","hasAlpha","rgbValue","alphaChannel","min_alpha","max_alpha","isGrayscale","min_rgb","max_rgb","min_green","max_green","min_blue","max_blue","withHash","symbol","hexstring","format","min_red","max_red","colorValue","grayscale","domain","tld","fbid","google_analytics","hashtag","ip","ipv6","klout","semver","include_prerelease","prerelease","rpg","tlds","twitter","url","extension","domain_prefix","extensions","port","locale","region","locales","loremPicsum","greyscale","height","blurred","query","address","street","altitude","areacode","parens","city","coordinates","latitude","longitude","countries","country","raw","depth","geohash","geojson","phone","numPick","ukNum","section","sections","area","mobile","exchange","subscriber","areaCode","mcdu","postal","postcode","counties","county","provinces","province","states","us_states_and_dc","territories","armed_forces","short_suffix","street_suffix","street_suffixes","zip","plusfour","ampm","date_string","american","getTime","month","daysInMonth","days","day","hour","twentyfour","minute","second","millisecond","hammertime","months","timestamp","weekday","weekdays","weekday_only","cc","to_generate","cc_type","luhn_calculate","cc_types","types","short_name","currency_types","currency","timezones","timezone","currency_pair","returnAsString","currencies","acc","item","dollar","cents","euro","toLocaleString","exp","exp_year","exp_month","future","month_int","curMonth","curYear","vat","it_vat","iban","cf","name_generator","isLast","temp","return_value","date_generator","range1","range2","evens","digit","checkdigit_generator","pl_pesel","controlNumber","pl_nip","pl_regon","note","notes","scales","naturals","flats","sharps","all","flatKey","sharpKey","midi_note","chord_quality","chord_qualities","jazz","chord","tempo","coin","d4","d6","d8","d10","d12","d20","d30","d100","thrown","bits","rolls","p","version","guid_pool","luhn_check","digits","reverse","l","file","fileName","fileOptions","typeRange","extensionObjectCollection","fileType","firstNames","male","en","it","nl","fr","female","uk","de","jp","es","postcodeAreas","ca","locale_languages","locale_regions","country_regions","us","colorNames","raster","vector","3d","abbr","isdst","utc","animals","ocean","desert","grassland","forest","farm","pet","zoo","o_hasOwnProperty","o_keys","copyObject","_target","_copyArray","_copyObject","mac_address","separator","networkVersion","normal","mean","dev","normal_pool","u","v","performanceCounter","round","radio","fl","side","tv","MersenneTwister","BlueImpMD5","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mti","init_genrand","init_by_array","init_key","key_length","genrand_int32","mag01","kk","genrand_int31","genrand_real1","genrand_real3","genrand_res53","safe_add","lsw","bit_roll","cnt","md5_cmn","q","t","md5_ff","md5_gg","md5_hh","md5_ii","binl_md5","olda","oldb","oldc","oldd","binl2rstr","rstr2binl","rstr_md5","rstr_hmac_md5","bkey","ipad","opad","rstr2hex","str2rstr_utf8","unescape","encodeURIComponent","raw_md5","hex_md5","raw_hmac_md5","hex_hmac_md5","importScripts","chance","window","defaultSelectInputComponent","selectType","RTSelectTable","keyField","toggleSelection","inputProps","isSelected","SelectInputComponent","_props2","toggleAll","selectAll","SelectAllInputComponent","_props3","originalCols","selectWidth","headSelector","rowSelector","textAlign"],"mappings":"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A,iBA2CAvQ,KAAAg3B,QAAAkT,MAIA,IAAAtoC,EAAA,CACAyoC,WAAA,CACAC,KAAA,CACAC,GAAA,6lEAEAC,GAAA,irCAEAC,GAAA,kzCAEAC,GAAA,85KAEAC,OAAA,CACAJ,GAAA,4mEAEAC,GAAA,ogDAEAC,GAAA,qoCAEAC,GAAA,m4JAGA1Q,UAAA,CACAuQ,GAAA,k8IAEAC,GAAA,otTAEAC,GAAA,6zEAEAG,GAAA,o8IAEAC,GAAA,46BAEAC,GAAA,05BAEAC,GAAA,64BAEAL,GAAA,y8DAGAM,cAAA,EACA79B,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,KACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,MACK,CACLA,KAAA,OAGA00B,UAAA,EACA5O,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,oBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,iCACAqI,aAAA,MACK,CACLrI,KAAA,yBACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,wBACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,2BACAqI,aAAA,MACK,CACLrI,KAAA,kBACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,0BACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,sBACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,qBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,oBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,8BACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,sBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,kBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,kBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,2BACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,0BACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,iCACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,kBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,yCACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,oBACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,oBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,wBACAqI,aAAA,MACK,CACLrI,KAAA,2BACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,oBACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,yBACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,wBACAqI,aAAA,MACK,CACLrI,KAAA,sBACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,kBACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,OAEA0H,SAAA,CAEA4H,GAAA,EACA3X,KAAA,gCACO,CACPA,KAAA,iBACO,CACPA,KAAA,YACO,CACPA,KAAA,SACO,CACPA,KAAA,WACO,CACPA,KAAA,yBACO,CACPA,KAAA,aACO,CACPA,KAAA,eACO,CACPA,KAAA,oBACO,CACPA,KAAA,mBACO,CACPA,KAAA,WACO,CACPA,KAAA,mBACO,CACPA,KAAA,kBACO,CACPA,KAAA,mBACO,CACPA,KAAA,wBACO,CACPA,KAAA,cACO,CACPA,KAAA,iBACO,CACPA,KAAA,6BACO,CACPA,KAAA,oBACO,CACPA,KAAA,SACO,CACPA,KAAA,YACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,eACO,CACPA,KAAA,iBACO,CACPA,KAAA,oBACO,CACPA,KAAA,sBACO,CACPA,KAAA,iBACO,CACPA,KAAA,WACO,CACPA,KAAA,cACO,CACPA,KAAA,gBACO,CACPA,KAAA,SACO,CACPA,KAAA,cACO,CACPA,KAAA,SACO,CACPA,KAAA,UACO,CACPA,KAAA,yBACO,CACPA,KAAA,UACO,CACPA,KAAA,gBACO,CACPA,KAAA,4BACO,CACPA,KAAA,eACO,CACPA,KAAA,cACO,CACPA,KAAA,SACO,CACPA,KAAA,WACO,CACPA,KAAA,QACO,CACPA,KAAA,cACO,CACPA,KAAA,mBACO,CACPA,KAAA,kBACO,CACPA,KAAA,sBACO,CACPA,KAAA,SACO,CACPA,KAAA,WACO,CACPA,KAAA,UACO,CACPA,KAAA,aACO,CACPA,KAAA,cACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,aACO,CACPA,KAAA,QACO,CACPA,KAAA,iBACO,CACPA,KAAA,mBACO,CACPA,KAAA,QACO,CACPA,KAAA,cACO,CACPA,KAAA,aACO,CACPA,KAAA,kBACO,CACPA,KAAA,gBACO,CACPA,KAAA,WACO,CACPA,KAAA,SACO,CACPA,KAAA,UACO,CACPA,KAAA,cACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,SACO,CACPA,KAAA,WACO,CACPA,KAAA,2BACO,CACPA,KAAA,sBACO,CACPA,KAAA,kBACO,CACPA,KAAA,mBACO,CACPA,KAAA,oBACO,CACPA,KAAA,kBACO,CACPA,KAAA,cACO,CACPA,KAAA,mBACO,CACPA,KAAA,eACO,CACPA,KAAA,iBACO,CACPA,KAAA,qBACO,CACPA,KAAA,gBACO,CACPA,KAAA,YACO,CACPA,KAAA,SACO,CACPA,KAAA,cACO,CACPA,KAAA,SACO,CACPA,KAAA,WACO,CACPA,KAAA,wBACO,CACPA,KAAA,WACO,CACPA,KAAA,oBACO,CACPA,KAAA,cACO,CACPA,KAAA,UACO,CACPA,KAAA,YACO,CACPA,KAAA,mBACO,CACPA,KAAA,yBACO,CACPA,KAAA,mBACO,CACPA,KAAA,eACO,CACPA,KAAA,mBACO,CACPA,KAAA,iBACO,CACPA,KAAA,iBACO,CACPA,KAAA,oBACO,CACPA,KAAA,kBACO,CACPA,KAAA,eACO,CACPA,KAAA,WACO,CACPA,KAAA,UACO,CACPA,KAAA,WACO,CACPA,KAAA,sBACO,CACPA,KAAA,YACO,CACPA,KAAA,UACO,CACPA,KAAA,iBACO,CACPA,KAAA,cACO,CACPA,KAAA,gBACO,CACPA,KAAA,kBACO,CACPA,KAAA,kBACO,CACPA,KAAA,gBACO,CACPA,KAAA,iBACO,CACPA,KAAA,eACO,CACPA,KAAA,kBACO,CACPA,KAAA,iBACO,CACPA,KAAA,aACO,CACPA,KAAA,0BACO,CACPA,KAAA,aACO,CACPA,KAAA,kBACO,CACPA,KAAA,WACO,CACPA,KAAA,UAGAiQ,UAAA,CACA+H,GAAA,EACAhY,KAAA,UACAqI,aAAA,MACO,CACPrI,KAAA,mBACAqI,aAAA,MACO,CACPrI,KAAA,WACAqI,aAAA,MACO,CACPrI,KAAA,gBACAqI,aAAA,MACO,CACPrI,KAAA,4BACAqI,aAAA,MACO,CACPrI,KAAA,cACAqI,aAAA,MACO,CACPrI,KAAA,UACAqI,aAAA,MACO,CACPrI,KAAA,uBACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,MACO,CACPrI,KAAA,eACAqI,aAAA,MAIA,CACArI,KAAA,wBACAqI,aAAA,MACO,CACPrI,KAAA,UACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,OAEAkP,GAAA,EACAvX,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,cACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,wBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,aACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,oBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,KACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,eACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,kBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,eACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,YACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,KACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,kBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,OACAqI,aAAA,OACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,QACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,WACAqI,aAAA,KACAnuB,KAAA,GACO,CACP8lB,KAAA,SACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,gBACAqI,aAAA,KACAnuB,KAAA,KACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,IACO,CACP8lB,KAAA,UACAqI,aAAA,KACAnuB,KAAA,MAIAkvB,cAAA,EACApJ,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,eACK,CACLA,KAAA,YACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,eACK,CACLA,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,eACK,CACLA,KAAA,aACK,CACLA,KAAA,aACK,CACLA,KAAA,YACK,CACLA,KAAA,cACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,aACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,aACK,CACLA,KAAA,eACK,CACLA,KAAA,YACK,CACLA,KAAA,gBACK,CACLA,KAAA,mBACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,eACK,CACLA,KAAA,YACK,CACLA,KAAA,SACK,CACLA,KAAA,WACK,CACLA,KAAA,SACK,CACLA,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,SACK,CACLA,KAAA,iBACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,sBACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,UACK,CACLA,KAAA,YACK,CACLA,KAAA,SACK,CACLA,KAAA,aACK,CACLA,KAAA,cACK,CACLA,KAAA,mBACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,iBACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,cACK,CACLA,KAAA,aACK,CACLA,KAAA,UACK,CACLA,KAAA,cACK,CACLA,KAAA,WACK,CACLA,KAAA,SACK,CACLA,KAAA,SACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,eACK,CACLA,KAAA,UACK,CACLA,KAAA,wBACK,CACLA,KAAA,WACK,CACLA,KAAA,UACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,UACK,CACLA,KAAA,mBACK,CACLA,KAAA,cACK,CACLA,KAAA,gBACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,YACK,CACLA,KAAA,UACK,CACLA,KAAA,WACK,CACLA,KAAA,eACK,CACLA,KAAA,eACK,CACLA,KAAA,aACK,CACLA,KAAA,WACK,CACLA,KAAA,eACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,iBACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,YACK,CACLA,KAAA,gBACK,CACLA,KAAA,kBACK,CACLA,KAAA,aACK,CACLA,KAAA,SACK,CACLA,KAAA,aACK,CACLA,KAAA,WACK,CACLA,KAAA,cACK,CACLA,KAAA,qBACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,UACK,CACLA,KAAA,cACK,CACLA,KAAA,UACK,CACLA,KAAA,UACK,CACLA,KAAA,WACK,CACLA,KAAA,WACK,CACLA,KAAA,gBACK,CACLA,KAAA,cACK,CACLA,KAAA,UACK,CACLA,KAAA,gBACK,CACLA,KAAA,cACK,CACLA,KAAA,SACK,CACLA,KAAA,YACK,CACLA,KAAA,cACK,CACLA,KAAA,WACK,CACLA,KAAA,eACK,CACLA,KAAA,kBACK,CACLA,KAAA,eACK,CACLA,KAAA,aACK,CACLA,KAAA,aACK,CACLA,KAAA,oBACK,CACLA,KAAA,UACK,CACLA,KAAA,iBACK,CACLA,KAAA,gBACK,CACLA,KAAA,WACK,CACLA,KAAA,cACK,CACLA,KAAA,YACK,CACLA,KAAA,aACK,CACLA,KAAA,SACK,CACLA,KAAA,WACK,CACLA,KAAA,SACK,CACLA,KAAA,UACK,CACLA,KAAA,aACK,CACLA,KAAA,SACK,CACLA,KAAA,aACK,CACLA,KAAA,QACK,CACLA,KAAA,YACK,CACLA,KAAA,UACK,CACLA,KAAA,6BACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,YACK,CACLA,KAAA,WACK,CACLA,KAAA,aACK,CACLA,KAAA,YACK,CACLA,KAAA,eACK,CACLA,KAAA,aACK,CACLA,KAAA,cACK,CACLA,KAAA,QACK,CACLA,KAAA,WACK,CACLA,KAAA,UACK,CACLA,KAAA,aAGAiY,iBAAA,05BAEAC,eAAA,+wIACA9H,iBAAA,EACApQ,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,SACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,eACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,QACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,MACK,CACLrI,KAAA,WACAqI,aAAA,MACK,CACLrI,KAAA,aACAqI,aAAA,MACK,CACLrI,KAAA,gBACAqI,aAAA,MACK,CACLrI,KAAA,YACAqI,aAAA,MACK,CACLrI,KAAA,UACAqI,aAAA,OAEAgI,YAAA,EACArQ,KAAA,iBACAqI,aAAA,MACK,CACLrI,KAAA,iCACAqI,aAAA,MACK,CACLrI,KAAA,OACAqI,aAAA,MACK,CACLrI,KAAA,mBACAqI,aAAA,MACK,CACLrI,KAAA,2BACAqI,aAAA,MACK,CACLrI,KAAA,cACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,OAEAiI,aAAA,EACAtQ,KAAA,sBACAqI,aAAA,MACK,CACLrI,KAAA,uBACAqI,aAAA,MACK,CACLrI,KAAA,4BACAqI,aAAA,OAEA8P,gBAAA,CACAZ,GAAA,EACAvX,KAAA,gBACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,OACO,CACPrI,KAAA,YACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,sBACAqI,aAAA,OACO,CACPrI,KAAA,wBACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,iBACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,aACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,SAGAoI,gBAAA,CACA2H,GAAA,EACApY,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,YACAqI,aAAA,QACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,YACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,OACO,CACPrI,KAAA,MACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,MACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,WACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,MACAqI,aAAA,QAEAkP,GAAA,EACAvX,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,SACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,aACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,SACO,CACPrI,KAAA,SACAqI,aAAA,UACO,CACPrI,KAAA,SACAqI,aAAA,UACO,CACPrI,KAAA,SACAqI,aAAA,UACO,CACPrI,KAAA,WACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,QACO,CACPrI,KAAA,YACAqI,aAAA,SACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,SACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,SACO,CACPrI,KAAA,YACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,SACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,SACO,CACPrI,KAAA,UACAqI,aAAA,WACO,CACPrI,KAAA,cACAqI,aAAA,QACO,CACPrI,KAAA,aACAqI,aAAA,OACO,CACPrI,KAAA,mBACAqI,aAAA,OACO,CACPrI,KAAA,aACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,cACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,aACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,YACAqI,aAAA,QACO,CACPrI,KAAA,YACAqI,aAAA,aACO,CACPrI,KAAA,WACAqI,aAAA,WACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,oBACAqI,aAAA,eACO,CACPrI,KAAA,cACAqI,aAAA,SACO,CACPrI,KAAA,SACAqI,aAAA,SACO,CACPrI,KAAA,WACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,SACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,MACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,OACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,YACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,UACAqI,aAAA,SACO,CACPrI,KAAA,SACAqI,aAAA,QACO,CACPrI,KAAA,YACAqI,aAAA,SACO,CACPrI,KAAA,UACAqI,aAAA,SACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,eACAqI,aAAA,SACO,CACPrI,KAAA,SACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,UACO,CACPrI,KAAA,YACAqI,aAAA,WACO,CACPrI,KAAA,WACAqI,aAAA,SACO,CACPrI,KAAA,MACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,QACO,CACPrI,KAAA,WACAqI,aAAA,UACO,CACPrI,KAAA,SACAqI,aAAA,SAEAsP,GAAA,EACA3X,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,WACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,OACO,CACPrI,KAAA,UACAqI,aAAA,QACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,MACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,QACAqI,aAAA,OACO,CACPrI,KAAA,OACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,MACO,CACPrI,KAAA,SACAqI,aAAA,MACO,CACPrI,KAAA,UACAqI,aAAA,OACO,CACPrI,KAAA,SACAqI,aAAA,SAGAqJ,OAAA,EACA1R,KAAA,UACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IAEA,CACAlR,KAAA,WACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,QACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,QACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,MACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,OACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,OACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,SACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,YACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,UACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,WACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,IACK,CACLlR,KAAA,WACAqS,WAAA,MACAtQ,QAAA,KACAmP,KAAA,KAGAiB,SAAA,EACAnS,KAAA,mBACAqS,WAAA,OACApK,OAAA,KACAz7B,OAAA,IACK,CACLwzB,KAAA,WACAqS,WAAA,WACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,iBACAqS,WAAA,aACApK,OAAA,KACAz7B,OAAA,IACK,CACLwzB,KAAA,4BACAqS,WAAA,UACApK,OAAA,MACAz7B,OAAA,IACK,CACLwzB,KAAA,sBACAqS,WAAA,YACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,4BACAqS,WAAA,SACApK,OAAA,KACAz7B,OAAA,IACK,CACLwzB,KAAA,qCACAqS,WAAA,QACApK,OAAA,KACAz7B,OAAA,IACK,CACLwzB,KAAA,gBACAqS,WAAA,WACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,eACAqS,WAAA,WACApK,OAAA,MACAz7B,OAAA,IACK,CACLwzB,KAAA,MACAqS,WAAA,MACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,QACAqS,WAAA,QACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,UACAqS,WAAA,UACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,aACAqS,WAAA,KACApK,OAAA,KACAz7B,OAAA,IACK,CACLwzB,KAAA,OACAqS,WAAA,OACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,SACAqS,WAAA,SACApK,OAAA,OACAz7B,OAAA,IACK,CACLwzB,KAAA,OACAqS,WAAA,OACApK,OAAA,IACAz7B,OAAA,IACK,CACLwzB,KAAA,gBACAqS,WAAA,WACApK,OAAA,OACAz7B,OAAA,KAGA8lC,eAAA,EACAp4B,KAAA,MACA8lB,KAAA,+BACK,CACL9lB,KAAA,MACA8lB,KAAA,uBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,gCACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,wBACK,CACL9lB,KAAA,MACA8lB,KAAA,4CACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,4BACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,wBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,cACK,CACL9lB,KAAA,MACA8lB,KAAA,uBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,yBACK,CACL9lB,KAAA,MACA8lB,KAAA,aACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,yBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,2BACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,yBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,qCACK,CACL9lB,KAAA,MACA8lB,KAAA,wBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,cACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,cACK,CACL9lB,KAAA,MACA8lB,KAAA,aACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,aACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,yBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,YACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,wBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,sCACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,aACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,yBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,kBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,0BACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,gBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,oBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,wCACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,uBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,sBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,eACK,CACL9lB,KAAA,MACA8lB,KAAA,8BACK,CACL9lB,KAAA,MACA8lB,KAAA,iBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,qBACK,CACL9lB,KAAA,MACA8lB,KAAA,mBACK,CACL9lB,KAAA,MACA8lB,KAAA,m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","file":"static/js/97.7f880232.chunk.js","sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classnames from 'classnames'; //\n\nexport default {\n  get: get,\n  set: set,\n  takeRight: takeRight,\n  last: last,\n  orderBy: orderBy,\n  range: range,\n  remove: remove,\n  clone: clone,\n  getFirstDefined: getFirstDefined,\n  sum: sum,\n  makeTemplateComponent: makeTemplateComponent,\n  groupBy: groupBy,\n  isArray: isArray,\n  splitProps: splitProps,\n  compactObject: compactObject,\n  isSortingDesc: isSortingDesc,\n  normalizeComponent: normalizeComponent,\n  asPx: asPx\n};\n\nfunction get(obj, path, def) {\n  if (!path) {\n    return obj;\n  }\n\n  var pathObj = makePathArray(path);\n  var val = void 0;\n\n  try {\n    val = pathObj.reduce(function (current, pathPart) {\n      return current[pathPart];\n    }, obj);\n  } catch (e) {// continue regardless of error\n  }\n\n  return typeof val !== 'undefined' ? val : def;\n}\n\nfunction set() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var path = arguments[1];\n  var value = arguments[2];\n  var keys = makePathArray(path);\n  var keyPart = void 0;\n  var cursor = obj;\n\n  while ((keyPart = keys.shift()) && keys.length) {\n    if (!cursor[keyPart]) {\n      cursor[keyPart] = {};\n    }\n\n    cursor = cursor[keyPart];\n  }\n\n  cursor[keyPart] = value;\n  return obj;\n}\n\nfunction takeRight(arr, n) {\n  var start = n > arr.length ? 0 : arr.length - n;\n  return arr.slice(start);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nfunction range(n) {\n  var arr = [];\n\n  for (var i = 0; i < n; i += 1) {\n    arr.push(n);\n  }\n\n  return arr;\n}\n\nfunction orderBy(arr, funcs, dirs, indexKey) {\n  return arr.sort(function (rowA, rowB) {\n    for (var i = 0; i < funcs.length; i += 1) {\n      var comp = funcs[i];\n      var desc = dirs[i] === false || dirs[i] === 'desc';\n      var sortInt = comp(rowA, rowB);\n\n      if (sortInt) {\n        return desc ? -sortInt : sortInt;\n      }\n    } // Use the row index for tie breakers\n\n\n    return dirs[0] ? rowA[indexKey] - rowB[indexKey] : rowB[indexKey] - rowA[indexKey];\n  });\n}\n\nfunction remove(a, b) {\n  return a.filter(function (o, i) {\n    var r = b(o);\n\n    if (r) {\n      a.splice(i, 1);\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction clone(a) {\n  try {\n    return JSON.parse(JSON.stringify(a, function (key, value) {\n      if (typeof value === 'function') {\n        return value.toString();\n      }\n\n      return value;\n    }));\n  } catch (e) {\n    return a;\n  }\n}\n\nfunction getFirstDefined() {\n  for (var i = 0; i < arguments.length; i += 1) {\n    if (typeof (arguments.length <= i ? undefined : arguments[i]) !== 'undefined') {\n      return arguments.length <= i ? undefined : arguments[i];\n    }\n  }\n}\n\nfunction sum(arr) {\n  return arr.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\n\nfunction makeTemplateComponent(compClass, displayName) {\n  if (!displayName) {\n    throw new Error('No displayName found for template component:', compClass);\n  }\n\n  var cmp = function cmp(_ref) {\n    var children = _ref.children,\n        className = _ref.className,\n        rest = _objectWithoutProperties(_ref, ['children', 'className']);\n\n    return React.createElement('div', _extends({\n      className: classnames(compClass, className)\n    }, rest), children);\n  };\n\n  cmp.displayName = displayName;\n  return cmp;\n}\n\nfunction groupBy(xs, key) {\n  return xs.reduce(function (rv, x, i) {\n    var resKey = typeof key === 'function' ? key(x, i) : x[key];\n    rv[resKey] = isArray(rv[resKey]) ? rv[resKey] : [];\n    rv[resKey].push(x);\n    return rv;\n  }, {});\n}\n\nfunction asPx(value) {\n  value = Number(value);\n  return Number.isNaN(value) ? null : value + 'px';\n}\n\nfunction isArray(a) {\n  return Array.isArray(a);\n} // ########################################################################\n// Non-exported Helpers\n// ########################################################################\n\n\nfunction makePathArray(obj) {\n  return flattenDeep(obj).join('.').replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n}\n\nfunction flattenDeep(arr) {\n  var newArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!isArray(arr)) {\n    newArr.push(arr);\n  } else {\n    for (var i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr);\n    }\n  }\n\n  return newArr;\n}\n\nfunction splitProps(_ref2) {\n  var className = _ref2.className,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, ['className', 'style']);\n\n  return {\n    className: className,\n    style: style,\n    rest: rest || {}\n  };\n}\n\nfunction compactObject(obj) {\n  var newObj = {};\n\n  if (obj) {\n    Object.keys(obj).map(function (key) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key] !== undefined && typeof obj[key] !== 'undefined') {\n        newObj[key] = obj[key];\n      }\n\n      return true;\n    });\n  }\n\n  return newObj;\n}\n\nfunction isSortingDesc(d) {\n  return !!(d.sort === 'desc' || d.desc === true || d.asc === false);\n}\n\nfunction normalizeComponent(Comp) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Comp;\n  return typeof Comp === 'function' ? Object.getPrototypeOf(Comp).isReactComponent ? React.createElement(Comp, params) : Comp(params) : fallback;\n}","var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexport default (function (Base) {\n  return function (_Base) {\n    _inherits(_class, _Base);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        this.setStateWithData(this.getDataModel(this.getResolvedState(), true));\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.fireFetchData();\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps, nextState) {\n        var oldState = this.getResolvedState();\n        var newState = this.getResolvedState(nextProps, nextState); // Do a deep compare of new and old `defaultOption` and\n        // if they are different reset `option = defaultOption`\n\n        var defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n        defaultableOptions.forEach(function (x) {\n          var defaultName = 'default' + (x.charAt(0).toUpperCase() + x.slice(1));\n\n          if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n            newState[x] = newState[defaultName];\n          }\n        }); // If they change these table options, we need to reset defaults\n        // or else we could get into a state where the user has changed the UI\n        // and then disabled the ability to change it back.\n        // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n\n        var resettableOptions = ['sortable', 'filterable', 'resizable'];\n        resettableOptions.forEach(function (x) {\n          if (oldState[x] !== newState[x]) {\n            var baseName = x.replace('able', '');\n            var optionName = baseName + 'ed';\n            var defaultName = 'default' + (optionName.charAt(0).toUpperCase() + optionName.slice(1));\n            newState[optionName] = newState[defaultName];\n          }\n        }); // Props that trigger a data update\n\n        if (oldState.data !== newState.data || oldState.columns !== newState.columns || oldState.pivotBy !== newState.pivotBy || oldState.sorted !== newState.sorted || oldState.filtered !== newState.filtered) {\n          this.setStateWithData(this.getDataModel(newState, oldState.data !== newState.data));\n        }\n      }\n    }, {\n      key: 'setStateWithData',\n      value: function setStateWithData(newState, cb) {\n        var _this2 = this;\n\n        var oldState = this.getResolvedState();\n        var newResolvedState = this.getResolvedState({}, newState);\n        var freezeWhenExpanded = newResolvedState.freezeWhenExpanded; // Default to unfrozen state\n\n        newResolvedState.frozen = false; // If freezeWhenExpanded is set, check for frozen conditions\n\n        if (freezeWhenExpanded) {\n          // if any rows are expanded, freeze the existing data and sorting\n          var keys = Object.keys(newResolvedState.expanded);\n\n          for (var i = 0; i < keys.length; i += 1) {\n            if (newResolvedState.expanded[keys[i]]) {\n              newResolvedState.frozen = true;\n              break;\n            }\n          }\n        } // If the data isn't frozen and either the data or\n        // sorting model has changed, update the data\n\n\n        if (oldState.frozen && !newResolvedState.frozen || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData) {\n          // Handle collapseOnsortedChange & collapseOnDataChange\n          if (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || oldState.sortedData && !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData && this.props.collapseOnDataChange) {\n            newResolvedState.expanded = {};\n          }\n\n          Object.assign(newResolvedState, this.getSortedData(newResolvedState));\n        } // Set page to 0 if filters change\n\n\n        if (oldState.filtered !== newResolvedState.filtered) {\n          newResolvedState.page = 0;\n        } // Calculate pageSize all the time\n\n\n        if (newResolvedState.sortedData) {\n          newResolvedState.pages = newResolvedState.manual ? newResolvedState.pages : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n          newResolvedState.page = Math.max(newResolvedState.page >= newResolvedState.pages ? newResolvedState.pages - 1 : newResolvedState.page, 0);\n        }\n\n        return this.setState(newResolvedState, function () {\n          if (cb) {\n            cb();\n          }\n\n          if (oldState.page !== newResolvedState.page || oldState.pageSize !== newResolvedState.pageSize || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered) {\n            _this2.fireFetchData();\n          }\n        });\n      }\n    }]);\n\n    return _class;\n  }(Base);\n});","var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport _ from './utils';\nexport default (function (Base) {\n  return function (_Base) {\n    _inherits(_class, _Base);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'getResolvedState',\n      value: function getResolvedState(props, state) {\n        var resolvedState = _extends({}, _.compactObject(this.state), _.compactObject(this.props), _.compactObject(state), _.compactObject(props));\n\n        return resolvedState;\n      }\n    }, {\n      key: 'getDataModel',\n      value: function getDataModel(newState, dataChanged) {\n        var _this2 = this;\n\n        var columns = newState.columns,\n            _newState$pivotBy = newState.pivotBy,\n            pivotBy = _newState$pivotBy === undefined ? [] : _newState$pivotBy,\n            data = newState.data,\n            resolveData = newState.resolveData,\n            pivotIDKey = newState.pivotIDKey,\n            pivotValKey = newState.pivotValKey,\n            subRowsKey = newState.subRowsKey,\n            aggregatedKey = newState.aggregatedKey,\n            nestingLevelKey = newState.nestingLevelKey,\n            originalKey = newState.originalKey,\n            indexKey = newState.indexKey,\n            groupedByPivotKey = newState.groupedByPivotKey,\n            SubComponent = newState.SubComponent; // Determine Header Groups\n\n        var hasHeaderGroups = false;\n        columns.forEach(function (column) {\n          if (column.columns) {\n            hasHeaderGroups = true;\n          }\n        });\n        var columnsWithExpander = [].concat(_toConsumableArray(columns));\n        var expanderColumn = columns.find(function (col) {\n          return col.expander || col.columns && col.columns.some(function (col2) {\n            return col2.expander;\n          });\n        }); // The actual expander might be in the columns field of a group column\n\n        if (expanderColumn && !expanderColumn.expander) {\n          expanderColumn = expanderColumn.columns.find(function (col) {\n            return col.expander;\n          });\n        } // If we have SubComponent's we need to make sure we have an expander column\n\n\n        if (SubComponent && !expanderColumn) {\n          expanderColumn = {\n            expander: true\n          };\n          columnsWithExpander = [expanderColumn].concat(_toConsumableArray(columnsWithExpander));\n        }\n\n        var makeDecoratedColumn = function makeDecoratedColumn(column, parentColumn) {\n          var dcol = void 0;\n\n          if (column.expander) {\n            dcol = _extends({}, _this2.props.column, _this2.props.expanderDefaults, column);\n          } else {\n            dcol = _extends({}, _this2.props.column, column);\n          } // Ensure minWidth is not greater than maxWidth if set\n\n\n          if (dcol.maxWidth < dcol.minWidth) {\n            dcol.minWidth = dcol.maxWidth;\n          }\n\n          if (parentColumn) {\n            dcol.parentColumn = parentColumn;\n          } // First check for string accessor\n\n\n          if (typeof dcol.accessor === 'string') {\n            dcol.id = dcol.id || dcol.accessor;\n            var accessorString = dcol.accessor;\n\n            dcol.accessor = function (row) {\n              return _.get(row, accessorString);\n            };\n\n            return dcol;\n          } // Fall back to functional accessor (but require an ID)\n\n\n          if (dcol.accessor && !dcol.id) {\n            console.warn(dcol);\n            throw new Error('A column id is required if using a non-string accessor for column above.');\n          } // Fall back to an undefined accessor\n\n\n          if (!dcol.accessor) {\n            dcol.accessor = function () {\n              return undefined;\n            };\n          }\n\n          return dcol;\n        };\n\n        var allDecoratedColumns = []; // Decorate the columns\n\n        var decorateAndAddToAll = function decorateAndAddToAll(column, parentColumn) {\n          var decoratedColumn = makeDecoratedColumn(column, parentColumn);\n          allDecoratedColumns.push(decoratedColumn);\n          return decoratedColumn;\n        };\n\n        var decoratedColumns = columnsWithExpander.map(function (column) {\n          if (column.columns) {\n            return _extends({}, column, {\n              columns: column.columns.map(function (d) {\n                return decorateAndAddToAll(d, column);\n              })\n            });\n          }\n\n          return decorateAndAddToAll(column);\n        }); // Build the visible columns, headers and flat column list\n\n        var visibleColumns = decoratedColumns.slice();\n        var allVisibleColumns = [];\n        visibleColumns = visibleColumns.map(function (column) {\n          if (column.columns) {\n            var visibleSubColumns = column.columns.filter(function (d) {\n              return pivotBy.indexOf(d.id) > -1 ? false : _.getFirstDefined(d.show, true);\n            });\n            return _extends({}, column, {\n              columns: visibleSubColumns\n            });\n          }\n\n          return column;\n        });\n        visibleColumns = visibleColumns.filter(function (column) {\n          return column.columns ? column.columns.length : pivotBy.indexOf(column.id) > -1 ? false : _.getFirstDefined(column.show, true);\n        }); // Find any custom pivot location\n\n        var pivotIndex = visibleColumns.findIndex(function (col) {\n          return col.pivot;\n        }); // Handle Pivot Columns\n\n        if (pivotBy.length) {\n          // Retrieve the pivot columns in the correct pivot order\n          var pivotColumns = [];\n          pivotBy.forEach(function (pivotID) {\n            var found = allDecoratedColumns.find(function (d) {\n              return d.id === pivotID;\n            });\n\n            if (found) {\n              pivotColumns.push(found);\n            }\n          });\n          var PivotParentColumn = pivotColumns.reduce(function (prev, current) {\n            return prev && prev === current.parentColumn && current.parentColumn;\n          }, pivotColumns[0].parentColumn);\n          var PivotGroupHeader = hasHeaderGroups && PivotParentColumn.Header;\n\n          PivotGroupHeader = PivotGroupHeader || function () {\n            return React.createElement('strong', null, 'Pivoted');\n          };\n\n          var pivotColumnGroup = {\n            Header: PivotGroupHeader,\n            columns: pivotColumns.map(function (col) {\n              return _extends({}, _this2.props.pivotDefaults, col, {\n                pivoted: true\n              });\n            }) // Place the pivotColumns back into the visibleColumns\n\n          };\n\n          if (pivotIndex >= 0) {\n            pivotColumnGroup = _extends({}, visibleColumns[pivotIndex], pivotColumnGroup);\n            visibleColumns.splice(pivotIndex, 1, pivotColumnGroup);\n          } else {\n            visibleColumns.unshift(pivotColumnGroup);\n          }\n        } // Build Header Groups\n\n\n        var headerGroups = [];\n        var currentSpan = []; // A convenience function to add a header and reset the currentSpan\n\n        var addHeader = function addHeader(columns, column) {\n          headerGroups.push(_extends({}, _this2.props.column, column, {\n            columns: columns\n          }));\n          currentSpan = [];\n        }; // Build flast list of allVisibleColumns and HeaderGroups\n\n\n        visibleColumns.forEach(function (column) {\n          if (column.columns) {\n            allVisibleColumns = allVisibleColumns.concat(column.columns);\n\n            if (currentSpan.length > 0) {\n              addHeader(currentSpan);\n            }\n\n            addHeader(column.columns, column);\n            return;\n          }\n\n          allVisibleColumns.push(column);\n          currentSpan.push(column);\n        });\n\n        if (hasHeaderGroups && currentSpan.length > 0) {\n          addHeader(currentSpan);\n        } // Access the data\n\n\n        var accessRow = function accessRow(d, i) {\n          var _row;\n\n          var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n          var row = (_row = {}, _defineProperty(_row, originalKey, d), _defineProperty(_row, indexKey, i), _defineProperty(_row, subRowsKey, d[subRowsKey]), _defineProperty(_row, nestingLevelKey, level), _row);\n          allDecoratedColumns.forEach(function (column) {\n            if (column.expander) return;\n            row[column.id] = column.accessor(d);\n          });\n\n          if (row[subRowsKey]) {\n            row[subRowsKey] = row[subRowsKey].map(function (d, i) {\n              return accessRow(d, i, level + 1);\n            });\n          }\n\n          return row;\n        }; // // If the data hasn't changed, just use the cached data\n\n\n        var resolvedData = this.resolvedData; // If the data has changed, run the data resolver and cache the result\n\n        if (!this.resolvedData || dataChanged) {\n          resolvedData = resolveData(data);\n          this.resolvedData = resolvedData;\n        } // Use the resolved data\n\n\n        resolvedData = resolvedData.map(function (d, i) {\n          return accessRow(d, i);\n        }); // TODO: Make it possible to fabricate nested rows without pivoting\n\n        var aggregatingColumns = allVisibleColumns.filter(function (d) {\n          return !d.expander && d.aggregate;\n        }); // If pivoting, recursively group the data\n\n        var aggregate = function aggregate(rows) {\n          var aggregationValues = {};\n          aggregatingColumns.forEach(function (column) {\n            var values = rows.map(function (d) {\n              return d[column.id];\n            });\n            aggregationValues[column.id] = column.aggregate(values, rows);\n          });\n          return aggregationValues;\n        };\n\n        if (pivotBy.length) {\n          var groupRecursively = function groupRecursively(rows, keys) {\n            var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0; // This is the last level, just return the rows\n\n            if (i === keys.length) {\n              return rows;\n            } // Group the rows together for this level\n\n\n            var groupedRows = Object.entries(_.groupBy(rows, keys[i])).map(function (_ref) {\n              var _ref3;\n\n              var _ref2 = _slicedToArray(_ref, 2),\n                  key = _ref2[0],\n                  value = _ref2[1];\n\n              return _ref3 = {}, _defineProperty(_ref3, pivotIDKey, keys[i]), _defineProperty(_ref3, pivotValKey, key), _defineProperty(_ref3, keys[i], key), _defineProperty(_ref3, subRowsKey, value), _defineProperty(_ref3, nestingLevelKey, i), _defineProperty(_ref3, groupedByPivotKey, true), _ref3;\n            }); // Recurse into the subRows\n\n            groupedRows = groupedRows.map(function (rowGroup) {\n              var _extends2;\n\n              var subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1);\n              return _extends({}, rowGroup, (_extends2 = {}, _defineProperty(_extends2, subRowsKey, subRows), _defineProperty(_extends2, aggregatedKey, true), _extends2), aggregate(subRows));\n            });\n            return groupedRows;\n          };\n\n          resolvedData = groupRecursively(resolvedData, pivotBy);\n        }\n\n        return _extends({}, newState, {\n          resolvedData: resolvedData,\n          allVisibleColumns: allVisibleColumns,\n          headerGroups: headerGroups,\n          allDecoratedColumns: allDecoratedColumns,\n          hasHeaderGroups: hasHeaderGroups\n        });\n      }\n    }, {\n      key: 'getSortedData',\n      value: function getSortedData(resolvedState) {\n        var manual = resolvedState.manual,\n            sorted = resolvedState.sorted,\n            filtered = resolvedState.filtered,\n            defaultFilterMethod = resolvedState.defaultFilterMethod,\n            resolvedData = resolvedState.resolvedData,\n            allVisibleColumns = resolvedState.allVisibleColumns,\n            allDecoratedColumns = resolvedState.allDecoratedColumns;\n        var sortMethodsByColumnID = {};\n        allDecoratedColumns.filter(function (col) {\n          return col.sortMethod;\n        }).forEach(function (col) {\n          sortMethodsByColumnID[col.id] = col.sortMethod;\n        }); // Resolve the data from either manual data or sorted data\n\n        return {\n          sortedData: manual ? resolvedData : this.sortData(this.filterData(resolvedData, filtered, defaultFilterMethod, allVisibleColumns), sorted, sortMethodsByColumnID)\n        };\n      }\n    }, {\n      key: 'fireFetchData',\n      value: function fireFetchData() {\n        this.props.onFetchData(this.getResolvedState(), this);\n      }\n    }, {\n      key: 'getPropOrState',\n      value: function getPropOrState(key) {\n        return _.getFirstDefined(this.props[key], this.state[key]);\n      }\n    }, {\n      key: 'getStateOrProp',\n      value: function getStateOrProp(key) {\n        return _.getFirstDefined(this.state[key], this.props[key]);\n      }\n    }, {\n      key: 'filterData',\n      value: function filterData(data, filtered, defaultFilterMethod, allVisibleColumns) {\n        var _this3 = this;\n\n        var filteredData = data;\n\n        if (filtered.length) {\n          filteredData = filtered.reduce(function (filteredSoFar, nextFilter) {\n            var column = allVisibleColumns.find(function (x) {\n              return x.id === nextFilter.id;\n            }); // Don't filter hidden columns or columns that have had their filters disabled\n\n            if (!column || column.filterable === false) {\n              return filteredSoFar;\n            }\n\n            var filterMethod = column.filterMethod || defaultFilterMethod; // If 'filterAll' is set to true, pass the entire dataset to the filter method\n\n            if (column.filterAll) {\n              return filterMethod(nextFilter, filteredSoFar, column);\n            }\n\n            return filteredSoFar.filter(function (row) {\n              return filterMethod(nextFilter, row, column);\n            });\n          }, filteredData); // Apply the filter to the subrows if we are pivoting, and then\n          // filter any rows without subcolumns because it would be strange to show\n\n          filteredData = filteredData.map(function (row) {\n            if (!row[_this3.props.subRowsKey]) {\n              return row;\n            }\n\n            return _extends({}, row, _defineProperty({}, _this3.props.subRowsKey, _this3.filterData(row[_this3.props.subRowsKey], filtered, defaultFilterMethod, allVisibleColumns)));\n          }).filter(function (row) {\n            if (!row[_this3.props.subRowsKey]) {\n              return true;\n            }\n\n            return row[_this3.props.subRowsKey].length > 0;\n          });\n        }\n\n        return filteredData;\n      }\n    }, {\n      key: 'sortData',\n      value: function sortData(data, sorted) {\n        var _this4 = this;\n\n        var sortMethodsByColumnID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        if (!sorted.length) {\n          return data;\n        }\n\n        var sortedData = (this.props.orderByMethod || _.orderBy)(data, sorted.map(function (sort) {\n          // Support custom sorting methods for each column\n          if (sortMethodsByColumnID[sort.id]) {\n            return function (a, b) {\n              return sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc);\n            };\n          }\n\n          return function (a, b) {\n            return _this4.props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc);\n          };\n        }), sorted.map(function (d) {\n          return !d.desc;\n        }), this.props.indexKey);\n\n        sortedData.forEach(function (row) {\n          if (!row[_this4.props.subRowsKey]) {\n            return;\n          }\n\n          row[_this4.props.subRowsKey] = _this4.sortData(row[_this4.props.subRowsKey], sorted, sortMethodsByColumnID);\n        });\n        return sortedData;\n      }\n    }, {\n      key: 'getMinRows',\n      value: function getMinRows() {\n        return _.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize'));\n      } // User actions\n\n    }, {\n      key: 'onPageChange',\n      value: function onPageChange(page) {\n        var _props = this.props,\n            onPageChange = _props.onPageChange,\n            collapseOnPageChange = _props.collapseOnPageChange;\n        var newState = {\n          page: page\n        };\n\n        if (collapseOnPageChange) {\n          newState.expanded = {};\n        }\n\n        this.setStateWithData(newState, function () {\n          return onPageChange && onPageChange(page);\n        });\n      }\n    }, {\n      key: 'onPageSizeChange',\n      value: function onPageSizeChange(newPageSize) {\n        var onPageSizeChange = this.props.onPageSizeChange;\n\n        var _getResolvedState = this.getResolvedState(),\n            pageSize = _getResolvedState.pageSize,\n            page = _getResolvedState.page; // Normalize the page to display\n\n\n        var currentRow = pageSize * page;\n        var newPage = Math.floor(currentRow / newPageSize);\n        this.setStateWithData({\n          pageSize: newPageSize,\n          page: newPage\n        }, function () {\n          return onPageSizeChange && onPageSizeChange(newPageSize, newPage);\n        });\n      }\n    }, {\n      key: 'sortColumn',\n      value: function sortColumn(column, additive) {\n        var _getResolvedState2 = this.getResolvedState(),\n            sorted = _getResolvedState2.sorted,\n            skipNextSort = _getResolvedState2.skipNextSort,\n            defaultSortDesc = _getResolvedState2.defaultSortDesc;\n\n        var firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc') ? column.defaultSortDesc : defaultSortDesc;\n        var secondSortDirection = !firstSortDirection; // we can't stop event propagation from the column resize move handlers\n        // attached to the document because of react's synthetic events\n        // so we have to prevent the sort function from actually sorting\n        // if we click on the column resize element within a header.\n\n        if (skipNextSort) {\n          this.setStateWithData({\n            skipNextSort: false\n          });\n          return;\n        }\n\n        var onSortedChange = this.props.onSortedChange;\n\n        var newSorted = _.clone(sorted || []).map(function (d) {\n          d.desc = _.isSortingDesc(d);\n          return d;\n        });\n\n        if (!_.isArray(column)) {\n          // Single-Sort\n          var existingIndex = newSorted.findIndex(function (d) {\n            return d.id === column.id;\n          });\n\n          if (existingIndex > -1) {\n            var existing = newSorted[existingIndex];\n\n            if (existing.desc === secondSortDirection) {\n              if (additive) {\n                newSorted.splice(existingIndex, 1);\n              } else {\n                existing.desc = firstSortDirection;\n                newSorted = [existing];\n              }\n            } else {\n              existing.desc = secondSortDirection;\n\n              if (!additive) {\n                newSorted = [existing];\n              }\n            }\n          } else if (additive) {\n            newSorted.push({\n              id: column.id,\n              desc: firstSortDirection\n            });\n          } else {\n            newSorted = [{\n              id: column.id,\n              desc: firstSortDirection\n            }];\n          }\n        } else {\n          // Multi-Sort\n          var _existingIndex = newSorted.findIndex(function (d) {\n            return d.id === column[0].id;\n          }); // Existing Sorted Column\n\n\n          if (_existingIndex > -1) {\n            var _existing = newSorted[_existingIndex];\n\n            if (_existing.desc === secondSortDirection) {\n              if (additive) {\n                newSorted.splice(_existingIndex, column.length);\n              } else {\n                column.forEach(function (d, i) {\n                  newSorted[_existingIndex + i].desc = firstSortDirection;\n                });\n              }\n            } else {\n              column.forEach(function (d, i) {\n                newSorted[_existingIndex + i].desc = secondSortDirection;\n              });\n            }\n\n            if (!additive) {\n              newSorted = newSorted.slice(_existingIndex, column.length);\n            } // New Sort Column\n\n          } else if (additive) {\n            newSorted = newSorted.concat(column.map(function (d) {\n              return {\n                id: d.id,\n                desc: firstSortDirection\n              };\n            }));\n          } else {\n            newSorted = column.map(function (d) {\n              return {\n                id: d.id,\n                desc: firstSortDirection\n              };\n            });\n          }\n        }\n\n        this.setStateWithData({\n          page: !sorted.length && newSorted.length || !additive ? 0 : this.state.page,\n          sorted: newSorted\n        }, function () {\n          return onSortedChange && onSortedChange(newSorted, column, additive);\n        });\n      }\n    }, {\n      key: 'filterColumn',\n      value: function filterColumn(column, value) {\n        var _getResolvedState3 = this.getResolvedState(),\n            filtered = _getResolvedState3.filtered;\n\n        var onFilteredChange = this.props.onFilteredChange; // Remove old filter first if it exists\n\n        var newFiltering = (filtered || []).filter(function (x) {\n          return x.id !== column.id;\n        });\n\n        if (value !== '') {\n          newFiltering.push({\n            id: column.id,\n            value: value\n          });\n        }\n\n        this.setStateWithData({\n          filtered: newFiltering\n        }, function () {\n          return onFilteredChange && onFilteredChange(newFiltering, column, value);\n        });\n      }\n    }, {\n      key: 'resizeColumnStart',\n      value: function resizeColumnStart(event, column, isTouch) {\n        var _this5 = this;\n\n        event.stopPropagation();\n        var parentWidth = event.target.parentElement.getBoundingClientRect().width;\n        var pageX = void 0;\n\n        if (isTouch) {\n          pageX = event.changedTouches[0].pageX;\n        } else {\n          pageX = event.pageX;\n        }\n\n        this.trapEvents = true;\n        this.setStateWithData({\n          currentlyResizing: {\n            id: column.id,\n            startX: pageX,\n            parentWidth: parentWidth\n          }\n        }, function () {\n          if (isTouch) {\n            document.addEventListener('touchmove', _this5.resizeColumnMoving);\n            document.addEventListener('touchcancel', _this5.resizeColumnEnd);\n            document.addEventListener('touchend', _this5.resizeColumnEnd);\n          } else {\n            document.addEventListener('mousemove', _this5.resizeColumnMoving);\n            document.addEventListener('mouseup', _this5.resizeColumnEnd);\n            document.addEventListener('mouseleave', _this5.resizeColumnEnd);\n          }\n        });\n      }\n    }, {\n      key: 'resizeColumnMoving',\n      value: function resizeColumnMoving(event) {\n        event.stopPropagation();\n        var onResizedChange = this.props.onResizedChange;\n\n        var _getResolvedState4 = this.getResolvedState(),\n            resized = _getResolvedState4.resized,\n            currentlyResizing = _getResolvedState4.currentlyResizing; // Delete old value\n\n\n        var newResized = resized.filter(function (x) {\n          return x.id !== currentlyResizing.id;\n        });\n        var pageX = void 0;\n\n        if (event.type === 'touchmove') {\n          pageX = event.changedTouches[0].pageX;\n        } else if (event.type === 'mousemove') {\n          pageX = event.pageX;\n        } // Set the min size to 10 to account for margin and border or else the\n        // group headers don't line up correctly\n\n\n        var newWidth = Math.max(currentlyResizing.parentWidth + pageX - currentlyResizing.startX, 11);\n        newResized.push({\n          id: currentlyResizing.id,\n          value: newWidth\n        });\n        this.setStateWithData({\n          resized: newResized\n        }, function () {\n          return onResizedChange && onResizedChange(newResized, event);\n        });\n      }\n    }, {\n      key: 'resizeColumnEnd',\n      value: function resizeColumnEnd(event) {\n        event.stopPropagation();\n        var isTouch = event.type === 'touchend' || event.type === 'touchcancel';\n\n        if (isTouch) {\n          document.removeEventListener('touchmove', this.resizeColumnMoving);\n          document.removeEventListener('touchcancel', this.resizeColumnEnd);\n          document.removeEventListener('touchend', this.resizeColumnEnd);\n        } // If its a touch event clear the mouse one's as well because sometimes\n        // the mouseDown event gets called as well, but the mouseUp event doesn't\n\n\n        document.removeEventListener('mousemove', this.resizeColumnMoving);\n        document.removeEventListener('mouseup', this.resizeColumnEnd);\n        document.removeEventListener('mouseleave', this.resizeColumnEnd); // The touch events don't propagate up to the sorting's onMouseDown event so\n        // no need to prevent it from happening or else the first click after a touch\n        // event resize will not sort the column.\n\n        if (!isTouch) {\n          this.setStateWithData({\n            skipNextSort: true,\n            currentlyResizing: false\n          });\n        }\n      }\n    }]);\n\n    return _class;\n  }(Base);\n});","var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames'; //\n// import _ from './utils'\n\nvar defaultButton = function defaultButton(props) {\n  return React.createElement('button', _extends({\n    type: 'button'\n  }, props, {\n    className: '-btn'\n  }), props.children);\n};\n\nvar ReactTablePagination = function (_Component) {\n  _inherits(ReactTablePagination, _Component);\n\n  function ReactTablePagination(props) {\n    _classCallCheck(this, ReactTablePagination);\n\n    var _this = _possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this));\n\n    _this.getSafePage = _this.getSafePage.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.applyPage = _this.applyPage.bind(_this);\n    _this.state = {\n      page: props.page\n    };\n    return _this;\n  }\n\n  _createClass(ReactTablePagination, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        page: nextProps.page\n      });\n    }\n  }, {\n    key: 'getSafePage',\n    value: function getSafePage(page) {\n      if (Number.isNaN(page)) {\n        page = this.props.page;\n      }\n\n      return Math.min(Math.max(page, 0), this.props.pages - 1);\n    }\n  }, {\n    key: 'changePage',\n    value: function changePage(page) {\n      page = this.getSafePage(page);\n      this.setState({\n        page: page\n      });\n\n      if (this.props.page !== page) {\n        this.props.onPageChange(page);\n      }\n    }\n  }, {\n    key: 'applyPage',\n    value: function applyPage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var page = this.state.page;\n      this.changePage(page === '' ? this.props.page : page);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          page = _props.page,\n          showPageSizeOptions = _props.showPageSizeOptions,\n          pageSizeOptions = _props.pageSizeOptions,\n          pageSize = _props.pageSize,\n          showPageJump = _props.showPageJump,\n          canPrevious = _props.canPrevious,\n          canNext = _props.canNext,\n          onPageSizeChange = _props.onPageSizeChange,\n          className = _props.className,\n          _props$PreviousCompon = _props.PreviousComponent,\n          PreviousComponent = _props$PreviousCompon === undefined ? defaultButton : _props$PreviousCompon,\n          _props$NextComponent = _props.NextComponent,\n          NextComponent = _props$NextComponent === undefined ? defaultButton : _props$NextComponent;\n      return React.createElement('div', {\n        className: classnames(className, '-pagination'),\n        style: this.props.style\n      }, React.createElement('div', {\n        className: '-previous'\n      }, React.createElement(PreviousComponent, {\n        onClick: function onClick() {\n          if (!canPrevious) return;\n\n          _this2.changePage(page - 1);\n        },\n        disabled: !canPrevious\n      }, this.props.previousText)), React.createElement('div', {\n        className: '-center'\n      }, React.createElement('span', {\n        className: '-pageInfo'\n      }, this.props.pageText, ' ', showPageJump ? React.createElement('div', {\n        className: '-pageJump'\n      }, React.createElement('input', {\n        type: this.state.page === '' ? 'text' : 'number',\n        onChange: function onChange(e) {\n          var val = e.target.value;\n          var page = val - 1;\n\n          if (val === '') {\n            return _this2.setState({\n              page: val\n            });\n          }\n\n          _this2.setState({\n            page: _this2.getSafePage(page)\n          });\n        },\n        value: this.state.page === '' ? '' : this.state.page + 1,\n        onBlur: this.applyPage,\n        onKeyPress: function onKeyPress(e) {\n          if (e.which === 13 || e.keyCode === 13) {\n            _this2.applyPage();\n          }\n        }\n      })) : React.createElement('span', {\n        className: '-currentPage'\n      }, page + 1), ' ', this.props.ofText, ' ', React.createElement('span', {\n        className: '-totalPages'\n      }, pages || 1)), showPageSizeOptions && React.createElement('span', {\n        className: 'select-wrap -pageSizeOptions'\n      }, React.createElement('select', {\n        onChange: function onChange(e) {\n          return onPageSizeChange(Number(e.target.value));\n        },\n        value: pageSize\n      }, pageSizeOptions.map(function (option, i) {\n        return (// eslint-disable-next-line react/no-array-index-key\n          React.createElement('option', {\n            key: i,\n            value: option\n          }, option, ' ', _this2.props.rowsText)\n        );\n      })))), React.createElement('div', {\n        className: '-next'\n      }, React.createElement(NextComponent, {\n        onClick: function onClick() {\n          if (!canNext) return;\n\n          _this2.changePage(page + 1);\n        },\n        disabled: !canNext\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return ReactTablePagination;\n}(Component);\n\nexport default ReactTablePagination;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classnames from 'classnames'; //\n\nimport _ from './utils';\nimport Pagination from './pagination';\n\nvar emptyObj = function emptyObj() {\n  return {};\n};\n\nexport default {\n  // General\n  data: [],\n  resolveData: function resolveData(data) {\n    return data;\n  },\n  loading: false,\n  showPagination: true,\n  showPaginationTop: false,\n  showPaginationBottom: true,\n  showPageSizeOptions: true,\n  pageSizeOptions: [5, 10, 20, 25, 50, 100],\n  defaultPageSize: 20,\n  showPageJump: true,\n  collapseOnSortingChange: true,\n  collapseOnPageChange: true,\n  collapseOnDataChange: true,\n  freezeWhenExpanded: false,\n  sortable: true,\n  multiSort: true,\n  resizable: true,\n  filterable: false,\n  defaultSortDesc: false,\n  defaultSorted: [],\n  defaultFiltered: [],\n  defaultResized: [],\n  defaultExpanded: {},\n  // eslint-disable-next-line no-unused-vars\n  defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n    var id = filter.pivotId || filter.id;\n    return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true;\n  },\n  // eslint-disable-next-line no-unused-vars\n  defaultSortMethod: function defaultSortMethod(a, b, desc) {\n    // force null and undefined to the bottom\n    a = a === null || a === undefined ? '' : a;\n    b = b === null || b === undefined ? '' : b; // force any string values to lowercase\n\n    a = typeof a === 'string' ? a.toLowerCase() : a;\n    b = typeof b === 'string' ? b.toLowerCase() : b; // Return either 1 or -1 to indicate a sort priority\n\n    if (a > b) {\n      return 1;\n    }\n\n    if (a < b) {\n      return -1;\n    } // returning 0, undefined or any falsey value will use subsequent sorts or\n    // the index as a tiebreaker\n\n\n    return 0;\n  },\n  // Controlled State Props\n  // page: undefined,\n  // pageSize: undefined,\n  // sorted: [],\n  // filtered: [],\n  // resized: [],\n  // expanded: {},\n  // Controlled State Callbacks\n  onPageChange: undefined,\n  onPageSizeChange: undefined,\n  onSortedChange: undefined,\n  onFilteredChange: undefined,\n  onResizedChange: undefined,\n  onExpandedChange: undefined,\n  // Pivoting\n  pivotBy: undefined,\n  // Key Constants\n  pivotValKey: '_pivotVal',\n  pivotIDKey: '_pivotID',\n  subRowsKey: '_subRows',\n  aggregatedKey: '_aggregated',\n  nestingLevelKey: '_nestingLevel',\n  originalKey: '_original',\n  indexKey: '_index',\n  groupedByPivotKey: '_groupedByPivot',\n  // Server-side Callbacks\n  onFetchData: function onFetchData() {\n    return null;\n  },\n  // Classes\n  className: '',\n  style: {},\n  // Component decorators\n  getProps: emptyObj,\n  getTableProps: emptyObj,\n  getTheadGroupProps: emptyObj,\n  getTheadGroupTrProps: emptyObj,\n  getTheadGroupThProps: emptyObj,\n  getTheadProps: emptyObj,\n  getTheadTrProps: emptyObj,\n  getTheadThProps: emptyObj,\n  getTheadFilterProps: emptyObj,\n  getTheadFilterTrProps: emptyObj,\n  getTheadFilterThProps: emptyObj,\n  getTbodyProps: emptyObj,\n  getTrGroupProps: emptyObj,\n  getTrProps: emptyObj,\n  getTdProps: emptyObj,\n  getTfootProps: emptyObj,\n  getTfootTrProps: emptyObj,\n  getTfootTdProps: emptyObj,\n  getPaginationProps: emptyObj,\n  getLoadingProps: emptyObj,\n  getNoDataProps: emptyObj,\n  getResizerProps: emptyObj,\n  // Global Column Defaults\n  column: {\n    // Renderers\n    Cell: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Aggregated: undefined,\n    Pivot: undefined,\n    PivotValue: undefined,\n    Expander: undefined,\n    Filter: undefined,\n    // All Columns\n    sortable: undefined,\n    // use table default\n    resizable: undefined,\n    // use table default\n    filterable: undefined,\n    // use table default\n    show: true,\n    minWidth: 100,\n    // Cells only\n    className: '',\n    style: {},\n    getProps: emptyObj,\n    // Pivot only\n    aggregate: undefined,\n    // Headers only\n    headerClassName: '',\n    headerStyle: {},\n    getHeaderProps: emptyObj,\n    // Footers only\n    footerClassName: '',\n    footerStyle: {},\n    getFooterProps: emptyObj,\n    filterMethod: undefined,\n    filterAll: false,\n    sortMethod: undefined\n  },\n  // Global Expander Column Defaults\n  expanderDefaults: {\n    sortable: false,\n    resizable: false,\n    filterable: false,\n    width: 35\n  },\n  pivotDefaults: {// extend the defaults for pivoted columns here\n  },\n  // Text\n  previousText: 'Previous',\n  nextText: 'Next',\n  loadingText: 'Loading...',\n  noDataText: 'No rows found',\n  pageText: 'Page',\n  ofText: 'of',\n  rowsText: 'rows',\n  // Components\n  TableComponent: function TableComponent(_ref) {\n    var children = _ref.children,\n        className = _ref.className,\n        rest = _objectWithoutProperties(_ref, ['children', 'className']);\n\n    return React.createElement('div', _extends({\n      className: classnames('rt-table', className),\n      role: 'grid' // tabIndex='0'\n\n    }, rest), children);\n  },\n  TheadComponent: _.makeTemplateComponent('rt-thead', 'Thead'),\n  TbodyComponent: _.makeTemplateComponent('rt-tbody', 'Tbody'),\n  TrGroupComponent: function TrGroupComponent(_ref2) {\n    var children = _ref2.children,\n        className = _ref2.className,\n        rest = _objectWithoutProperties(_ref2, ['children', 'className']);\n\n    return React.createElement('div', _extends({\n      className: classnames('rt-tr-group', className),\n      role: 'rowgroup'\n    }, rest), children);\n  },\n  TrComponent: function TrComponent(_ref3) {\n    var children = _ref3.children,\n        className = _ref3.className,\n        rest = _objectWithoutProperties(_ref3, ['children', 'className']);\n\n    return React.createElement('div', _extends({\n      className: classnames('rt-tr', className),\n      role: 'row'\n    }, rest), children);\n  },\n  ThComponent: function ThComponent(_ref4) {\n    var toggleSort = _ref4.toggleSort,\n        className = _ref4.className,\n        children = _ref4.children,\n        rest = _objectWithoutProperties(_ref4, ['toggleSort', 'className', 'children']);\n\n    return (// eslint-disable-next-line jsx-a11y/click-events-have-key-events\n      React.createElement('div', _extends({\n        className: classnames('rt-th', className),\n        onClick: function onClick(e) {\n          return toggleSort && toggleSort(e);\n        },\n        role: 'columnheader',\n        tabIndex: '-1' // Resolves eslint issues without implementing keyboard navigation incorrectly\n\n      }, rest), children)\n    );\n  },\n  TdComponent: function TdComponent(_ref5) {\n    var toggleSort = _ref5.toggleSort,\n        className = _ref5.className,\n        children = _ref5.children,\n        rest = _objectWithoutProperties(_ref5, ['toggleSort', 'className', 'children']);\n\n    return React.createElement('div', _extends({\n      className: classnames('rt-td', className),\n      role: 'gridcell'\n    }, rest), children);\n  },\n  TfootComponent: _.makeTemplateComponent('rt-tfoot', 'Tfoot'),\n  FilterComponent: function FilterComponent(_ref6) {\n    var filter = _ref6.filter,\n        _onChange = _ref6.onChange;\n    return React.createElement('input', {\n      type: 'text',\n      style: {\n        width: '100%'\n      },\n      value: filter ? filter.value : '',\n      onChange: function onChange(event) {\n        return _onChange(event.target.value);\n      }\n    });\n  },\n  ExpanderComponent: function ExpanderComponent(_ref7) {\n    var isExpanded = _ref7.isExpanded;\n    return React.createElement('div', {\n      className: classnames('rt-expander', isExpanded && '-open')\n    }, \"\\u2022\");\n  },\n  PivotValueComponent: function PivotValueComponent(_ref8) {\n    var subRows = _ref8.subRows,\n        value = _ref8.value;\n    return React.createElement('span', null, value, ' ', subRows && '(' + subRows.length + ')');\n  },\n  AggregatedComponent: function AggregatedComponent(_ref9) {\n    var subRows = _ref9.subRows,\n        column = _ref9.column;\n    var previewValues = subRows.filter(function (d) {\n      return typeof d[column.id] !== 'undefined';\n    }).map(function (row, i) {\n      return (// eslint-disable-next-line react/no-array-index-key\n        React.createElement('span', {\n          key: i\n        }, row[column.id], i < subRows.length - 1 ? ', ' : '')\n      );\n    });\n    return React.createElement('span', null, previewValues);\n  },\n  PivotComponent: undefined,\n  // this is a computed default generated using\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: Pagination,\n  PreviousComponent: undefined,\n  NextComponent: undefined,\n  LoadingComponent: function LoadingComponent(_ref10) {\n    var className = _ref10.className,\n        loading = _ref10.loading,\n        loadingText = _ref10.loadingText,\n        rest = _objectWithoutProperties(_ref10, ['className', 'loading', 'loadingText']);\n\n    return React.createElement('div', _extends({\n      className: classnames('-loading', {\n        '-active': loading\n      }, className)\n    }, rest), React.createElement('div', {\n      className: '-loading-inner'\n    }, loadingText));\n  },\n  NoDataComponent: _.makeTemplateComponent('rt-noData', 'NoData'),\n  ResizerComponent: _.makeTemplateComponent('rt-resizer', 'Resizer'),\n  PadRowComponent: function PadRowComponent() {\n    return React.createElement('span', null, '\\xA0');\n  }\n};","import PropTypes from 'prop-types';\nexport default {\n  // General\n  data: PropTypes.any,\n  loading: PropTypes.bool,\n  showPagination: PropTypes.bool,\n  showPaginationTop: PropTypes.bool,\n  showPaginationBottom: PropTypes.bool,\n  showPageSizeOptions: PropTypes.bool,\n  pageSizeOptions: PropTypes.array,\n  defaultPageSize: PropTypes.number,\n  showPageJump: PropTypes.bool,\n  collapseOnSortingChange: PropTypes.bool,\n  collapseOnPageChange: PropTypes.bool,\n  collapseOnDataChange: PropTypes.bool,\n  freezeWhenExpanded: PropTypes.bool,\n  sortable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  filterable: PropTypes.bool,\n  defaultSortDesc: PropTypes.bool,\n  defaultSorted: PropTypes.array,\n  defaultFiltered: PropTypes.array,\n  defaultResized: PropTypes.array,\n  defaultExpanded: PropTypes.object,\n  defaultFilterMethod: PropTypes.func,\n  defaultSortMethod: PropTypes.func,\n  // Controlled State Callbacks\n  onPageChange: PropTypes.func,\n  onPageSizeChange: PropTypes.func,\n  onSortedChange: PropTypes.func,\n  onFilteredChange: PropTypes.func,\n  onResizedChange: PropTypes.func,\n  onExpandedChange: PropTypes.func,\n  // Pivoting\n  pivotBy: PropTypes.array,\n  // Key Constants\n  pivotValKey: PropTypes.string,\n  pivotIDKey: PropTypes.string,\n  subRowsKey: PropTypes.string,\n  aggregatedKey: PropTypes.string,\n  nestingLevelKey: PropTypes.string,\n  originalKey: PropTypes.string,\n  indexKey: PropTypes.string,\n  groupedByPivotKey: PropTypes.string,\n  // Server-side Callbacks\n  onFetchData: PropTypes.func,\n  // Classes\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Component decorators\n  getProps: PropTypes.func,\n  getTableProps: PropTypes.func,\n  getTheadGroupProps: PropTypes.func,\n  getTheadGroupTrProps: PropTypes.func,\n  getTheadGroupThProps: PropTypes.func,\n  getTheadProps: PropTypes.func,\n  getTheadTrProps: PropTypes.func,\n  getTheadThProps: PropTypes.func,\n  getTheadFilterProps: PropTypes.func,\n  getTheadFilterTrProps: PropTypes.func,\n  getTheadFilterThProps: PropTypes.func,\n  getTbodyProps: PropTypes.func,\n  getTrGroupProps: PropTypes.func,\n  getTrProps: PropTypes.func,\n  getTdProps: PropTypes.func,\n  getTfootProps: PropTypes.func,\n  getTfootTrProps: PropTypes.func,\n  getTfootTdProps: PropTypes.func,\n  getPaginationProps: PropTypes.func,\n  getLoadingProps: PropTypes.func,\n  getNoDataProps: PropTypes.func,\n  getResizerProps: PropTypes.func,\n  // Global Column Defaults\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    // Renderers\n    Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Header: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Footer: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Aggregated: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Pivot: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    PivotValue: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Expander: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n    Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    // All Columns\n    sortable: PropTypes.bool,\n    // use table default\n    resizable: PropTypes.bool,\n    // use table default\n    filterable: PropTypes.bool,\n    // use table default\n    show: PropTypes.bool,\n    minWidth: PropTypes.number,\n    // Cells only\n    className: PropTypes.string,\n    style: PropTypes.object,\n    getProps: PropTypes.func,\n    // Pivot only\n    aggregate: PropTypes.func,\n    // Headers only\n    headerClassName: PropTypes.string,\n    headerStyle: PropTypes.object,\n    getHeaderProps: PropTypes.func,\n    // Footers only\n    footerClassName: PropTypes.string,\n    footerStyle: PropTypes.object,\n    getFooterProps: PropTypes.object,\n    filterMethod: PropTypes.func,\n    filterAll: PropTypes.bool,\n    sortMethod: PropTypes.func\n  })),\n  // Global Expander Column Defaults\n  expanderDefaults: PropTypes.shape({\n    sortable: PropTypes.bool,\n    resizable: PropTypes.bool,\n    filterable: PropTypes.bool,\n    width: PropTypes.number\n  }),\n  pivotDefaults: PropTypes.object,\n  // Text\n  previousText: PropTypes.node,\n  nextText: PropTypes.node,\n  loadingText: PropTypes.node,\n  noDataText: PropTypes.node,\n  pageText: PropTypes.node,\n  ofText: PropTypes.node,\n  rowsText: PropTypes.node,\n  // Components\n  TableComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TheadComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TbodyComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TrGroupComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TrComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ThComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TdComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TfootComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  FilterComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ExpanderComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PivotValueComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  AggregatedComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  // this is a computed default generated using\n  PivotComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PreviousComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  NextComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  LoadingComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  NoDataComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ResizerComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PadRowComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element])\n};","var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames'; //\n\nimport _ from './utils';\nimport Lifecycle from './lifecycle';\nimport Methods from './methods';\nimport defaultProps from './defaultProps';\nimport propTypes from './propTypes';\nexport var ReactTableDefaults = defaultProps;\n\nvar ReactTable = function (_Methods) {\n  _inherits(ReactTable, _Methods);\n\n  function ReactTable(props) {\n    _classCallCheck(this, ReactTable);\n\n    var _this = _possibleConstructorReturn(this, (ReactTable.__proto__ || Object.getPrototypeOf(ReactTable)).call(this));\n\n    _this.getResolvedState = _this.getResolvedState.bind(_this);\n    _this.getDataModel = _this.getDataModel.bind(_this);\n    _this.getSortedData = _this.getSortedData.bind(_this);\n    _this.fireFetchData = _this.fireFetchData.bind(_this);\n    _this.getPropOrState = _this.getPropOrState.bind(_this);\n    _this.getStateOrProp = _this.getStateOrProp.bind(_this);\n    _this.filterData = _this.filterData.bind(_this);\n    _this.sortData = _this.sortData.bind(_this);\n    _this.getMinRows = _this.getMinRows.bind(_this);\n    _this.onPageChange = _this.onPageChange.bind(_this);\n    _this.onPageSizeChange = _this.onPageSizeChange.bind(_this);\n    _this.sortColumn = _this.sortColumn.bind(_this);\n    _this.filterColumn = _this.filterColumn.bind(_this);\n    _this.resizeColumnStart = _this.resizeColumnStart.bind(_this);\n    _this.resizeColumnEnd = _this.resizeColumnEnd.bind(_this);\n    _this.resizeColumnMoving = _this.resizeColumnMoving.bind(_this);\n    _this.state = {\n      page: 0,\n      pageSize: props.defaultPageSize,\n      sorted: props.defaultSorted,\n      expanded: props.defaultExpanded,\n      filtered: props.defaultFiltered,\n      resized: props.defaultResized,\n      currentlyResizing: false,\n      skipNextSort: false\n    };\n    return _this;\n  }\n\n  _createClass(ReactTable, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var resolvedState = this.getResolvedState();\n      var children = resolvedState.children,\n          className = resolvedState.className,\n          style = resolvedState.style,\n          getProps = resolvedState.getProps,\n          getTableProps = resolvedState.getTableProps,\n          getTheadGroupProps = resolvedState.getTheadGroupProps,\n          getTheadGroupTrProps = resolvedState.getTheadGroupTrProps,\n          getTheadGroupThProps = resolvedState.getTheadGroupThProps,\n          getTheadProps = resolvedState.getTheadProps,\n          getTheadTrProps = resolvedState.getTheadTrProps,\n          getTheadThProps = resolvedState.getTheadThProps,\n          getTheadFilterProps = resolvedState.getTheadFilterProps,\n          getTheadFilterTrProps = resolvedState.getTheadFilterTrProps,\n          getTheadFilterThProps = resolvedState.getTheadFilterThProps,\n          getTbodyProps = resolvedState.getTbodyProps,\n          getTrGroupProps = resolvedState.getTrGroupProps,\n          getTrProps = resolvedState.getTrProps,\n          getTdProps = resolvedState.getTdProps,\n          getTfootProps = resolvedState.getTfootProps,\n          getTfootTrProps = resolvedState.getTfootTrProps,\n          getTfootTdProps = resolvedState.getTfootTdProps,\n          getPaginationProps = resolvedState.getPaginationProps,\n          getLoadingProps = resolvedState.getLoadingProps,\n          getNoDataProps = resolvedState.getNoDataProps,\n          getResizerProps = resolvedState.getResizerProps,\n          showPagination = resolvedState.showPagination,\n          showPaginationTop = resolvedState.showPaginationTop,\n          showPaginationBottom = resolvedState.showPaginationBottom,\n          manual = resolvedState.manual,\n          loadingText = resolvedState.loadingText,\n          noDataText = resolvedState.noDataText,\n          sortable = resolvedState.sortable,\n          multiSort = resolvedState.multiSort,\n          resizable = resolvedState.resizable,\n          filterable = resolvedState.filterable,\n          pivotIDKey = resolvedState.pivotIDKey,\n          pivotValKey = resolvedState.pivotValKey,\n          pivotBy = resolvedState.pivotBy,\n          subRowsKey = resolvedState.subRowsKey,\n          aggregatedKey = resolvedState.aggregatedKey,\n          originalKey = resolvedState.originalKey,\n          indexKey = resolvedState.indexKey,\n          groupedByPivotKey = resolvedState.groupedByPivotKey,\n          loading = resolvedState.loading,\n          pageSize = resolvedState.pageSize,\n          page = resolvedState.page,\n          sorted = resolvedState.sorted,\n          filtered = resolvedState.filtered,\n          resized = resolvedState.resized,\n          expanded = resolvedState.expanded,\n          pages = resolvedState.pages,\n          onExpandedChange = resolvedState.onExpandedChange,\n          TableComponent = resolvedState.TableComponent,\n          TheadComponent = resolvedState.TheadComponent,\n          TbodyComponent = resolvedState.TbodyComponent,\n          TrGroupComponent = resolvedState.TrGroupComponent,\n          TrComponent = resolvedState.TrComponent,\n          ThComponent = resolvedState.ThComponent,\n          TdComponent = resolvedState.TdComponent,\n          TfootComponent = resolvedState.TfootComponent,\n          PaginationComponent = resolvedState.PaginationComponent,\n          LoadingComponent = resolvedState.LoadingComponent,\n          SubComponent = resolvedState.SubComponent,\n          NoDataComponent = resolvedState.NoDataComponent,\n          ResizerComponent = resolvedState.ResizerComponent,\n          ExpanderComponent = resolvedState.ExpanderComponent,\n          PivotValueComponent = resolvedState.PivotValueComponent,\n          PivotComponent = resolvedState.PivotComponent,\n          AggregatedComponent = resolvedState.AggregatedComponent,\n          FilterComponent = resolvedState.FilterComponent,\n          PadRowComponent = resolvedState.PadRowComponent,\n          resolvedData = resolvedState.resolvedData,\n          allVisibleColumns = resolvedState.allVisibleColumns,\n          headerGroups = resolvedState.headerGroups,\n          hasHeaderGroups = resolvedState.hasHeaderGroups,\n          sortedData = resolvedState.sortedData,\n          currentlyResizing = resolvedState.currentlyResizing; // Pagination\n\n      var startRow = pageSize * page;\n      var endRow = startRow + pageSize;\n      var pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n      var minRows = this.getMinRows();\n\n      var padRows = _.range(Math.max(minRows - pageRows.length, 0));\n\n      var hasColumnFooter = allVisibleColumns.some(function (d) {\n        return d.Footer;\n      });\n      var hasFilters = filterable || allVisibleColumns.some(function (d) {\n        return d.filterable;\n      });\n\n      var recurseRowsViewIndex = function recurseRowsViewIndex(rows) {\n        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n        return [rows.map(function (row, i) {\n          index += 1;\n\n          var rowWithViewIndex = _extends({}, row, {\n            _viewIndex: index\n          });\n\n          var newPath = path.concat([i]);\n\n          if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n            var _recurseRowsViewIndex = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n\n            var _recurseRowsViewIndex2 = _slicedToArray(_recurseRowsViewIndex, 2);\n\n            rowWithViewIndex[subRowsKey] = _recurseRowsViewIndex2[0];\n            index = _recurseRowsViewIndex2[1];\n          }\n\n          return rowWithViewIndex;\n        }), index];\n      };\n\n      var _recurseRowsViewIndex3 = recurseRowsViewIndex(pageRows);\n\n      var _recurseRowsViewIndex4 = _slicedToArray(_recurseRowsViewIndex3, 1);\n\n      pageRows = _recurseRowsViewIndex4[0];\n      var canPrevious = page > 0;\n      var canNext = page + 1 < pages;\n\n      var rowMinWidth = _.sum(allVisibleColumns.map(function (d) {\n        var resizedColumn = resized.find(function (x) {\n          return x.id === d.id;\n        }) || {};\n        return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n      }));\n\n      var rowIndex = -1;\n\n      var finalState = _extends({}, resolvedState, {\n        startRow: startRow,\n        endRow: endRow,\n        pageRows: pageRows,\n        minRows: minRows,\n        padRows: padRows,\n        hasColumnFooter: hasColumnFooter,\n        canPrevious: canPrevious,\n        canNext: canNext,\n        rowMinWidth: rowMinWidth\n      });\n\n      var rootProps = _.splitProps(getProps(finalState, undefined, undefined, this));\n\n      var tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this));\n\n      var tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this));\n\n      var loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n      var noDataProps = getNoDataProps(finalState, undefined, undefined, this); // Visual Components\n\n      var makeHeaderGroup = function makeHeaderGroup(column, i) {\n        var resizedValue = function resizedValue(col) {\n          return (resized.find(function (x) {\n            return x.id === col.id;\n          }) || {}).value;\n        };\n\n        var flex = _.sum(column.columns.map(function (col) {\n          return col.width || resizedValue(col) ? 0 : col.minWidth;\n        }));\n\n        var width = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.minWidth);\n        }));\n\n        var maxWidth = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.maxWidth);\n        }));\n\n        var theadGroupThProps = _.splitProps(getTheadGroupThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadGroupThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadGroupThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadGroupThProps.rest, columnHeaderProps.rest);\n\n        var flexStyles = {\n          flex: flex + ' 0 auto',\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        };\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes),\n          style: _extends({}, styles, flexStyles)\n        }, rest), _.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeHeaderGroups = function makeHeaderGroups() {\n        var theadGroupProps = _.splitProps(getTheadGroupProps(finalState, undefined, undefined, _this2));\n\n        var theadGroupTrProps = _.splitProps(getTheadGroupTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-headerGroups', theadGroupProps.className),\n          style: _extends({}, theadGroupProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadGroupProps.rest), React.createElement(TrComponent, _extends({\n          className: theadGroupTrProps.className,\n          style: theadGroupTrProps.style\n        }, theadGroupTrProps.rest), headerGroups.map(makeHeaderGroup)));\n      };\n\n      var makeHeader = function makeHeader(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var sort = sorted.find(function (d) {\n          return d.id === column.id;\n        });\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadThProps.rest, columnHeaderProps.rest);\n\n        var isResizable = _.getFirstDefined(column.resizable, resizable, false);\n\n        var resizer = isResizable ? React.createElement(ResizerComponent, _extends({\n          onMouseDown: function onMouseDown(e) {\n            return _this2.resizeColumnStart(e, column, false);\n          },\n          onTouchStart: function onTouchStart(e) {\n            return _this2.resizeColumnStart(e, column, true);\n          }\n        }, getResizerProps('finalState', undefined, column, _this2))) : null;\n\n        var isSortable = _.getFirstDefined(column.sortable, sortable, false);\n\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, isResizable && 'rt-resizable-header', sort ? sort.desc ? '-sort-desc' : '-sort-asc' : '', isSortable && '-cursor-pointer', !show && '-hidden', pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          }),\n          toggleSort: function toggleSort(e) {\n            if (isSortable) _this2.sortColumn(column, multiSort ? e.shiftKey : false);\n          }\n        }, rest), React.createElement('div', {\n          className: classnames(isResizable && 'rt-resizable-header-content')\n        }, _.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        })), resizer);\n      };\n\n      var makeHeaders = function makeHeaders() {\n        var theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, _this2));\n\n        var theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-header', theadProps.className),\n          style: _extends({}, theadProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadProps.rest), React.createElement(TrComponent, _extends({\n          className: theadTrProps.className,\n          style: theadTrProps.style\n        }, theadTrProps.rest), allVisibleColumns.map(makeHeader)));\n      };\n\n      var makeFilter = function makeFilter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var theadFilterThProps = _.splitProps(getTheadFilterThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadFilterThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadFilterThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadFilterThProps.rest, columnHeaderProps.rest);\n\n        var filter = filtered.find(function (filter) {\n          return filter.id === column.id;\n        });\n        var ResolvedFilterComponent = column.Filter || FilterComponent;\n\n        var isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, rest), isFilterable ? _.normalizeComponent(ResolvedFilterComponent, {\n          column: column,\n          filter: filter,\n          onChange: function onChange(value) {\n            return _this2.filterColumn(column, value);\n          }\n        }, defaultProps.column.Filter) : null);\n      };\n\n      var makeFilters = function makeFilters() {\n        var theadFilterProps = _.splitProps(getTheadFilterProps(finalState, undefined, undefined, _this2));\n\n        var theadFilterTrProps = _.splitProps(getTheadFilterTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-filters', theadFilterProps.className),\n          style: _extends({}, theadFilterProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadFilterProps.rest), React.createElement(TrComponent, _extends({\n          className: theadFilterTrProps.className,\n          style: theadFilterTrProps.style\n        }, theadFilterTrProps.rest), allVisibleColumns.map(makeFilter)));\n      };\n\n      var makePageRow = function makePageRow(row, i) {\n        var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var rowInfo = {\n          original: row[originalKey],\n          row: row,\n          index: row[indexKey],\n          viewIndex: rowIndex += 1,\n          pageSize: pageSize,\n          page: page,\n          level: path.length,\n          nestingPath: path.concat([i]),\n          aggregated: row[aggregatedKey],\n          groupedByPivot: row[groupedByPivotKey],\n          subRows: row[subRowsKey]\n        };\n\n        var isExpanded = _.get(expanded, rowInfo.nestingPath);\n\n        var trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, _this2);\n\n        var trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, _this2));\n\n        return React.createElement(TrGroupComponent, _extends({\n          key: rowInfo.nestingPath.join('_')\n        }, trGroupProps), React.createElement(TrComponent, _extends({\n          className: classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd'),\n          style: trProps.style\n        }, trProps.rest), allVisibleColumns.map(function (column, i2) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, _this2));\n\n          var columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, _this2));\n\n          var classes = [tdProps.className, column.className, columnProps.className];\n\n          var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n          var cellInfo = _extends({}, rowInfo, {\n            isExpanded: isExpanded,\n            column: _extends({}, column),\n            value: rowInfo.row[column.id],\n            pivoted: column.pivoted,\n            expander: column.expander,\n            resized: resized,\n            show: show,\n            width: width,\n            maxWidth: maxWidth,\n            tdProps: tdProps,\n            columnProps: columnProps,\n            classes: classes,\n            styles: styles\n          });\n\n          var value = cellInfo.value;\n          var useOnExpanderClick = void 0;\n          var isBranch = void 0;\n          var isPreview = void 0;\n\n          var onExpanderClick = function onExpanderClick(e) {\n            var newExpanded = _.clone(expanded);\n\n            if (isExpanded) {\n              newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n            } else {\n              newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n            }\n\n            return _this2.setStateWithData({\n              expanded: newExpanded\n            }, function () {\n              return onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e);\n            });\n          }; // Default to a standard cell\n\n\n          var resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value); // Resolve Renderers\n\n\n          var ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n          var ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n          var ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n\n          var DefaultResolvedPivotComponent = PivotComponent || function (props) {\n            return React.createElement('div', null, React.createElement(ResolvedExpanderComponent, props), React.createElement(ResolvedPivotValueComponent, props));\n          };\n\n          var ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent; // Is this cell expandable?\n\n          if (cellInfo.pivoted || cellInfo.expander) {\n            // Make it expandable by defualt\n            cellInfo.expandable = true;\n            useOnExpanderClick = true; // If pivoted, has no subRows, and does not have a subComponent,\n            // do not make expandable\n\n            if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n              cellInfo.expandable = false;\n            }\n          }\n\n          if (cellInfo.pivoted) {\n            // Is this column a branch?\n            isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows; // Should this column be blank?\n\n            isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows; // Pivot Cell Render Override\n\n            if (isBranch) {\n              // isPivot\n              resolvedCell = _.normalizeComponent(ResolvedPivotComponent, _extends({}, cellInfo, {\n                value: row[pivotValKey]\n              }), row[pivotValKey]);\n            } else if (isPreview) {\n              // Show the pivot preview\n              resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n            } else {\n              resolvedCell = null;\n            }\n          } else if (cellInfo.aggregated) {\n            resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n          }\n\n          if (cellInfo.expander) {\n            resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, cellInfo, row[pivotValKey]);\n\n            if (pivotBy) {\n              if (cellInfo.groupedByPivot) {\n                resolvedCell = null;\n              }\n\n              if (!cellInfo.subRows && !SubComponent) {\n                resolvedCell = null;\n              }\n            }\n          }\n\n          var resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : function () {}; // If there are multiple onClick events, make sure they don't\n          // override eachother. This should maybe be expanded to handle all\n          // function attributes\n\n          var interactionProps = {\n            onClick: resolvedOnExpanderClick\n          };\n\n          if (tdProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              tdProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          }\n\n          if (columnProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              columnProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          } // Return the cell\n\n\n          return React.createElement(TdComponent // eslint-disable-next-line react/no-array-index-key\n          , _extends({\n            key: i2 + '-' + column.id,\n            className: classnames(classes, !show && 'hidden', cellInfo.expandable && 'rt-expandable', (isBranch || isPreview) && 'rt-pivot'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, tdProps.rest, columnProps.rest, interactionProps), resolvedCell);\n        })), rowInfo.subRows && isExpanded && rowInfo.subRows.map(function (d, i) {\n          return makePageRow(d, i, rowInfo.nestingPath);\n        }), SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo));\n      };\n\n      var makePadColumn = function makePadColumn(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var flex = width;\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var tdProps = _.splitProps(getTdProps(finalState, undefined, column, _this2));\n\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var classes = [tdProps.className, column.className, columnProps.className];\n\n        var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n        return React.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: flex + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, tdProps.rest), _.normalizeComponent(PadRowComponent));\n      };\n\n      var makePadRow = function makePadRow(row, i) {\n        var trGroupProps = getTrGroupProps(finalState, undefined, undefined, _this2);\n\n        var trProps = _.splitProps(getTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TrGroupComponent, _extends({\n          key: i\n        }, trGroupProps), React.createElement(TrComponent, {\n          className: classnames('-padRow', (pageRows.length + i) % 2 ? '-even' : '-odd', trProps.className),\n          style: trProps.style || {}\n        }, allVisibleColumns.map(makePadColumn)));\n      };\n\n      var makeColumnFooter = function makeColumnFooter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, undefined, _this2));\n\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var columnFooterProps = _.splitProps(column.getFooterProps(finalState, undefined, column, _this2));\n\n        var classes = [tFootTdProps.className, column.className, columnProps.className, columnFooterProps.className];\n\n        var styles = _extends({}, tFootTdProps.style, column.style, columnProps.style, columnFooterProps.style);\n\n        return React.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, columnProps.rest, tFootTdProps.rest, columnFooterProps.rest), _.normalizeComponent(column.Footer, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeColumnFooters = function makeColumnFooters() {\n        var tFootProps = getTfootProps(finalState, undefined, undefined, _this2);\n\n        var tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TfootComponent, _extends({\n          className: tFootProps.className,\n          style: _extends({}, tFootProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tFootProps.rest), React.createElement(TrComponent, _extends({\n          className: classnames(tFootTrProps.className),\n          style: tFootTrProps.style\n        }, tFootTrProps.rest), allVisibleColumns.map(makeColumnFooter)));\n      };\n\n      var makePagination = function makePagination() {\n        var paginationProps = _.splitProps(getPaginationProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(PaginationComponent, _extends({}, resolvedState, {\n          pages: pages,\n          canPrevious: canPrevious,\n          canNext: canNext,\n          onPageChange: _this2.onPageChange,\n          onPageSizeChange: _this2.onPageSizeChange,\n          className: paginationProps.className,\n          style: paginationProps.style\n        }, paginationProps.rest));\n      };\n\n      var makeTable = function makeTable() {\n        var pagination = makePagination();\n        return React.createElement('div', _extends({\n          className: classnames('ReactTable', className, rootProps.className),\n          style: _extends({}, style, rootProps.style)\n        }, rootProps.rest), showPagination && showPaginationTop ? React.createElement('div', {\n          className: 'pagination-top'\n        }, pagination) : null, React.createElement(TableComponent, _extends({\n          className: classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : ''),\n          style: tableProps.style\n        }, tableProps.rest), hasHeaderGroups ? makeHeaderGroups() : null, makeHeaders(), hasFilters ? makeFilters() : null, React.createElement(TbodyComponent, _extends({\n          className: classnames(tBodyProps.className),\n          style: _extends({}, tBodyProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tBodyProps.rest), pageRows.map(function (d, i) {\n          return makePageRow(d, i);\n        }), padRows.map(makePadRow)), hasColumnFooter ? makeColumnFooters() : null), showPagination && showPaginationBottom ? React.createElement('div', {\n          className: 'pagination-bottom'\n        }, pagination) : null, !pageRows.length && React.createElement(NoDataComponent, noDataProps, _.normalizeComponent(noDataText)), React.createElement(LoadingComponent, _extends({\n          loading: loading,\n          loadingText: loadingText\n        }, loadingProps)));\n      }; // childProps are optionally passed to a function-as-a-child\n\n\n      return children ? children(finalState, makeTable, this) : makeTable();\n    }\n  }]);\n\n  return ReactTable;\n}(Methods(Lifecycle(Component)));\n\nReactTable.propTypes = propTypes;\nReactTable.defaultProps = defaultProps;\nexport default ReactTable;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable */\n\n\nexports.default = function (Component) {\n  var _class, _temp, _initialiseProps;\n\n  var wrapper = (_temp = _class = function (_React$Component) {\n    _inherits(RTTreeTable, _React$Component);\n\n    function RTTreeTable(props) {\n      _classCallCheck(this, RTTreeTable);\n\n      var _this = _possibleConstructorReturn(this, (RTTreeTable.__proto__ || Object.getPrototypeOf(RTTreeTable)).call(this, props));\n\n      _initialiseProps.call(_this);\n\n      _this.getWrappedInstance.bind(_this);\n\n      _this.TrComponent.bind(_this);\n\n      _this.getTrProps.bind(_this);\n\n      return _this;\n    } // this is so we can expose the underlying ReactTable to get at the sortedData for selectAll\n\n\n    _createClass(RTTreeTable, [{\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            columns = _props.columns,\n            treeTableIndent = _props.treeTableIndent,\n            rest = _objectWithoutProperties(_props, ['columns', 'treeTableIndent']);\n\n        var TrComponent = this.TrComponent,\n            getTrProps = this.getTrProps;\n        var extra = {\n          columns: columns.map(function (col) {\n            var column = col;\n\n            if (rest.pivotBy && rest.pivotBy.includes(col.accessor)) {\n              column = {\n                accessor: col.accessor,\n                width: treeTableIndent + 'px',\n                show: false,\n                Header: ''\n              };\n            }\n\n            return column;\n          }),\n          TrComponent: TrComponent,\n          getTrProps: getTrProps\n        };\n        return _react2.default.createElement(Component, _extends({}, rest, extra, {\n          ref: function ref(r) {\n            return _this2.wrappedInstance = r;\n          }\n        }));\n      }\n    }]);\n\n    return RTTreeTable;\n  }(_react2.default.Component), _initialiseProps = function _initialiseProps() {\n    var _this3 = this;\n\n    this.getWrappedInstance = function () {\n      if (!_this3.wrappedInstance) console.warn('RTTreeTable - No wrapped instance');\n      if (_this3.wrappedInstance.getWrappedInstance) return _this3.wrappedInstance.getWrappedInstance();else return _this3.wrappedInstance;\n    };\n\n    this.TrComponent = function (props) {\n      var ri = props.ri,\n          rest = _objectWithoutProperties(props, ['ri']);\n\n      if (ri && ri.groupedByPivot) {\n        var cell = _extends({}, props.children[ri.level]);\n\n        cell.props.style.flex = 'unset';\n        cell.props.style.width = '100%';\n        cell.props.style.maxWidth = 'unset';\n        cell.props.style.paddingLeft = _this3.props.treeTableIndent * ri.level + 'px'; // cell.props.style.backgroundColor = '#DDD';\n\n        cell.props.style.borderBottom = '1px solid rgba(128,128,128,0.2)';\n        return _react2.default.createElement('div', {\n          className: 'rt-tr ' + rest.className,\n          style: rest.style\n        }, cell);\n      }\n\n      return _react2.default.createElement(Component.defaultProps.TrComponent, rest);\n    };\n\n    this.getTrProps = function (state, ri, ci, instance) {\n      return {\n        ri: ri\n      };\n    };\n  }, _temp);\n  wrapper.displayName = 'RTTreeTable';\n  wrapper.defaultProps = {\n    treeTableIndent: 10\n  };\n  return wrapper;\n};","//  Chance.js 1.0.18\n//  http://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n(function () {\n  // Constants\n  var MAX_INT = 9007199254740992;\n  var MIN_INT = -MAX_INT;\n  var NUMBERS = '0123456789';\n  var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n  var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n  var HEX_POOL = NUMBERS + \"abcdef\"; // Errors\n\n  function UnsupportedError(message) {\n    this.name = 'UnsupportedError';\n    this.message = message || 'This feature is not supported on this platform';\n  }\n\n  UnsupportedError.prototype = new Error();\n  UnsupportedError.prototype.constructor = UnsupportedError; // Cached array helpers\n\n  var slice = Array.prototype.slice; // Constructor\n\n  function Chance(seed) {\n    if (!(this instanceof Chance)) {\n      if (!seed) {\n        seed = null;\n      } // handle other non-truthy seeds, as described in issue #322\n\n\n      return seed === null ? new Chance() : new Chance(seed);\n    } // if user has provided a function, use that as the generator\n\n\n    if (typeof seed === 'function') {\n      this.random = seed;\n      return this;\n    }\n\n    if (arguments.length) {\n      // set a starting value of zero so we can add to it\n      this.seed = 0;\n    } // otherwise, leave this.seed blank so that MT will receive a blank\n\n\n    for (var i = 0; i < arguments.length; i++) {\n      var seedling = 0;\n\n      if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n        for (var j = 0; j < arguments[i].length; j++) {\n          // create a numeric hash for each argument, add to seedling\n          var hash = 0;\n\n          for (var k = 0; k < arguments[i].length; k++) {\n            hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n          }\n\n          seedling += hash;\n        }\n      } else {\n        seedling = arguments[i];\n      }\n\n      this.seed += (arguments.length - i) * seedling;\n    } // If no generator function was provided, use our MT\n\n\n    this.mt = this.mersenne_twister(this.seed);\n    this.bimd5 = this.blueimp_md5();\n\n    this.random = function () {\n      return this.mt.random(this.seed);\n    };\n\n    return this;\n  }\n\n  Chance.prototype.VERSION = \"1.0.18\"; // Random helper functions\n\n  function initOptions(options, defaults) {\n    options = options || {};\n\n    if (defaults) {\n      for (var i in defaults) {\n        if (typeof options[i] === 'undefined') {\n          options[i] = defaults[i];\n        }\n      }\n    }\n\n    return options;\n  }\n\n  function range(size) {\n    return Array.apply(null, Array(size)).map(function (_, i) {\n      return i;\n    });\n  }\n\n  function testRange(test, errorMessage) {\n    if (test) {\n      throw new RangeError(errorMessage);\n    }\n  }\n  /**\n   * Encode the input string with Base64.\n   */\n\n\n  var base64 = function base64() {\n    throw new Error('No Base64 encoder available.');\n  }; // Select proper Base64 encoder.\n\n\n  (function determineBase64Encoder() {\n    if (typeof btoa === 'function') {\n      base64 = btoa;\n    } else if (typeof Buffer === 'function') {\n      base64 = function base64(input) {\n        return new Buffer(input).toString('base64');\n      };\n    }\n  })(); // -- Basics --\n\n  /**\n   *  Return a random bool, either true or false\n   *\n   *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n   *    receiving a true or false value back.\n   *  @throws {RangeError} if the likelihood is out of bounds\n   *  @returns {Bool} either true or false\n   */\n\n\n  Chance.prototype.bool = function (options) {\n    // likelihood of success (true)\n    options = initOptions(options, {\n      likelihood: 50\n    }); // Note, we could get some minor perf optimizations by checking range\n    // prior to initializing defaults, but that makes code a bit messier\n    // and the check more complicated as we have to check existence of\n    // the object then existence of the key before checking constraints.\n    // Since the options initialization should be minor computationally,\n    // decision made for code cleanliness intentionally. This is mentioned\n    // here as it's the first occurrence, will not be mentioned again.\n\n    testRange(options.likelihood < 0 || options.likelihood > 100, \"Chance: Likelihood accepts values from 0 to 100.\");\n    return this.random() * 100 < options.likelihood;\n  };\n\n  Chance.prototype.animal = function (options) {\n    //returns a random animal\n    options = initOptions(options);\n\n    if (typeof options.type !== 'undefined') {\n      //if user does not put in a valid animal type, user will get an error\n      testRange(!this.get(\"animals\")[options.type.toLowerCase()], \"Please pick from desert, ocean, grassland, forest, zoo, pets, farm.\"); //if user does put in valid animal type, will return a random animal of that type\n\n      return this.pick(this.get(\"animals\")[options.type.toLowerCase()]);\n    } //if user does not put in any animal type, will return a random animal regardless\n\n\n    animalTypeArray = [\"desert\", \"forest\", \"ocean\", \"zoo\", \"farm\", \"pet\", \"grassland\"];\n    return this.pick(this.get(\"animals\")[this.pick(animalTypeArray)]);\n  };\n  /**\n   *  Return a random character.\n   *\n   *  @param {Object} [options={}] can specify a character pool or alpha,\n   *    numeric, symbols and casing (lower or upper)\n   *  @returns {String} a single random character\n   */\n\n\n  Chance.prototype.character = function (options) {\n    options = initOptions(options);\n    var symbols = \"!@#$%^&*()[]\",\n        letters,\n        pool;\n\n    if (options.casing === 'lower') {\n      letters = CHARS_LOWER;\n    } else if (options.casing === 'upper') {\n      letters = CHARS_UPPER;\n    } else {\n      letters = CHARS_LOWER + CHARS_UPPER;\n    }\n\n    if (options.pool) {\n      pool = options.pool;\n    } else {\n      pool = '';\n\n      if (options.alpha) {\n        pool += letters;\n      }\n\n      if (options.numeric) {\n        pool += NUMBERS;\n      }\n\n      if (options.symbols) {\n        pool += symbols;\n      }\n\n      if (!pool) {\n        pool = letters + NUMBERS + symbols;\n      }\n    }\n\n    return pool.charAt(this.natural({\n      max: pool.length - 1\n    }));\n  }; // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n  // Note, fixed means N OR LESS digits after the decimal. This because\n  // It could be 14.9000 but in JavaScript, when this is cast as a number,\n  // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n  // needed\n\n  /**\n   *  Return a random floating point number\n   *\n   *  @param {Object} [options={}] can specify a fixed precision, min, max\n   *  @returns {Number} a single floating point number\n   *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n   *    min cannot be greater than max\n   */\n\n\n  Chance.prototype.floating = function (options) {\n    options = initOptions(options, {\n      fixed: 4\n    });\n    testRange(options.fixed && options.precision, \"Chance: Cannot specify both fixed and precision.\");\n    var num;\n    var fixed = Math.pow(10, options.fixed);\n    var max = MAX_INT / fixed;\n    var min = -max;\n    testRange(options.min && options.fixed && options.min < min, \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min);\n    testRange(options.max && options.fixed && options.max > max, \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max);\n    options = initOptions(options, {\n      min: min,\n      max: max\n    }); // Todo - Make this work!\n    // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n    num = this.integer({\n      min: options.min * fixed,\n      max: options.max * fixed\n    });\n    var num_fixed = (num / fixed).toFixed(options.fixed);\n    return parseFloat(num_fixed);\n  };\n  /**\n   *  Return a random integer\n   *\n   *  NOTE the max and min are INCLUDED in the range. So:\n   *  chance.integer({min: 1, max: 3});\n   *  would return either 1, 2, or 3.\n   *\n   *  @param {Object} [options={}] can specify a min and/or max\n   *  @returns {Number} a single random integer number\n   *  @throws {RangeError} min cannot be greater than max\n   */\n\n\n  Chance.prototype.integer = function (options) {\n    // 9007199254740992 (2^53) is the max integer number in JavaScript\n    // See: http://vq.io/132sa2j\n    options = initOptions(options, {\n      min: MIN_INT,\n      max: MAX_INT\n    });\n    testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n    return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n  };\n  /**\n   *  Return a random natural\n   *\n   *  NOTE the max and min are INCLUDED in the range. So:\n   *  chance.natural({min: 1, max: 3});\n   *  would return either 1, 2, or 3.\n   *\n   *  @param {Object} [options={}] can specify a min and/or max or a numerals count.\n   *  @returns {Number} a single random integer number\n   *  @throws {RangeError} min cannot be greater than max\n   */\n\n\n  Chance.prototype.natural = function (options) {\n    options = initOptions(options, {\n      min: 0,\n      max: MAX_INT\n    });\n\n    if (typeof options.numerals === 'number') {\n      testRange(options.numerals < 1, \"Chance: Numerals cannot be less than one.\");\n      options.min = Math.pow(10, options.numerals - 1);\n      options.max = Math.pow(10, options.numerals) - 1;\n    }\n\n    testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n    return this.integer(options);\n  };\n  /**\n   *  Return a random prime number\n   *\n   *  NOTE the max and min are INCLUDED in the range.\n   *\n   *  @param {Object} [options={}] can specify a min and/or max\n   *  @returns {Number} a single random prime number\n   *  @throws {RangeError} min cannot be greater than max nor negative\n   */\n\n\n  Chance.prototype.prime = function (options) {\n    options = initOptions(options, {\n      min: 0,\n      max: 10000\n    });\n    testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n    testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n    var lastPrime = data.primes[data.primes.length - 1];\n\n    if (options.max > lastPrime) {\n      for (var i = lastPrime + 2; i <= options.max; ++i) {\n        if (this.is_prime(i)) {\n          data.primes.push(i);\n        }\n      }\n    }\n\n    var targetPrimes = data.primes.filter(function (prime) {\n      return prime >= options.min && prime <= options.max;\n    });\n    return this.pick(targetPrimes);\n  };\n  /**\n   * Determine whether a given number is prime or not.\n   */\n\n\n  Chance.prototype.is_prime = function (n) {\n    if (n % 1 || n < 2) {\n      return false;\n    }\n\n    if (n % 2 === 0) {\n      return n === 2;\n    }\n\n    if (n % 3 === 0) {\n      return n === 3;\n    }\n\n    var m = Math.sqrt(n);\n\n    for (var i = 5; i <= m; i += 6) {\n      if (n % i === 0 || n % (i + 2) === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   *  Return a random hex number as string\n   *\n   *  NOTE the max and min are INCLUDED in the range. So:\n   *  chance.hex({min: '9', max: 'B'});\n   *  would return either '9', 'A' or 'B'.\n   *\n   *  @param {Object} [options={}] can specify a min and/or max and/or casing\n   *  @returns {String} a single random string hex number\n   *  @throws {RangeError} min cannot be greater than max\n   */\n\n\n  Chance.prototype.hex = function (options) {\n    options = initOptions(options, {\n      min: 0,\n      max: MAX_INT,\n      casing: 'lower'\n    });\n    testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n    var integer = this.natural({\n      min: options.min,\n      max: options.max\n    });\n\n    if (options.casing === 'upper') {\n      return integer.toString(16).toUpperCase();\n    }\n\n    return integer.toString(16);\n  };\n\n  Chance.prototype.letter = function (options) {\n    options = initOptions(options, {\n      casing: 'lower'\n    });\n    var pool = \"abcdefghijklmnopqrstuvwxyz\";\n    var letter = this.character({\n      pool: pool\n    });\n\n    if (options.casing === 'upper') {\n      letter = letter.toUpperCase();\n    }\n\n    return letter;\n  };\n  /**\n   *  Return a random string\n   *\n   *  @param {Object} [options={}] can specify a length\n   *  @returns {String} a string of random length\n   *  @throws {RangeError} length cannot be less than zero\n   */\n\n\n  Chance.prototype.string = function (options) {\n    options = initOptions(options, {\n      length: this.natural({\n        min: 5,\n        max: 20\n      })\n    });\n    testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n    var length = options.length,\n        text = this.n(this.character, length, options);\n    return text.join(\"\");\n  };\n  /**\n   *  Return a random buffer\n   *\n   *  @param {Object} [options={}] can specify a length\n   *  @returns {Buffer} a buffer of random length\n   *  @throws {RangeError} length cannot be less than zero\n   */\n\n\n  Chance.prototype.buffer = function (options) {\n    if (typeof Buffer === 'undefined') {\n      throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');\n    }\n\n    options = initOptions(options, {\n      length: this.natural({\n        min: 5,\n        max: 20\n      })\n    });\n    testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n    var length = options.length;\n    var content = this.n(this.character, length, options);\n    return Buffer.from(content);\n  }; // -- End Basics --\n  // -- Helpers --\n\n\n  Chance.prototype.capitalize = function (word) {\n    return word.charAt(0).toUpperCase() + word.substr(1);\n  };\n\n  Chance.prototype.mixin = function (obj) {\n    for (var func_name in obj) {\n      Chance.prototype[func_name] = obj[func_name];\n    }\n\n    return this;\n  };\n  /**\n   *  Given a function that generates something random and a number of items to generate,\n   *    return an array of items where none repeat.\n   *\n   *  @param {Function} fn the function that generates something random\n   *  @param {Number} num number of terms to generate\n   *  @param {Object} options any options to pass on to the generator function\n   *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n   *\n   *  There can be more parameters after these. All additional parameters are provided to the given function\n   */\n\n\n  Chance.prototype.unique = function (fn, num, options) {\n    testRange(typeof fn !== \"function\", \"Chance: The first argument must be a function.\");\n\n    var comparator = function comparator(arr, val) {\n      return arr.indexOf(val) !== -1;\n    };\n\n    if (options) {\n      comparator = options.comparator || comparator;\n    }\n\n    var arr = [],\n        count = 0,\n        result,\n        MAX_DUPLICATES = num * 50,\n        params = slice.call(arguments, 2);\n\n    while (arr.length < num) {\n      var clonedParams = JSON.parse(JSON.stringify(params));\n      result = fn.apply(this, clonedParams);\n\n      if (!comparator(arr, result)) {\n        arr.push(result); // reset count when unique found\n\n        count = 0;\n      }\n\n      if (++count > MAX_DUPLICATES) {\n        throw new RangeError(\"Chance: num is likely too large for sample set\");\n      }\n    }\n\n    return arr;\n  };\n  /**\n   *  Gives an array of n random terms\n   *\n   *  @param {Function} fn the function that generates something random\n   *  @param {Number} n number of terms to generate\n   *  @returns {Array} an array of length `n` with items generated by `fn`\n   *\n   *  There can be more parameters after these. All additional parameters are provided to the given function\n   */\n\n\n  Chance.prototype.n = function (fn, n) {\n    testRange(typeof fn !== \"function\", \"Chance: The first argument must be a function.\");\n\n    if (typeof n === 'undefined') {\n      n = 1;\n    }\n\n    var i = n,\n        arr = [],\n        params = slice.call(arguments, 2); // Providing a negative count should result in a noop.\n\n    i = Math.max(0, i);\n\n    for (null; i--; null) {\n      arr.push(fn.apply(this, params));\n    }\n\n    return arr;\n  }; // H/T to SO for this one: http://vq.io/OtUrZ5\n\n\n  Chance.prototype.pad = function (number, width, pad) {\n    // Default pad to 0 if none provided\n    pad = pad || '0'; // Convert number to a string\n\n    number = number + '';\n    return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n  }; // DEPRECATED on 2015-10-01\n\n\n  Chance.prototype.pick = function (arr, count) {\n    if (arr.length === 0) {\n      throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n    }\n\n    if (!count || count === 1) {\n      return arr[this.natural({\n        max: arr.length - 1\n      })];\n    } else {\n      return this.shuffle(arr).slice(0, count);\n    }\n  }; // Given an array, returns a single random element\n\n\n  Chance.prototype.pickone = function (arr) {\n    if (arr.length === 0) {\n      throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n    }\n\n    return arr[this.natural({\n      max: arr.length - 1\n    })];\n  }; // Given an array, returns a random set with 'count' elements\n\n\n  Chance.prototype.pickset = function (arr, count) {\n    if (count === 0) {\n      return [];\n    }\n\n    if (arr.length === 0) {\n      throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n    }\n\n    if (count < 0) {\n      throw new RangeError(\"Chance: Count must be a positive number\");\n    }\n\n    if (!count || count === 1) {\n      return [this.pickone(arr)];\n    } else {\n      var array = arr.slice(0);\n      var end = array.length;\n      return this.n(function () {\n        var index = this.natural({\n          max: --end\n        });\n        var value = array[index];\n        array[index] = array[end];\n        return value;\n      }, Math.min(end, count));\n    }\n  };\n\n  Chance.prototype.shuffle = function (arr) {\n    var new_array = [],\n        j = 0,\n        length = Number(arr.length),\n        source_indexes = range(length),\n        last_source_index = length - 1,\n        selected_source_index;\n\n    for (var i = 0; i < length; i++) {\n      // Pick a random index from the array\n      selected_source_index = this.natural({\n        max: last_source_index\n      });\n      j = source_indexes[selected_source_index]; // Add it to the new array\n\n      new_array[i] = arr[j]; // Mark the source index as used\n\n      source_indexes[selected_source_index] = source_indexes[last_source_index];\n      last_source_index -= 1;\n    }\n\n    return new_array;\n  }; // Returns a single item from an array with relative weighting of odds\n\n\n  Chance.prototype.weighted = function (arr, weights, trim) {\n    if (arr.length !== weights.length) {\n      throw new RangeError(\"Chance: Length of array and weights must match\");\n    } // scan weights array and sum valid entries\n\n\n    var sum = 0;\n    var val;\n\n    for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n      val = weights[weightIndex];\n\n      if (isNaN(val)) {\n        throw new RangeError(\"Chance: All weights must be numbers\");\n      }\n\n      if (val > 0) {\n        sum += val;\n      }\n    }\n\n    if (sum === 0) {\n      throw new RangeError(\"Chance: No valid entries in array weights\");\n    } // select a value within range\n\n\n    var selected = this.random() * sum; // find array entry corresponding to selected value\n\n    var total = 0;\n    var lastGoodIdx = -1;\n    var chosenIdx;\n\n    for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n      val = weights[weightIndex];\n      total += val;\n\n      if (val > 0) {\n        if (selected <= total) {\n          chosenIdx = weightIndex;\n          break;\n        }\n\n        lastGoodIdx = weightIndex;\n      } // handle any possible rounding error comparison to ensure something is picked\n\n\n      if (weightIndex === weights.length - 1) {\n        chosenIdx = lastGoodIdx;\n      }\n    }\n\n    var chosen = arr[chosenIdx];\n    trim = typeof trim === 'undefined' ? false : trim;\n\n    if (trim) {\n      arr.splice(chosenIdx, 1);\n      weights.splice(chosenIdx, 1);\n    }\n\n    return chosen;\n  }; // -- End Helpers --\n  // -- Text --\n\n\n  Chance.prototype.paragraph = function (options) {\n    options = initOptions(options);\n    var sentences = options.sentences || this.natural({\n      min: 3,\n      max: 7\n    }),\n        sentence_array = this.n(this.sentence, sentences);\n    return sentence_array.join(' ');\n  }; // Could get smarter about this than generating random words and\n  // chaining them together. Such as: http://vq.io/1a5ceOh\n\n\n  Chance.prototype.sentence = function (options) {\n    options = initOptions(options);\n    var words = options.words || this.natural({\n      min: 12,\n      max: 18\n    }),\n        punctuation = options.punctuation,\n        text,\n        word_array = this.n(this.word, words);\n    text = word_array.join(' '); // Capitalize first letter of sentence\n\n    text = this.capitalize(text); // Make sure punctuation has a usable value\n\n    if (punctuation !== false && !/^[\\.\\?;!:]$/.test(punctuation)) {\n      punctuation = '.';\n    } // Add punctuation mark\n\n\n    if (punctuation) {\n      text += punctuation;\n    }\n\n    return text;\n  };\n\n  Chance.prototype.syllable = function (options) {\n    options = initOptions(options);\n    var length = options.length || this.natural({\n      min: 2,\n      max: 3\n    }),\n        consonants = 'bcdfghjklmnprstvwz',\n        // consonants except hard to speak ones\n    vowels = 'aeiou',\n        // vowels\n    all = consonants + vowels,\n        // all\n    text = '',\n        chr; // I'm sure there's a more elegant way to do this, but this works\n    // decently well.\n\n    for (var i = 0; i < length; i++) {\n      if (i === 0) {\n        // First character can be anything\n        chr = this.character({\n          pool: all\n        });\n      } else if (consonants.indexOf(chr) === -1) {\n        // Last character was a vowel, now we want a consonant\n        chr = this.character({\n          pool: consonants\n        });\n      } else {\n        // Last character was a consonant, now we want a vowel\n        chr = this.character({\n          pool: vowels\n        });\n      }\n\n      text += chr;\n    }\n\n    if (options.capitalize) {\n      text = this.capitalize(text);\n    }\n\n    return text;\n  };\n\n  Chance.prototype.word = function (options) {\n    options = initOptions(options);\n    testRange(options.syllables && options.length, \"Chance: Cannot specify both syllables AND length.\");\n    var syllables = options.syllables || this.natural({\n      min: 1,\n      max: 3\n    }),\n        text = '';\n\n    if (options.length) {\n      // Either bound word by length\n      do {\n        text += this.syllable();\n      } while (text.length < options.length);\n\n      text = text.substring(0, options.length);\n    } else {\n      // Or by number of syllables\n      for (var i = 0; i < syllables; i++) {\n        text += this.syllable();\n      }\n    }\n\n    if (options.capitalize) {\n      text = this.capitalize(text);\n    }\n\n    return text;\n  }; // -- End Text --\n  // -- Person --\n\n\n  Chance.prototype.age = function (options) {\n    options = initOptions(options);\n    var ageRange;\n\n    switch (options.type) {\n      case 'child':\n        ageRange = {\n          min: 0,\n          max: 12\n        };\n        break;\n\n      case 'teen':\n        ageRange = {\n          min: 13,\n          max: 19\n        };\n        break;\n\n      case 'adult':\n        ageRange = {\n          min: 18,\n          max: 65\n        };\n        break;\n\n      case 'senior':\n        ageRange = {\n          min: 65,\n          max: 100\n        };\n        break;\n\n      case 'all':\n        ageRange = {\n          min: 0,\n          max: 100\n        };\n        break;\n\n      default:\n        ageRange = {\n          min: 18,\n          max: 65\n        };\n        break;\n    }\n\n    return this.natural(ageRange);\n  };\n\n  Chance.prototype.birthday = function (options) {\n    var age = this.age(options);\n    var currentYear = new Date().getFullYear();\n\n    if (options && options.type) {\n      var min = new Date();\n      var max = new Date();\n      min.setFullYear(currentYear - age - 1);\n      max.setFullYear(currentYear - age);\n      options = initOptions(options, {\n        min: min,\n        max: max\n      });\n    } else {\n      options = initOptions(options, {\n        year: currentYear - age\n      });\n    }\n\n    return this.date(options);\n  }; // CPF; ID to identify taxpayers in Brazil\n\n\n  Chance.prototype.cpf = function (options) {\n    options = initOptions(options, {\n      formatted: true\n    });\n    var n = this.n(this.natural, 9, {\n      max: 9\n    });\n    var d1 = n[8] * 2 + n[7] * 3 + n[6] * 4 + n[5] * 5 + n[4] * 6 + n[3] * 7 + n[2] * 8 + n[1] * 9 + n[0] * 10;\n    d1 = 11 - d1 % 11;\n\n    if (d1 >= 10) {\n      d1 = 0;\n    }\n\n    var d2 = d1 * 2 + n[8] * 3 + n[7] * 4 + n[6] * 5 + n[5] * 6 + n[4] * 7 + n[3] * 8 + n[2] * 9 + n[1] * 10 + n[0] * 11;\n    d2 = 11 - d2 % 11;\n\n    if (d2 >= 10) {\n      d2 = 0;\n    }\n\n    var cpf = '' + n[0] + n[1] + n[2] + '.' + n[3] + n[4] + n[5] + '.' + n[6] + n[7] + n[8] + '-' + d1 + d2;\n    return options.formatted ? cpf : cpf.replace(/\\D/g, '');\n  }; // CNPJ: ID to identify companies in Brazil\n\n\n  Chance.prototype.cnpj = function (options) {\n    options = initOptions(options, {\n      formatted: true\n    });\n    var n = this.n(this.natural, 12, {\n      max: 12\n    });\n    var d1 = n[11] * 2 + n[10] * 3 + n[9] * 4 + n[8] * 5 + n[7] * 6 + n[6] * 7 + n[5] * 8 + n[4] * 9 + n[3] * 2 + n[2] * 3 + n[1] * 4 + n[0] * 5;\n    d1 = 11 - d1 % 11;\n\n    if (d1 < 2) {\n      d1 = 0;\n    }\n\n    var d2 = d1 * 2 + n[11] * 3 + n[10] * 4 + n[9] * 5 + n[8] * 6 + n[7] * 7 + n[6] * 8 + n[5] * 9 + n[4] * 2 + n[3] * 3 + n[2] * 4 + n[1] * 5 + n[0] * 6;\n    d2 = 11 - d2 % 11;\n\n    if (d2 < 2) {\n      d2 = 0;\n    }\n\n    var cnpj = '' + n[0] + n[1] + '.' + n[2] + n[3] + n[4] + '.' + n[5] + n[6] + n[7] + '/' + n[8] + n[9] + n[10] + n[11] + '-' + d1 + d2;\n    return options.formatted ? cnpj : cnpj.replace(/\\D/g, '');\n  };\n\n  Chance.prototype.first = function (options) {\n    options = initOptions(options, {\n      gender: this.gender(),\n      nationality: 'en'\n    });\n    return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n  };\n\n  Chance.prototype.profession = function (options) {\n    options = initOptions(options);\n\n    if (options.rank) {\n      return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get(\"profession\"));\n    } else {\n      return this.pick(this.get(\"profession\"));\n    }\n  };\n\n  Chance.prototype.company = function () {\n    return this.pick(this.get(\"company\"));\n  };\n\n  Chance.prototype.gender = function (options) {\n    options = initOptions(options, {\n      extraGenders: []\n    });\n    return this.pick(['Male', 'Female'].concat(options.extraGenders));\n  };\n\n  Chance.prototype.last = function (options) {\n    options = initOptions(options, {\n      nationality: '*'\n    });\n\n    if (options.nationality === \"*\") {\n      var allLastNames = [];\n      var lastNames = this.get(\"lastNames\");\n      Object.keys(lastNames).forEach(function (key, i) {\n        allLastNames = allLastNames.concat(lastNames[key]);\n      });\n      return this.pick(allLastNames);\n    } else {\n      return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n    }\n  };\n\n  Chance.prototype.israelId = function () {\n    var x = this.string({\n      pool: '0123456789',\n      length: 8\n    });\n    var y = 0;\n\n    for (var i = 0; i < x.length; i++) {\n      var thisDigit = x[i] * (i / 2 === parseInt(i / 2) ? 1 : 2);\n      thisDigit = this.pad(thisDigit, 2).toString();\n      thisDigit = parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n      y = y + thisDigit;\n    }\n\n    x = x + (10 - parseInt(y.toString().slice(-1))).toString().slice(-1);\n    return x;\n  };\n\n  Chance.prototype.mrz = function (options) {\n    var checkDigit = function checkDigit(input) {\n      var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n          multipliers = [7, 3, 1],\n          runningTotal = 0;\n\n      if (typeof input !== 'string') {\n        input = input.toString();\n      }\n\n      input.split('').forEach(function (character, idx) {\n        var pos = alpha.indexOf(character);\n\n        if (pos !== -1) {\n          character = pos === 0 ? 0 : pos + 9;\n        } else {\n          character = parseInt(character, 10);\n        }\n\n        character *= multipliers[idx % multipliers.length];\n        runningTotal += character;\n      });\n      return runningTotal % 10;\n    };\n\n    var generate = function generate(opts) {\n      var pad = function pad(length) {\n        return new Array(length + 1).join('<');\n      };\n\n      var number = ['P<', opts.issuer, opts.last.toUpperCase(), '<<', opts.first.toUpperCase(), pad(39 - (opts.last.length + opts.first.length + 2)), opts.passportNumber, checkDigit(opts.passportNumber), opts.nationality, opts.dob, checkDigit(opts.dob), opts.gender, opts.expiry, checkDigit(opts.expiry), pad(14), checkDigit(pad(14))].join('');\n      return number + checkDigit(number.substr(44, 10) + number.substr(57, 7) + number.substr(65, 7));\n    };\n\n    var that = this;\n    options = initOptions(options, {\n      first: this.first(),\n      last: this.last(),\n      passportNumber: this.integer({\n        min: 100000000,\n        max: 999999999\n      }),\n      dob: function () {\n        var date = that.birthday({\n          type: 'adult'\n        });\n        return [date.getFullYear().toString().substr(2), that.pad(date.getMonth() + 1, 2), that.pad(date.getDate(), 2)].join('');\n      }(),\n      expiry: function () {\n        var date = new Date();\n        return [(date.getFullYear() + 5).toString().substr(2), that.pad(date.getMonth() + 1, 2), that.pad(date.getDate(), 2)].join('');\n      }(),\n      gender: this.gender() === 'Female' ? 'F' : 'M',\n      issuer: 'GBR',\n      nationality: 'GBR'\n    });\n    return generate(options);\n  };\n\n  Chance.prototype.name = function (options) {\n    options = initOptions(options);\n    var first = this.first(options),\n        last = this.last(options),\n        name;\n\n    if (options.middle) {\n      name = first + ' ' + this.first(options) + ' ' + last;\n    } else if (options.middle_initial) {\n      name = first + ' ' + this.character({\n        alpha: true,\n        casing: 'upper'\n      }) + '. ' + last;\n    } else {\n      name = first + ' ' + last;\n    }\n\n    if (options.prefix) {\n      name = this.prefix(options) + ' ' + name;\n    }\n\n    if (options.suffix) {\n      name = name + ' ' + this.suffix(options);\n    }\n\n    return name;\n  }; // Return the list of available name prefixes based on supplied gender.\n  // @todo introduce internationalization\n\n\n  Chance.prototype.name_prefixes = function (gender) {\n    gender = gender || \"all\";\n    gender = gender.toLowerCase();\n    var prefixes = [{\n      name: 'Doctor',\n      abbreviation: 'Dr.'\n    }];\n\n    if (gender === \"male\" || gender === \"all\") {\n      prefixes.push({\n        name: 'Mister',\n        abbreviation: 'Mr.'\n      });\n    }\n\n    if (gender === \"female\" || gender === \"all\") {\n      prefixes.push({\n        name: 'Miss',\n        abbreviation: 'Miss'\n      });\n      prefixes.push({\n        name: 'Misses',\n        abbreviation: 'Mrs.'\n      });\n    }\n\n    return prefixes;\n  }; // Alias for name_prefix\n\n\n  Chance.prototype.prefix = function (options) {\n    return this.name_prefix(options);\n  };\n\n  Chance.prototype.name_prefix = function (options) {\n    options = initOptions(options, {\n      gender: \"all\"\n    });\n    return options.full ? this.pick(this.name_prefixes(options.gender)).name : this.pick(this.name_prefixes(options.gender)).abbreviation;\n  }; //Hungarian ID number\n\n\n  Chance.prototype.HIDN = function () {\n    //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n    var idn_pool = \"0123456789\";\n    var idn_chrs = \"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n    var idn = \"\";\n    idn += this.string({\n      pool: idn_pool,\n      length: 6\n    });\n    idn += this.string({\n      pool: idn_chrs,\n      length: 2\n    });\n    return idn;\n  };\n\n  Chance.prototype.ssn = function (options) {\n    options = initOptions(options, {\n      ssnFour: false,\n      dashes: true\n    });\n    var ssn_pool = \"1234567890\",\n        ssn,\n        dash = options.dashes ? '-' : '';\n\n    if (!options.ssnFour) {\n      ssn = this.string({\n        pool: ssn_pool,\n        length: 3\n      }) + dash + this.string({\n        pool: ssn_pool,\n        length: 2\n      }) + dash + this.string({\n        pool: ssn_pool,\n        length: 4\n      });\n    } else {\n      ssn = this.string({\n        pool: ssn_pool,\n        length: 4\n      });\n    }\n\n    return ssn;\n  }; // Aadhar is similar to ssn, used in India to uniquely identify a person\n\n\n  Chance.prototype.aadhar = function (options) {\n    options = initOptions(options, {\n      onlyLastFour: false,\n      separatedByWhiteSpace: true\n    });\n    var aadhar_pool = \"1234567890\",\n        aadhar,\n        whiteSpace = options.separatedByWhiteSpace ? ' ' : '';\n\n    if (!options.onlyLastFour) {\n      aadhar = this.string({\n        pool: aadhar_pool,\n        length: 4\n      }) + whiteSpace + this.string({\n        pool: aadhar_pool,\n        length: 4\n      }) + whiteSpace + this.string({\n        pool: aadhar_pool,\n        length: 4\n      });\n    } else {\n      aadhar = this.string({\n        pool: aadhar_pool,\n        length: 4\n      });\n    }\n\n    return aadhar;\n  }; // Return the list of available name suffixes\n  // @todo introduce internationalization\n\n\n  Chance.prototype.name_suffixes = function () {\n    var suffixes = [{\n      name: 'Doctor of Osteopathic Medicine',\n      abbreviation: 'D.O.'\n    }, {\n      name: 'Doctor of Philosophy',\n      abbreviation: 'Ph.D.'\n    }, {\n      name: 'Esquire',\n      abbreviation: 'Esq.'\n    }, {\n      name: 'Junior',\n      abbreviation: 'Jr.'\n    }, {\n      name: 'Juris Doctor',\n      abbreviation: 'J.D.'\n    }, {\n      name: 'Master of Arts',\n      abbreviation: 'M.A.'\n    }, {\n      name: 'Master of Business Administration',\n      abbreviation: 'M.B.A.'\n    }, {\n      name: 'Master of Science',\n      abbreviation: 'M.S.'\n    }, {\n      name: 'Medical Doctor',\n      abbreviation: 'M.D.'\n    }, {\n      name: 'Senior',\n      abbreviation: 'Sr.'\n    }, {\n      name: 'The Third',\n      abbreviation: 'III'\n    }, {\n      name: 'The Fourth',\n      abbreviation: 'IV'\n    }, {\n      name: 'Bachelor of Engineering',\n      abbreviation: 'B.E'\n    }, {\n      name: 'Bachelor of Technology',\n      abbreviation: 'B.TECH'\n    }];\n    return suffixes;\n  }; // Alias for name_suffix\n\n\n  Chance.prototype.suffix = function (options) {\n    return this.name_suffix(options);\n  };\n\n  Chance.prototype.name_suffix = function (options) {\n    options = initOptions(options);\n    return options.full ? this.pick(this.name_suffixes()).name : this.pick(this.name_suffixes()).abbreviation;\n  };\n\n  Chance.prototype.nationalities = function () {\n    return this.get(\"nationalities\");\n  }; // Generate random nationality based on json list\n\n\n  Chance.prototype.nationality = function () {\n    var nationality = this.pick(this.nationalities());\n    return nationality.name;\n  }; // -- End Person --\n  // -- Mobile --\n  // Android GCM Registration ID\n\n\n  Chance.prototype.android_id = function () {\n    return \"APA91\" + this.string({\n      pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\",\n      length: 178\n    });\n  }; // Apple Push Token\n\n\n  Chance.prototype.apple_token = function () {\n    return this.string({\n      pool: \"abcdef1234567890\",\n      length: 64\n    });\n  }; // Windows Phone 8 ANID2\n\n\n  Chance.prototype.wp8_anid2 = function () {\n    return base64(this.hash({\n      length: 32\n    }));\n  }; // Windows Phone 7 ANID\n\n\n  Chance.prototype.wp7_anid = function () {\n    return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({\n      length: 3\n    }) + '&W=' + this.integer({\n      min: 0,\n      max: 9\n    });\n  }; // BlackBerry Device PIN\n\n\n  Chance.prototype.bb_pin = function () {\n    return this.hash({\n      length: 8\n    });\n  }; // -- End Mobile --\n  // -- Web --\n\n\n  Chance.prototype.avatar = function (options) {\n    var url = null;\n    var URL_BASE = '//www.gravatar.com/avatar/';\n    var PROTOCOLS = {\n      http: 'http',\n      https: 'https'\n    };\n    var FILE_TYPES = {\n      bmp: 'bmp',\n      gif: 'gif',\n      jpg: 'jpg',\n      png: 'png'\n    };\n    var FALLBACKS = {\n      '404': '404',\n      // Return 404 if not found\n      mm: 'mm',\n      // Mystery man\n      identicon: 'identicon',\n      // Geometric pattern based on hash\n      monsterid: 'monsterid',\n      // A generated monster icon\n      wavatar: 'wavatar',\n      // A generated face\n      retro: 'retro',\n      // 8-bit icon\n      blank: 'blank' // A transparent png\n\n    };\n    var RATINGS = {\n      g: 'g',\n      pg: 'pg',\n      r: 'r',\n      x: 'x'\n    };\n    var opts = {\n      protocol: null,\n      email: null,\n      fileExtension: null,\n      size: null,\n      fallback: null,\n      rating: null\n    };\n\n    if (!options) {\n      // Set to a random email\n      opts.email = this.email();\n      options = {};\n    } else if (typeof options === 'string') {\n      opts.email = options;\n      options = {};\n    } else if (typeof options !== 'object') {\n      return null;\n    } else if (options.constructor === 'Array') {\n      return null;\n    }\n\n    opts = initOptions(options, opts);\n\n    if (!opts.email) {\n      // Set to a random email\n      opts.email = this.email();\n    } // Safe checking for params\n\n\n    opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n    opts.size = parseInt(opts.size, 0) ? opts.size : '';\n    opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n    opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n    opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n    url = opts.protocol + URL_BASE + this.bimd5.md5(opts.email) + (opts.fileExtension ? '.' + opts.fileExtension : '') + (opts.size || opts.rating || opts.fallback ? '?' : '') + (opts.size ? '&s=' + opts.size.toString() : '') + (opts.rating ? '&r=' + opts.rating : '') + (opts.fallback ? '&d=' + opts.fallback : '');\n    return url;\n  };\n  /**\n   * #Description:\n   * ===============================================\n   * Generate random color value base on color type:\n   * -> hex\n   * -> rgb\n   * -> rgba\n   * -> 0x\n   * -> named color\n   *\n   * #Examples:\n   * ===============================================\n   * * Geerate random hex color\n   * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n   *\n   * * Generate Hex based color value\n   * chance.color({format: 'hex'})    => '#d67118'\n   *\n   * * Generate simple rgb value\n   * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n   *\n   * * Generate Ox based color value\n   * chance.color({format: '0x'})     => '0x67ae0b'\n   *\n   * * Generate graiscale based value\n   * chance.color({grayscale: true})  => '#e2e2e2'\n   *\n   * * Return valide color name\n   * chance.color({format: 'name'})   => 'red'\n   *\n   * * Make color uppercase\n   * chance.color({casing: 'upper'})  => '#29CFA7'\n   *\n   * * Min Max values for RGBA\n   * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n   *\n   * @param  [object] options\n   * @return [string] color value\n   */\n\n\n  Chance.prototype.color = function (options) {\n    function gray(value, delimiter) {\n      return [value, value, value].join(delimiter || '');\n    }\n\n    function rgb(hasAlpha) {\n      var rgbValue = hasAlpha ? 'rgba' : 'rgb';\n      var alphaChannel = hasAlpha ? ',' + this.floating({\n        min: min_alpha,\n        max: max_alpha\n      }) : \"\";\n      var colorValue = isGrayscale ? gray(this.natural({\n        min: min_rgb,\n        max: max_rgb\n      }), ',') : this.natural({\n        min: min_green,\n        max: max_green\n      }) + ',' + this.natural({\n        min: min_blue,\n        max: max_blue\n      }) + ',' + this.natural({\n        max: 255\n      });\n      return rgbValue + '(' + colorValue + alphaChannel + ')';\n    }\n\n    function hex(start, end, withHash) {\n      var symbol = withHash ? \"#\" : \"\";\n      var hexstring = \"\";\n\n      if (isGrayscale) {\n        hexstring = gray(this.pad(this.hex({\n          min: min_rgb,\n          max: max_rgb\n        }), 2));\n\n        if (options.format === \"shorthex\") {\n          hexstring = gray(this.hex({\n            min: 0,\n            max: 15\n          }));\n        }\n      } else {\n        if (options.format === \"shorthex\") {\n          hexstring = this.pad(this.hex({\n            min: Math.floor(min_red / 16),\n            max: Math.floor(max_red / 16)\n          }), 1) + this.pad(this.hex({\n            min: Math.floor(min_green / 16),\n            max: Math.floor(max_green / 16)\n          }), 1) + this.pad(this.hex({\n            min: Math.floor(min_blue / 16),\n            max: Math.floor(max_blue / 16)\n          }), 1);\n        } else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n          hexstring = this.pad(this.hex({\n            min: min_red,\n            max: max_red\n          }), 2) + this.pad(this.hex({\n            min: min_green,\n            max: max_green\n          }), 2) + this.pad(this.hex({\n            min: min_blue,\n            max: max_blue\n          }), 2);\n        } else {\n          hexstring = this.pad(this.hex({\n            min: min_rgb,\n            max: max_rgb\n          }), 2) + this.pad(this.hex({\n            min: min_rgb,\n            max: max_rgb\n          }), 2) + this.pad(this.hex({\n            min: min_rgb,\n            max: max_rgb\n          }), 2);\n        }\n      }\n\n      return symbol + hexstring;\n    }\n\n    options = initOptions(options, {\n      format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n      grayscale: false,\n      casing: 'lower',\n      min: 0,\n      max: 255,\n      min_red: undefined,\n      max_red: undefined,\n      min_green: undefined,\n      max_green: undefined,\n      min_blue: undefined,\n      max_blue: undefined,\n      min_alpha: 0,\n      max_alpha: 1\n    });\n    var isGrayscale = options.grayscale;\n    var min_rgb = options.min;\n    var max_rgb = options.max;\n    var min_red = options.min_red;\n    var max_red = options.max_red;\n    var min_green = options.min_green;\n    var max_green = options.max_green;\n    var min_blue = options.min_blue;\n    var max_blue = options.max_blue;\n    var min_alpha = options.min_alpha;\n    var max_alpha = options.max_alpha;\n\n    if (options.min_red === undefined) {\n      min_red = min_rgb;\n    }\n\n    if (options.max_red === undefined) {\n      max_red = max_rgb;\n    }\n\n    if (options.min_green === undefined) {\n      min_green = min_rgb;\n    }\n\n    if (options.max_green === undefined) {\n      max_green = max_rgb;\n    }\n\n    if (options.min_blue === undefined) {\n      min_blue = min_rgb;\n    }\n\n    if (options.max_blue === undefined) {\n      max_blue = max_rgb;\n    }\n\n    if (options.min_alpha === undefined) {\n      min_alpha = 0;\n    }\n\n    if (options.max_alpha === undefined) {\n      max_alpha = 1;\n    }\n\n    if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\n      min_rgb = (min_red + min_green + min_blue) / 3;\n      max_rgb = (max_red + max_green + max_blue) / 3;\n    }\n\n    var colorValue;\n\n    if (options.format === 'hex') {\n      colorValue = hex.call(this, 2, 6, true);\n    } else if (options.format === 'shorthex') {\n      colorValue = hex.call(this, 1, 3, true);\n    } else if (options.format === 'rgb') {\n      colorValue = rgb.call(this, false);\n    } else if (options.format === 'rgba') {\n      colorValue = rgb.call(this, true);\n    } else if (options.format === '0x') {\n      colorValue = '0x' + hex.call(this, 2, 6);\n    } else if (options.format === 'name') {\n      return this.pick(this.get(\"colorNames\"));\n    } else {\n      throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n    }\n\n    if (options.casing === 'upper') {\n      colorValue = colorValue.toUpperCase();\n    }\n\n    return colorValue;\n  };\n\n  Chance.prototype.domain = function (options) {\n    options = initOptions(options);\n    return this.word() + '.' + (options.tld || this.tld());\n  };\n\n  Chance.prototype.email = function (options) {\n    options = initOptions(options);\n    return this.word({\n      length: options.length\n    }) + '@' + (options.domain || this.domain());\n  };\n  /**\n   * #Description:\n   * ===============================================\n   * Generate a random Facebook id, aka fbid.\n   *\n   * NOTE: At the moment (Sep 2017), Facebook ids are\n   * \"numeric strings\" of length 16.\n   * However, Facebook Graph API documentation states that\n   * \"it is extremely likely to change over time\".\n   * @see https://developers.facebook.com/docs/graph-api/overview/\n   *\n   * #Examples:\n   * ===============================================\n   * chance.fbid() => '1000035231661304'\n   *\n   * @return [string] facebook id\n   */\n\n\n  Chance.prototype.fbid = function () {\n    return '10000' + this.string({\n      pool: \"1234567890\",\n      length: 11\n    });\n  };\n\n  Chance.prototype.google_analytics = function () {\n    var account = this.pad(this.natural({\n      max: 999999\n    }), 6);\n    var property = this.pad(this.natural({\n      max: 99\n    }), 2);\n    return 'UA-' + account + '-' + property;\n  };\n\n  Chance.prototype.hashtag = function () {\n    return '#' + this.word();\n  };\n\n  Chance.prototype.ip = function () {\n    // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n    // this should probably be updated to account for that rare as it may be\n    return this.natural({\n      min: 1,\n      max: 254\n    }) + '.' + this.natural({\n      max: 255\n    }) + '.' + this.natural({\n      max: 255\n    }) + '.' + this.natural({\n      min: 1,\n      max: 254\n    });\n  };\n\n  Chance.prototype.ipv6 = function () {\n    var ip_addr = this.n(this.hash, 8, {\n      length: 4\n    });\n    return ip_addr.join(\":\");\n  };\n\n  Chance.prototype.klout = function () {\n    return this.natural({\n      min: 1,\n      max: 99\n    });\n  };\n\n  Chance.prototype.semver = function (options) {\n    options = initOptions(options, {\n      include_prerelease: true\n    });\n    var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n\n    if (options.range) {\n      range = options.range;\n    }\n\n    var prerelease = \"\";\n\n    if (options.include_prerelease) {\n      prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n    }\n\n    return range + this.rpg('3d10').join('.') + prerelease;\n  };\n\n  Chance.prototype.tlds = function () {\n    return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n  };\n\n  Chance.prototype.tld = function () {\n    return this.pick(this.tlds());\n  };\n\n  Chance.prototype.twitter = function () {\n    return '@' + this.word();\n  };\n\n  Chance.prototype.url = function (options) {\n    options = initOptions(options, {\n      protocol: \"http\",\n      domain: this.domain(options),\n      domain_prefix: \"\",\n      path: this.word(),\n      extensions: []\n    });\n    var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n    var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n    return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n  };\n\n  Chance.prototype.port = function () {\n    return this.integer({\n      min: 0,\n      max: 65535\n    });\n  };\n\n  Chance.prototype.locale = function (options) {\n    options = initOptions(options);\n\n    if (options.region) {\n      return this.pick(this.get(\"locale_regions\"));\n    } else {\n      return this.pick(this.get(\"locale_languages\"));\n    }\n  };\n\n  Chance.prototype.locales = function (options) {\n    options = initOptions(options);\n\n    if (options.region) {\n      return this.get(\"locale_regions\");\n    } else {\n      return this.get(\"locale_languages\");\n    }\n  };\n\n  Chance.prototype.loremPicsum = function (options) {\n    options = initOptions(options, {\n      width: 500,\n      height: 500,\n      greyscale: false,\n      blurred: false\n    });\n    var greyscale = options.greyscale ? 'g/' : '';\n    var query = options.blurred ? '/?blur' : '/?random';\n    return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;\n  }; // -- End Web --\n  // -- Location --\n\n\n  Chance.prototype.address = function (options) {\n    options = initOptions(options);\n    return this.natural({\n      min: 5,\n      max: 2000\n    }) + ' ' + this.street(options);\n  };\n\n  Chance.prototype.altitude = function (options) {\n    options = initOptions(options, {\n      fixed: 5,\n      min: 0,\n      max: 8848\n    });\n    return this.floating({\n      min: options.min,\n      max: options.max,\n      fixed: options.fixed\n    });\n  };\n\n  Chance.prototype.areacode = function (options) {\n    options = initOptions(options, {\n      parens: true\n    }); // Don't want area codes to start with 1, or have a 9 as the second digit\n\n    var areacode = this.natural({\n      min: 2,\n      max: 9\n    }).toString() + this.natural({\n      min: 0,\n      max: 8\n    }).toString() + this.natural({\n      min: 0,\n      max: 9\n    }).toString();\n    return options.parens ? '(' + areacode + ')' : areacode;\n  };\n\n  Chance.prototype.city = function () {\n    return this.capitalize(this.word({\n      syllables: 3\n    }));\n  };\n\n  Chance.prototype.coordinates = function (options) {\n    return this.latitude(options) + ', ' + this.longitude(options);\n  };\n\n  Chance.prototype.countries = function () {\n    return this.get(\"countries\");\n  };\n\n  Chance.prototype.country = function (options) {\n    options = initOptions(options);\n    var country = this.pick(this.countries());\n    return options.raw ? country : options.full ? country.name : country.abbreviation;\n  };\n\n  Chance.prototype.depth = function (options) {\n    options = initOptions(options, {\n      fixed: 5,\n      min: -10994,\n      max: 0\n    });\n    return this.floating({\n      min: options.min,\n      max: options.max,\n      fixed: options.fixed\n    });\n  };\n\n  Chance.prototype.geohash = function (options) {\n    options = initOptions(options, {\n      length: 7\n    });\n    return this.string({\n      length: options.length,\n      pool: '0123456789bcdefghjkmnpqrstuvwxyz'\n    });\n  };\n\n  Chance.prototype.geojson = function (options) {\n    return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n  };\n\n  Chance.prototype.latitude = function (options) {\n    options = initOptions(options, {\n      fixed: 5,\n      min: -90,\n      max: 90\n    });\n    return this.floating({\n      min: options.min,\n      max: options.max,\n      fixed: options.fixed\n    });\n  };\n\n  Chance.prototype.longitude = function (options) {\n    options = initOptions(options, {\n      fixed: 5,\n      min: -180,\n      max: 180\n    });\n    return this.floating({\n      min: options.min,\n      max: options.max,\n      fixed: options.fixed\n    });\n  };\n\n  Chance.prototype.phone = function (options) {\n    var self = this,\n        numPick,\n        ukNum = function ukNum(parts) {\n      var section = []; //fills the section part of the phone number with random numbers.\n\n      parts.sections.forEach(function (n) {\n        section.push(self.string({\n          pool: '0123456789',\n          length: n\n        }));\n      });\n      return parts.area + section.join(' ');\n    };\n\n    options = initOptions(options, {\n      formatted: true,\n      country: 'us',\n      mobile: false\n    });\n\n    if (!options.formatted) {\n      options.parens = false;\n    }\n\n    var phone;\n\n    switch (options.country) {\n      case 'fr':\n        if (!options.mobile) {\n          numPick = this.pick([// Valid zone and département codes.\n          '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '09' + self.string({\n            pool: '0123456789',\n            length: 8\n          })]);\n          phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n        } else {\n          numPick = this.pick(['06', '07']) + self.string({\n            pool: '0123456789',\n            length: 8\n          });\n          phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n        }\n\n        break;\n\n      case 'uk':\n        if (!options.mobile) {\n          numPick = this.pick([//valid area codes of major cities/counties followed by random numbers in required format.\n          {\n            area: '01' + this.character({\n              pool: '234569'\n            }) + '1 ',\n            sections: [3, 4]\n          }, {\n            area: '020 ' + this.character({\n              pool: '378'\n            }),\n            sections: [3, 4]\n          }, {\n            area: '023 ' + this.character({\n              pool: '89'\n            }),\n            sections: [3, 4]\n          }, {\n            area: '024 7',\n            sections: [3, 4]\n          }, {\n            area: '028 ' + this.pick(['25', '28', '37', '71', '82', '90', '92', '95']),\n            sections: [2, 4]\n          }, {\n            area: '012' + this.pick(['04', '08', '54', '76', '97', '98']) + ' ',\n            sections: [6]\n          }, {\n            area: '013' + this.pick(['63', '64', '84', '86']) + ' ',\n            sections: [6]\n          }, {\n            area: '014' + this.pick(['04', '20', '60', '61', '80', '88']) + ' ',\n            sections: [6]\n          }, {\n            area: '015' + this.pick(['24', '27', '62', '66']) + ' ',\n            sections: [6]\n          }, {\n            area: '016' + this.pick(['06', '29', '35', '47', '59', '95']) + ' ',\n            sections: [6]\n          }, {\n            area: '017' + this.pick(['26', '44', '50', '68']) + ' ',\n            sections: [6]\n          }, {\n            area: '018' + this.pick(['27', '37', '84', '97']) + ' ',\n            sections: [6]\n          }, {\n            area: '019' + this.pick(['00', '05', '35', '46', '49', '63', '95']) + ' ',\n            sections: [6]\n          }]);\n          phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n        } else {\n          numPick = this.pick([{\n            area: '07' + this.pick(['4', '5', '7', '8', '9']),\n            sections: [2, 6]\n          }, {\n            area: '07624 ',\n            sections: [6]\n          }]);\n          phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n        }\n\n        break;\n\n      case 'za':\n        if (!options.mobile) {\n          numPick = this.pick(['01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '04' + this.pick(['1', '2', '3', '4', '5', '6', '7', '8', '9']) + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({\n            pool: '0123456789',\n            length: 7\n          })]);\n          phone = options.formatted || numPick;\n        } else {\n          numPick = this.pick(['060' + this.pick(['3', '4', '5', '6', '7', '8', '9']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '061' + this.pick(['0', '1', '2', '3', '4', '5', '8']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '06' + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '071' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']) + self.string({\n            pool: '0123456789',\n            length: 6\n          }), '07' + this.pick(['2', '3', '4', '6', '7', '8', '9']) + self.string({\n            pool: '0123456789',\n            length: 7\n          }), '08' + this.pick(['0', '1', '2', '3', '4', '5']) + self.string({\n            pool: '0123456789',\n            length: 7\n          })]);\n          phone = options.formatted || numPick;\n        }\n\n        break;\n\n      case 'us':\n        var areacode = this.areacode(options).toString();\n        var exchange = this.natural({\n          min: 2,\n          max: 9\n        }).toString() + this.natural({\n          min: 0,\n          max: 9\n        }).toString() + this.natural({\n          min: 0,\n          max: 9\n        }).toString();\n        var subscriber = this.natural({\n          min: 1000,\n          max: 9999\n        }).toString(); // this could be random [0-9]{4}\n\n        phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n        break;\n\n      case 'br':\n        var areaCode = this.pick([\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"21\", \"22\", \"24\", \"27\", \"28\", \"31\", \"32\", \"33\", \"34\", \"35\", \"37\", \"38\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"51\", \"53\", \"54\", \"55\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"71\", \"73\", \"74\", \"75\", \"77\", \"79\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]);\n        var prefix;\n\n        if (options.mobile) {\n          // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330\n          prefix = '9' + self.string({\n            pool: '0123456789',\n            length: 4\n          });\n        } else {\n          // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331\n          prefix = this.natural({\n            min: 2000,\n            max: 5999\n          }).toString();\n        }\n\n        var mcdu = self.string({\n          pool: '0123456789',\n          length: 4\n        });\n        phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;\n        break;\n    }\n\n    return phone;\n  };\n\n  Chance.prototype.postal = function () {\n    // Postal District\n    var pd = this.character({\n      pool: \"XVTSRPNKLMHJGECBA\"\n    }); // Forward Sortation Area (FSA)\n\n    var fsa = pd + this.natural({\n      max: 9\n    }) + this.character({\n      alpha: true,\n      casing: \"upper\"\n    }); // Local Delivery Unut (LDU)\n\n    var ldu = this.natural({\n      max: 9\n    }) + this.character({\n      alpha: true,\n      casing: \"upper\"\n    }) + this.natural({\n      max: 9\n    });\n    return fsa + \" \" + ldu;\n  };\n\n  Chance.prototype.postcode = function () {\n    // Area\n    var area = this.pick(this.get(\"postcodeAreas\")).code; // District\n\n    var district = this.natural({\n      max: 9\n    }); // Sub-District\n\n    var subDistrict = this.bool() ? this.character({\n      alpha: true,\n      casing: \"upper\"\n    }) : \"\"; // Outward Code\n\n    var outward = area + district + subDistrict; // Sector\n\n    var sector = this.natural({\n      max: 9\n    }); // Unit\n\n    var unit = this.character({\n      alpha: true,\n      casing: \"upper\"\n    }) + this.character({\n      alpha: true,\n      casing: \"upper\"\n    }); // Inward Code\n\n    var inward = sector + unit;\n    return outward + \" \" + inward;\n  };\n\n  Chance.prototype.counties = function (options) {\n    options = initOptions(options, {\n      country: 'uk'\n    });\n    return this.get(\"counties\")[options.country.toLowerCase()];\n  };\n\n  Chance.prototype.county = function (options) {\n    return this.pick(this.counties(options)).name;\n  };\n\n  Chance.prototype.provinces = function (options) {\n    options = initOptions(options, {\n      country: 'ca'\n    });\n    return this.get(\"provinces\")[options.country.toLowerCase()];\n  };\n\n  Chance.prototype.province = function (options) {\n    return options && options.full ? this.pick(this.provinces(options)).name : this.pick(this.provinces(options)).abbreviation;\n  };\n\n  Chance.prototype.state = function (options) {\n    return options && options.full ? this.pick(this.states(options)).name : this.pick(this.states(options)).abbreviation;\n  };\n\n  Chance.prototype.states = function (options) {\n    options = initOptions(options, {\n      country: 'us',\n      us_states_and_dc: true\n    });\n    var states;\n\n    switch (options.country.toLowerCase()) {\n      case 'us':\n        var us_states_and_dc = this.get(\"us_states_and_dc\"),\n            territories = this.get(\"territories\"),\n            armed_forces = this.get(\"armed_forces\");\n        states = [];\n\n        if (options.us_states_and_dc) {\n          states = states.concat(us_states_and_dc);\n        }\n\n        if (options.territories) {\n          states = states.concat(territories);\n        }\n\n        if (options.armed_forces) {\n          states = states.concat(armed_forces);\n        }\n\n        break;\n\n      case 'it':\n        states = this.get(\"country_regions\")[options.country.toLowerCase()];\n        break;\n\n      case 'uk':\n        states = this.get(\"counties\")[options.country.toLowerCase()];\n        break;\n    }\n\n    return states;\n  };\n\n  Chance.prototype.street = function (options) {\n    options = initOptions(options, {\n      country: 'us',\n      syllables: 2\n    });\n    var street;\n\n    switch (options.country.toLowerCase()) {\n      case 'us':\n        street = this.word({\n          syllables: options.syllables\n        });\n        street = this.capitalize(street);\n        street += ' ';\n        street += options.short_suffix ? this.street_suffix(options).abbreviation : this.street_suffix(options).name;\n        break;\n\n      case 'it':\n        street = this.word({\n          syllables: options.syllables\n        });\n        street = this.capitalize(street);\n        street = (options.short_suffix ? this.street_suffix(options).abbreviation : this.street_suffix(options).name) + \" \" + street;\n        break;\n    }\n\n    return street;\n  };\n\n  Chance.prototype.street_suffix = function (options) {\n    options = initOptions(options, {\n      country: 'us'\n    });\n    return this.pick(this.street_suffixes(options));\n  };\n\n  Chance.prototype.street_suffixes = function (options) {\n    options = initOptions(options, {\n      country: 'us'\n    }); // These are the most common suffixes.\n\n    return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n  }; // Note: only returning US zip codes, internationalization will be a whole\n  // other beast to tackle at some point.\n\n\n  Chance.prototype.zip = function (options) {\n    var zip = this.n(this.natural, 5, {\n      max: 9\n    });\n\n    if (options && options.plusfour === true) {\n      zip.push('-');\n      zip = zip.concat(this.n(this.natural, 4, {\n        max: 9\n      }));\n    }\n\n    return zip.join(\"\");\n  }; // -- End Location --\n  // -- Time\n\n\n  Chance.prototype.ampm = function () {\n    return this.bool() ? 'am' : 'pm';\n  };\n\n  Chance.prototype.date = function (options) {\n    var date_string, date; // If interval is specified we ignore preset\n\n    if (options && (options.min || options.max)) {\n      options = initOptions(options, {\n        american: true,\n        string: false\n      });\n      var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1; // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n\n      var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n      date = new Date(this.integer({\n        min: min,\n        max: max\n      }));\n    } else {\n      var m = this.month({\n        raw: true\n      });\n      var daysInMonth = m.days;\n\n      if (options && options.month) {\n        // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n        daysInMonth = this.get('months')[(options.month % 12 + 12) % 12].days;\n      }\n\n      options = initOptions(options, {\n        year: parseInt(this.year(), 10),\n        // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n        // for some reason.\n        month: m.numeric - 1,\n        day: this.natural({\n          min: 1,\n          max: daysInMonth\n        }),\n        hour: this.hour({\n          twentyfour: true\n        }),\n        minute: this.minute(),\n        second: this.second(),\n        millisecond: this.millisecond(),\n        american: true,\n        string: false\n      });\n      date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n    }\n\n    if (options.american) {\n      // Adding 1 to the month is necessary because Date() 0-indexes\n      // months but not day for some odd reason.\n      date_string = date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();\n    } else {\n      date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n    }\n\n    return options.string ? date_string : date;\n  };\n\n  Chance.prototype.hammertime = function (options) {\n    return this.date(options).getTime();\n  };\n\n  Chance.prototype.hour = function (options) {\n    options = initOptions(options, {\n      min: options && options.twentyfour ? 0 : 1,\n      max: options && options.twentyfour ? 23 : 12\n    });\n    testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n    testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n    testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n    testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n    return this.natural({\n      min: options.min,\n      max: options.max\n    });\n  };\n\n  Chance.prototype.millisecond = function () {\n    return this.natural({\n      max: 999\n    });\n  };\n\n  Chance.prototype.minute = Chance.prototype.second = function (options) {\n    options = initOptions(options, {\n      min: 0,\n      max: 59\n    });\n    testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n    testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n    testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n    return this.natural({\n      min: options.min,\n      max: options.max\n    });\n  };\n\n  Chance.prototype.month = function (options) {\n    options = initOptions(options, {\n      min: 1,\n      max: 12\n    });\n    testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n    testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n    testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n    var month = this.pick(this.months().slice(options.min - 1, options.max));\n    return options.raw ? month : month.name;\n  };\n\n  Chance.prototype.months = function () {\n    return this.get(\"months\");\n  };\n\n  Chance.prototype.second = function () {\n    return this.natural({\n      max: 59\n    });\n  };\n\n  Chance.prototype.timestamp = function () {\n    return this.natural({\n      min: 1,\n      max: parseInt(new Date().getTime() / 1000, 10)\n    });\n  };\n\n  Chance.prototype.weekday = function (options) {\n    options = initOptions(options, {\n      weekday_only: false\n    });\n    var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\n    if (!options.weekday_only) {\n      weekdays.push(\"Saturday\");\n      weekdays.push(\"Sunday\");\n    }\n\n    return this.pickone(weekdays);\n  };\n\n  Chance.prototype.year = function (options) {\n    // Default to current year as min if none specified\n    options = initOptions(options, {\n      min: new Date().getFullYear()\n    }); // Default to one century after current year as max if none specified\n\n    options.max = typeof options.max !== \"undefined\" ? options.max : options.min + 100;\n    return this.natural(options).toString();\n  }; // -- End Time\n  // -- Finance --\n\n\n  Chance.prototype.cc = function (options) {\n    options = initOptions(options);\n    var type, number, to_generate;\n    type = options.type ? this.cc_type({\n      name: options.type,\n      raw: true\n    }) : this.cc_type({\n      raw: true\n    });\n    number = type.prefix.split(\"\");\n    to_generate = type.length - type.prefix.length - 1; // Generates n - 1 digits\n\n    number = number.concat(this.n(this.integer, to_generate, {\n      min: 0,\n      max: 9\n    })); // Generates the last digit according to Luhn algorithm\n\n    number.push(this.luhn_calculate(number.join(\"\")));\n    return number.join(\"\");\n  };\n\n  Chance.prototype.cc_types = function () {\n    // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n    return this.get(\"cc_types\");\n  };\n\n  Chance.prototype.cc_type = function (options) {\n    options = initOptions(options);\n    var types = this.cc_types(),\n        type = null;\n\n    if (options.name) {\n      for (var i = 0; i < types.length; i++) {\n        // Accept either name or short_name to specify card type\n        if (types[i].name === options.name || types[i].short_name === options.name) {\n          type = types[i];\n          break;\n        }\n      }\n\n      if (type === null) {\n        throw new RangeError(\"Chance: Credit card type '\" + options.name + \"' is not supported\");\n      }\n    } else {\n      type = this.pick(types);\n    }\n\n    return options.raw ? type : type.name;\n  }; // return all world currency by ISO 4217\n\n\n  Chance.prototype.currency_types = function () {\n    return this.get(\"currency_types\");\n  }; // return random world currency by ISO 4217\n\n\n  Chance.prototype.currency = function () {\n    return this.pick(this.currency_types());\n  }; // return all timezones available\n\n\n  Chance.prototype.timezones = function () {\n    return this.get(\"timezones\");\n  }; // return random timezone\n\n\n  Chance.prototype.timezone = function () {\n    return this.pick(this.timezones());\n  }; //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n\n\n  Chance.prototype.currency_pair = function (returnAsString) {\n    var currencies = this.unique(this.currency, 2, {\n      comparator: function comparator(arr, val) {\n        return arr.reduce(function (acc, item) {\n          // If a match has been found, short circuit check and just return\n          return acc || item.code === val.code;\n        }, false);\n      }\n    });\n\n    if (returnAsString) {\n      return currencies[0].code + '/' + currencies[1].code;\n    } else {\n      return currencies;\n    }\n  };\n\n  Chance.prototype.dollar = function (options) {\n    // By default, a somewhat more sane max for dollar than all available numbers\n    options = initOptions(options, {\n      max: 10000,\n      min: 0\n    });\n    var dollar = this.floating({\n      min: options.min,\n      max: options.max,\n      fixed: 2\n    }).toString(),\n        cents = dollar.split('.')[1];\n\n    if (cents === undefined) {\n      dollar += '.00';\n    } else if (cents.length < 2) {\n      dollar = dollar + '0';\n    }\n\n    if (dollar < 0) {\n      return '-$' + dollar.replace('-', '');\n    } else {\n      return '$' + dollar;\n    }\n  };\n\n  Chance.prototype.euro = function (options) {\n    return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n  };\n\n  Chance.prototype.exp = function (options) {\n    options = initOptions(options);\n    var exp = {};\n    exp.year = this.exp_year(); // If the year is this year, need to ensure month is greater than the\n    // current month or this expiration will not be valid\n\n    if (exp.year === new Date().getFullYear().toString()) {\n      exp.month = this.exp_month({\n        future: true\n      });\n    } else {\n      exp.month = this.exp_month();\n    }\n\n    return options.raw ? exp : exp.month + '/' + exp.year;\n  };\n\n  Chance.prototype.exp_month = function (options) {\n    options = initOptions(options);\n    var month,\n        month_int,\n        // Date object months are 0 indexed\n    curMonth = new Date().getMonth() + 1;\n\n    if (options.future && curMonth !== 12) {\n      do {\n        month = this.month({\n          raw: true\n        }).numeric;\n        month_int = parseInt(month, 10);\n      } while (month_int <= curMonth);\n    } else {\n      month = this.month({\n        raw: true\n      }).numeric;\n    }\n\n    return month;\n  };\n\n  Chance.prototype.exp_year = function () {\n    var curMonth = new Date().getMonth() + 1,\n        curYear = new Date().getFullYear();\n    return this.year({\n      min: curMonth === 12 ? curYear + 1 : curYear,\n      max: curYear + 10\n    });\n  };\n\n  Chance.prototype.vat = function (options) {\n    options = initOptions(options, {\n      country: 'it'\n    });\n\n    switch (options.country.toLowerCase()) {\n      case 'it':\n        return this.it_vat();\n    }\n  };\n  /**\n   * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).\n   * No country-specific formats support (yet)\n   */\n\n\n  Chance.prototype.iban = function () {\n    var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var alphanum = alpha + '0123456789';\n    var iban = this.string({\n      length: 2,\n      pool: alpha\n    }) + this.pad(this.integer({\n      min: 0,\n      max: 99\n    }), 2) + this.string({\n      length: 4,\n      pool: alphanum\n    }) + this.pad(this.natural(), this.natural({\n      min: 6,\n      max: 26\n    }));\n    return iban;\n  }; // -- End Finance\n  // -- Regional\n\n\n  Chance.prototype.it_vat = function () {\n    var it_vat = this.natural({\n      min: 1,\n      max: 1800000\n    });\n    it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({\n      country: 'it'\n    })).code, 3);\n    return it_vat + this.luhn_calculate(it_vat);\n  };\n  /*\n   * this generator is written following the official algorithm\n   * all data can be passed explicitely or randomized by calling chance.cf() without options\n   * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n   *\n   * @param  [Object] options = { first: first name,\n   *                              last: last name,\n   *                              gender: female|male,\n                                  birthday: JavaScript date object,\n                                  city: string(4), 1 letter + 3 numbers\n                                 }\n   * @return [string] codice fiscale\n   *\n  */\n\n\n  Chance.prototype.cf = function (options) {\n    options = options || {};\n\n    var gender = !!options.gender ? options.gender : this.gender(),\n        first = !!options.first ? options.first : this.first({\n      gender: gender,\n      nationality: 'it'\n    }),\n        last = !!options.last ? options.last : this.last({\n      nationality: 'it'\n    }),\n        birthday = !!options.birthday ? options.birthday : this.birthday(),\n        city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({\n      max: 999\n    }), 3),\n        cf = [],\n        name_generator = function name_generator(name, isLast) {\n      var temp,\n          return_value = [];\n\n      if (name.length < 3) {\n        return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0, 3);\n      } else {\n        temp = name.toUpperCase().split('').map(function (c) {\n          return \"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1 ? c : undefined;\n        }).join('');\n\n        if (temp.length > 3) {\n          if (isLast) {\n            temp = temp.substr(0, 3);\n          } else {\n            temp = temp[0] + temp.substr(2, 2);\n          }\n        }\n\n        if (temp.length < 3) {\n          return_value = temp;\n          temp = name.toUpperCase().split('').map(function (c) {\n            return \"AEIOU\".indexOf(c) !== -1 ? c : undefined;\n          }).join('').substr(0, 3 - return_value.length);\n        }\n\n        return_value = return_value + temp;\n      }\n\n      return return_value;\n    },\n        date_generator = function date_generator(birthday, gender, that) {\n      var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n      return birthday.getFullYear().toString().substr(2) + lettermonths[birthday.getMonth()] + that.pad(birthday.getDate() + (gender.toLowerCase() === \"female\" ? 40 : 0), 2);\n    },\n        checkdigit_generator = function checkdigit_generator(cf) {\n      var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n          range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n          evens = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n          odds = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n          digit = 0;\n\n      for (var i = 0; i < 15; i++) {\n        if (i % 2 !== 0) {\n          digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n        } else {\n          digit += odds.indexOf(range2[range1.indexOf(cf[i])]);\n        }\n      }\n\n      return evens[digit % 26];\n    };\n\n    cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n    cf += checkdigit_generator(cf.toUpperCase(), this);\n    return cf.toUpperCase();\n  };\n\n  Chance.prototype.pl_pesel = function () {\n    var number = this.natural({\n      min: 1,\n      max: 9999999999\n    });\n    var arr = this.pad(number, 10).split('');\n\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = parseInt(arr[i]);\n    }\n\n    var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n\n    if (controlNumber !== 0) {\n      controlNumber = 10 - controlNumber;\n    }\n\n    return arr.join('') + controlNumber;\n  };\n\n  Chance.prototype.pl_nip = function () {\n    var number = this.natural({\n      min: 1,\n      max: 999999999\n    });\n    var arr = this.pad(number, 9).split('');\n\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = parseInt(arr[i]);\n    }\n\n    var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n\n    if (controlNumber === 10) {\n      return this.pl_nip();\n    }\n\n    return arr.join('') + controlNumber;\n  };\n\n  Chance.prototype.pl_regon = function () {\n    var number = this.natural({\n      min: 1,\n      max: 99999999\n    });\n    var arr = this.pad(number, 8).split('');\n\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = parseInt(arr[i]);\n    }\n\n    var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n\n    if (controlNumber === 10) {\n      controlNumber = 0;\n    }\n\n    return arr.join('') + controlNumber;\n  }; // -- End Regional\n  // -- Music --\n\n\n  Chance.prototype.note = function (options) {\n    // choices for 'notes' option:\n    // flatKey - chromatic scale with flat notes (default)\n    // sharpKey - chromatic scale with sharp notes\n    // flats - just flat notes\n    // sharps - just sharp notes\n    // naturals - just natural notes\n    // all - naturals, sharps and flats\n    options = initOptions(options, {\n      notes: 'flatKey'\n    });\n    var scales = {\n      naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n      flats: ['D♭', 'E♭', 'G♭', 'A♭', 'B♭'],\n      sharps: ['C♯', 'D♯', 'F♯', 'G♯', 'A♯']\n    };\n    scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps));\n    scales.flatKey = scales.naturals.concat(scales.flats);\n    scales.sharpKey = scales.naturals.concat(scales.sharps);\n    return this.pickone(scales[options.notes]);\n  };\n\n  Chance.prototype.midi_note = function (options) {\n    var min = 0;\n    var max = 127;\n    options = initOptions(options, {\n      min: min,\n      max: max\n    });\n    return this.integer({\n      min: options.min,\n      max: options.max\n    });\n  };\n\n  Chance.prototype.chord_quality = function (options) {\n    options = initOptions(options, {\n      jazz: true\n    });\n    var chord_qualities = ['maj', 'min', 'aug', 'dim'];\n\n    if (options.jazz) {\n      chord_qualities = ['maj7', 'min7', '7', 'sus', 'dim', 'ø'];\n    }\n\n    return this.pickone(chord_qualities);\n  };\n\n  Chance.prototype.chord = function (options) {\n    options = initOptions(options);\n    return this.note(options) + this.chord_quality(options);\n  };\n\n  Chance.prototype.tempo = function (options) {\n    var min = 40;\n    var max = 320;\n    options = initOptions(options, {\n      min: min,\n      max: max\n    });\n    return this.integer({\n      min: options.min,\n      max: options.max\n    });\n  }; // -- End Music\n  // -- Miscellaneous --\n  // Coin - Flip, flip, flipadelphia\n\n\n  Chance.prototype.coin = function (options) {\n    return this.bool() ? \"heads\" : \"tails\";\n  }; // Dice - For all the board game geeks out there, myself included ;)\n\n\n  function diceFn(range) {\n    return function () {\n      return this.natural(range);\n    };\n  }\n\n  Chance.prototype.d4 = diceFn({\n    min: 1,\n    max: 4\n  });\n  Chance.prototype.d6 = diceFn({\n    min: 1,\n    max: 6\n  });\n  Chance.prototype.d8 = diceFn({\n    min: 1,\n    max: 8\n  });\n  Chance.prototype.d10 = diceFn({\n    min: 1,\n    max: 10\n  });\n  Chance.prototype.d12 = diceFn({\n    min: 1,\n    max: 12\n  });\n  Chance.prototype.d20 = diceFn({\n    min: 1,\n    max: 20\n  });\n  Chance.prototype.d30 = diceFn({\n    min: 1,\n    max: 30\n  });\n  Chance.prototype.d100 = diceFn({\n    min: 1,\n    max: 100\n  });\n\n  Chance.prototype.rpg = function (thrown, options) {\n    options = initOptions(options);\n\n    if (!thrown) {\n      throw new RangeError(\"Chance: A type of die roll must be included\");\n    } else {\n      var bits = thrown.toLowerCase().split(\"d\"),\n          rolls = [];\n\n      if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n        throw new Error(\"Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n      }\n\n      for (var i = bits[0]; i > 0; i--) {\n        rolls[i - 1] = this.natural({\n          min: 1,\n          max: bits[1]\n        });\n      }\n\n      return typeof options.sum !== 'undefined' && options.sum ? rolls.reduce(function (p, c) {\n        return p + c;\n      }) : rolls;\n    }\n  }; // Guid\n\n\n  Chance.prototype.guid = function (options) {\n    options = initOptions(options, {\n      version: 5\n    });\n    var guid_pool = \"abcdef1234567890\",\n        variant_pool = \"ab89\",\n        guid = this.string({\n      pool: guid_pool,\n      length: 8\n    }) + '-' + this.string({\n      pool: guid_pool,\n      length: 4\n    }) + '-' + // The Version\n    options.version + this.string({\n      pool: guid_pool,\n      length: 3\n    }) + '-' + // The Variant\n    this.string({\n      pool: variant_pool,\n      length: 1\n    }) + this.string({\n      pool: guid_pool,\n      length: 3\n    }) + '-' + this.string({\n      pool: guid_pool,\n      length: 12\n    });\n    return guid;\n  }; // Hash\n\n\n  Chance.prototype.hash = function (options) {\n    options = initOptions(options, {\n      length: 40,\n      casing: 'lower'\n    });\n    var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n    return this.string({\n      pool: pool,\n      length: options.length\n    });\n  };\n\n  Chance.prototype.luhn_check = function (num) {\n    var str = num.toString();\n    var checkDigit = +str.substring(str.length - 1);\n    return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n  };\n\n  Chance.prototype.luhn_calculate = function (num) {\n    var digits = num.toString().split(\"\").reverse();\n    var sum = 0;\n    var digit;\n\n    for (var i = 0, l = digits.length; l > i; ++i) {\n      digit = +digits[i];\n\n      if (i % 2 === 0) {\n        digit *= 2;\n\n        if (digit > 9) {\n          digit -= 9;\n        }\n      }\n\n      sum += digit;\n    }\n\n    return sum * 9 % 10;\n  }; // MD5 Hash\n\n\n  Chance.prototype.md5 = function (options) {\n    var opts = {\n      str: '',\n      key: null,\n      raw: false\n    };\n\n    if (!options) {\n      opts.str = this.string();\n      options = {};\n    } else if (typeof options === 'string') {\n      opts.str = options;\n      options = {};\n    } else if (typeof options !== 'object') {\n      return null;\n    } else if (options.constructor === 'Array') {\n      return null;\n    }\n\n    opts = initOptions(options, opts);\n\n    if (!opts.str) {\n      throw new Error('A parameter is required to return an md5 hash.');\n    }\n\n    return this.bimd5.md5(opts.str, opts.key, opts.raw);\n  };\n  /**\n   * #Description:\n   * =====================================================\n   * Generate random file name with extension\n   *\n   * The argument provide extension type\n   * -> raster\n   * -> vector\n   * -> 3d\n   * -> document\n   *\n   * If nothing is provided the function return random file name with random\n   * extension type of any kind\n   *\n   * The user can validate the file name length range\n   * If nothing provided the generated file name is random\n   *\n   * #Extension Pool :\n   * * Currently the supported extensions are\n   *  -> some of the most popular raster image extensions\n   *  -> some of the most popular vector image extensions\n   *  -> some of the most popular 3d image extensions\n   *  -> some of the most popular document extensions\n   *\n   * #Examples :\n   * =====================================================\n   *\n   * Return random file name with random extension. The file extension\n   * is provided by a predefined collection of extensions. More about the extension\n   * pool can be found in #Extension Pool section\n   *\n   * chance.file()\n   * => dsfsdhjf.xml\n   *\n   * In order to generate a file name with specific length, specify the\n   * length property and integer value. The extension is going to be random\n   *\n   * chance.file({length : 10})\n   * => asrtineqos.pdf\n   *\n   * In order to generate file with extension from some of the predefined groups\n   * of the extension pool just specify the extension pool category in fileType property\n   *\n   * chance.file({fileType : 'raster'})\n   * => dshgssds.psd\n   *\n   * You can provide specific extension for your files\n   * chance.file({extension : 'html'})\n   * => djfsd.html\n   *\n   * Or you could pass custom collection of extensions by array or by object\n   * chance.file({extensions : [...]})\n   * => dhgsdsd.psd\n   *\n   * chance.file({extensions : { key : [...], key : [...]}})\n   * => djsfksdjsd.xml\n   *\n   * @param  [collection] options\n   * @return [string]\n   *\n   */\n\n\n  Chance.prototype.file = function (options) {\n    var fileOptions = options || {};\n    var poolCollectionKey = \"fileExtension\";\n    var typeRange = Object.keys(this.get(\"fileExtension\")); //['raster', 'vector', '3d', 'document'];\n\n    var fileName;\n    var fileExtension; // Generate random file name\n\n    fileName = this.word({\n      length: fileOptions.length\n    }); // Generate file by specific extension provided by the user\n\n    if (fileOptions.extension) {\n      fileExtension = fileOptions.extension;\n      return fileName + '.' + fileExtension;\n    } // Generate file by specific extension collection\n\n\n    if (fileOptions.extensions) {\n      if (Array.isArray(fileOptions.extensions)) {\n        fileExtension = this.pickone(fileOptions.extensions);\n        return fileName + '.' + fileExtension;\n      } else if (fileOptions.extensions.constructor === Object) {\n        var extensionObjectCollection = fileOptions.extensions;\n        var keys = Object.keys(extensionObjectCollection);\n        fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n        return fileName + '.' + fileExtension;\n      }\n\n      throw new Error(\"Chance: Extensions must be an Array or Object\");\n    } // Generate file extension based on specific file type\n\n\n    if (fileOptions.fileType) {\n      var fileType = fileOptions.fileType;\n\n      if (typeRange.indexOf(fileType) !== -1) {\n        fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n        return fileName + '.' + fileExtension;\n      }\n\n      throw new RangeError(\"Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'\");\n    } // Generate random file name if no extension options are passed\n\n\n    fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n    return fileName + '.' + fileExtension;\n  };\n\n  var data = {\n    firstNames: {\n      \"male\": {\n        \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n        // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n        \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"],\n        // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n        \"nl\": [\"Aaron\", \"Abel\", \"Adam\", \"Adriaan\", \"Albert\", \"Alexander\", \"Ali\", \"Arjen\", \"Arno\", \"Bart\", \"Bas\", \"Bastiaan\", \"Benjamin\", \"Bob\", \"Boris\", \"Bram\", \"Brent\", \"Cas\", \"Casper\", \"Chris\", \"Christiaan\", \"Cornelis\", \"Daan\", \"Daley\", \"Damian\", \"Dani\", \"Daniel\", \"Daniël\", \"David\", \"Dean\", \"Dirk\", \"Dylan\", \"Egbert\", \"Elijah\", \"Erik\", \"Erwin\", \"Evert\", \"Ezra\", \"Fabian\", \"Fedde\", \"Finn\", \"Florian\", \"Floris\", \"Frank\", \"Frans\", \"Frederik\", \"Freek\", \"Geert\", \"Gerard\", \"Gerben\", \"Gerrit\", \"Gijs\", \"Guus\", \"Hans\", \"Hendrik\", \"Henk\", \"Herman\", \"Hidde\", \"Hugo\", \"Jaap\", \"Jan Jaap\", \"Jan-Willem\", \"Jack\", \"Jacob\", \"Jan\", \"Jason\", \"Jasper\", \"Jayden\", \"Jelle\", \"Jelte\", \"Jens\", \"Jeroen\", \"Jesse\", \"Jim\", \"Job\", \"Joep\", \"Johannes\", \"John\", \"Jonathan\", \"Joris\", \"Joshua\", \"Joël\", \"Julian\", \"Kees\", \"Kevin\", \"Koen\", \"Lars\", \"Laurens\", \"Leendert\", \"Lennard\", \"Lodewijk\", \"Luc\", \"Luca\", \"Lucas\", \"Lukas\", \"Luuk\", \"Maarten\", \"Marcus\", \"Martijn\", \"Martin\", \"Matthijs\", \"Maurits\", \"Max\", \"Mees\", \"Melle\", \"Mick\", \"Mika\", \"Milan\", \"Mohamed\", \"Mohammed\", \"Morris\", \"Muhammed\", \"Nathan\", \"Nick\", \"Nico\", \"Niek\", \"Niels\", \"Noah\", \"Noud\", \"Olivier\", \"Oscar\", \"Owen\", \"Paul\", \"Pepijn\", \"Peter\", \"Pieter\", \"Pim\", \"Quinten\", \"Reinier\", \"Rens\", \"Robin\", \"Ruben\", \"Sam\", \"Samuel\", \"Sander\", \"Sebastiaan\", \"Sem\", \"Sep\", \"Sepp\", \"Siem\", \"Simon\", \"Stan\", \"Stef\", \"Steven\", \"Stijn\", \"Sven\", \"Teun\", \"Thijmen\", \"Thijs\", \"Thomas\", \"Tijn\", \"Tim\", \"Timo\", \"Tobias\", \"Tom\", \"Victor\", \"Vince\", \"Willem\", \"Wim\", \"Wouter\", \"Yusuf\"],\n        // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n        \"fr\": [\"Aaron\", \"Abdon\", \"Abel\", \"Abélard\", \"Abelin\", \"Abondance\", \"Abraham\", \"Absalon\", \"Acace\", \"Achaire\", \"Achille\", \"Adalard\", \"Adalbald\", \"Adalbéron\", \"Adalbert\", \"Adalric\", \"Adam\", \"Adegrin\", \"Adel\", \"Adelin\", \"Andelin\", \"Adelphe\", \"Adam\", \"Adéodat\", \"Adhémar\", \"Adjutor\", \"Adolphe\", \"Adonis\", \"Adon\", \"Adrien\", \"Agapet\", \"Agathange\", \"Agathon\", \"Agilbert\", \"Agénor\", \"Agnan\", \"Aignan\", \"Agrippin\", \"Aimable\", \"Aimé\", \"Alain\", \"Alban\", \"Albin\", \"Aubin\", \"Albéric\", \"Albert\", \"Albertet\", \"Alcibiade\", \"Alcide\", \"Alcée\", \"Alcime\", \"Aldonce\", \"Aldric\", \"Aldéric\", \"Aleaume\", \"Alexandre\", \"Alexis\", \"Alix\", \"Alliaume\", \"Aleaume\", \"Almine\", \"Almire\", \"Aloïs\", \"Alphée\", \"Alphonse\", \"Alpinien\", \"Alverède\", \"Amalric\", \"Amaury\", \"Amandin\", \"Amant\", \"Ambroise\", \"Amédée\", \"Amélien\", \"Amiel\", \"Amour\", \"Anaël\", \"Anastase\", \"Anatole\", \"Ancelin\", \"Andéol\", \"Andoche\", \"André\", \"Andoche\", \"Ange\", \"Angelin\", \"Angilbe\", \"Anglebert\", \"Angoustan\", \"Anicet\", \"Anne\", \"Annibal\", \"Ansbert\", \"Anselme\", \"Anthelme\", \"Antheaume\", \"Anthime\", \"Antide\", \"Antoine\", \"Antonius\", \"Antonin\", \"Apollinaire\", \"Apollon\", \"Aquilin\", \"Arcade\", \"Archambaud\", \"Archambeau\", \"Archange\", \"Archibald\", \"Arian\", \"Ariel\", \"Ariste\", \"Aristide\", \"Armand\", \"Armel\", \"Armin\", \"Arnould\", \"Arnaud\", \"Arolde\", \"Arsène\", \"Arsinoé\", \"Arthaud\", \"Arthème\", \"Arthur\", \"Ascelin\", \"Athanase\", \"Aubry\", \"Audebert\", \"Audouin\", \"Audran\", \"Audric\", \"Auguste\", \"Augustin\", \"Aurèle\", \"Aurélien\", \"Aurian\", \"Auxence\", \"Axel\", \"Aymard\", \"Aymeric\", \"Aymon\", \"Aymond\", \"Balthazar\", \"Baptiste\", \"Barnabé\", \"Barthélemy\", \"Bartimée\", \"Basile\", \"Bastien\", \"Baudouin\", \"Bénigne\", \"Benjamin\", \"Benoît\", \"Bérenger\", \"Bérard\", \"Bernard\", \"Bertrand\", \"Blaise\", \"Bon\", \"Boniface\", \"Bouchard\", \"Brice\", \"Brieuc\", \"Bruno\", \"Brunon\", \"Calixte\", \"Calliste\", \"Camélien\", \"Camille\", \"Camillien\", \"Candide\", \"Caribert\", \"Carloman\", \"Cassandre\", \"Cassien\", \"Cédric\", \"Céleste\", \"Célestin\", \"Célien\", \"Césaire\", \"César\", \"Charles\", \"Charlemagne\", \"Childebert\", \"Chilpéric\", \"Chrétien\", \"Christian\", \"Christodule\", \"Christophe\", \"Chrysostome\", \"Clarence\", \"Claude\", \"Claudien\", \"Cléandre\", \"Clément\", \"Clotaire\", \"Côme\", \"Constance\", \"Constant\", \"Constantin\", \"Corentin\", \"Cyprien\", \"Cyriaque\", \"Cyrille\", \"Cyril\", \"Damien\", \"Daniel\", \"David\", \"Delphin\", \"Denis\", \"Désiré\", \"Didier\", \"Dieudonné\", \"Dimitri\", \"Dominique\", \"Dorian\", \"Dorothée\", \"Edgard\", \"Edmond\", \"Édouard\", \"Éleuthère\", \"Élie\", \"Élisée\", \"Émeric\", \"Émile\", \"Émilien\", \"Emmanuel\", \"Enguerrand\", \"Épiphane\", \"Éric\", \"Esprit\", \"Ernest\", \"Étienne\", \"Eubert\", \"Eudes\", \"Eudoxe\", \"Eugène\", \"Eusèbe\", \"Eustache\", \"Évariste\", \"Évrard\", \"Fabien\", \"Fabrice\", \"Falba\", \"Félicité\", \"Félix\", \"Ferdinand\", \"Fiacre\", \"Fidèle\", \"Firmin\", \"Flavien\", \"Flodoard\", \"Florent\", \"Florentin\", \"Florestan\", \"Florian\", \"Fortuné\", \"Foulques\", \"Francisque\", \"François\", \"Français\", \"Franciscus\", \"Francs\", \"Frédéric\", \"Fulbert\", \"Fulcran\", \"Fulgence\", \"Gabin\", \"Gabriel\", \"Gaël\", \"Garnier\", \"Gaston\", \"Gaspard\", \"Gatien\", \"Gaud\", \"Gautier\", \"Gédéon\", \"Geoffroy\", \"Georges\", \"Géraud\", \"Gérard\", \"Gerbert\", \"Germain\", \"Gervais\", \"Ghislain\", \"Gilbert\", \"Gilles\", \"Girart\", \"Gislebert\", \"Gondebaud\", \"Gonthier\", \"Gontran\", \"Gonzague\", \"Grégoire\", \"Guérin\", \"Gui\", \"Guillaume\", \"Gustave\", \"Guy\", \"Guyot\", \"Hardouin\", \"Hector\", \"Hédelin\", \"Hélier\", \"Henri\", \"Herbert\", \"Herluin\", \"Hervé\", \"Hilaire\", \"Hildebert\", \"Hincmar\", \"Hippolyte\", \"Honoré\", \"Hubert\", \"Hugues\", \"Innocent\", \"Isabeau\", \"Isidore\", \"Jacques\", \"Japhet\", \"Jason\", \"Jean\", \"Jeannel\", \"Jeannot\", \"Jérémie\", \"Jérôme\", \"Joachim\", \"Joanny\", \"Job\", \"Jocelyn\", \"Joël\", \"Johan\", \"Jonas\", \"Jonathan\", \"Joseph\", \"Josse\", \"Josselin\", \"Jourdain\", \"Jude\", \"Judicaël\", \"Jules\", \"Julien\", \"Juste\", \"Justin\", \"Lambert\", \"Landry\", \"Laurent\", \"Lazare\", \"Léandre\", \"Léon\", \"Léonard\", \"Léopold\", \"Leu\", \"Loup\", \"Leufroy\", \"Libère\", \"Liétald\", \"Lionel\", \"Loïc\", \"Longin\", \"Lorrain\", \"Lorraine\", \"Lothaire\", \"Louis\", \"Loup\", \"Luc\", \"Lucas\", \"Lucien\", \"Ludolphe\", \"Ludovic\", \"Macaire\", \"Malo\", \"Mamert\", \"Manassé\", \"Marc\", \"Marceau\", \"Marcel\", \"Marcelin\", \"Marius\", \"Marseille\", \"Martial\", \"Martin\", \"Mathurin\", \"Matthias\", \"Mathias\", \"Matthieu\", \"Maugis\", \"Maurice\", \"Mauricet\", \"Maxence\", \"Maxime\", \"Maximilien\", \"Mayeul\", \"Médéric\", \"Melchior\", \"Mence\", \"Merlin\", \"Mérovée\", \"Michaël\", \"Michel\", \"Moïse\", \"Morgan\", \"Nathan\", \"Nathanaël\", \"Narcisse\", \"Néhémie\", \"Nestor\", \"Nestor\", \"Nicéphore\", \"Nicolas\", \"Noé\", \"Noël\", \"Norbert\", \"Normand\", \"Normands\", \"Octave\", \"Odilon\", \"Odon\", \"Oger\", \"Olivier\", \"Oury\", \"Pacôme\", \"Palémon\", \"Parfait\", \"Pascal\", \"Paterne\", \"Patrice\", \"Paul\", \"Pépin\", \"Perceval\", \"Philémon\", \"Philibert\", \"Philippe\", \"Philothée\", \"Pie\", \"Pierre\", \"Pierrick\", \"Prosper\", \"Quentin\", \"Raoul\", \"Raphaël\", \"Raymond\", \"Régis\", \"Réjean\", \"Rémi\", \"Renaud\", \"René\", \"Reybaud\", \"Richard\", \"Robert\", \"Roch\", \"Rodolphe\", \"Rodrigue\", \"Roger\", \"Roland\", \"Romain\", \"Romuald\", \"Roméo\", \"Rome\", \"Ronan\", \"Roselin\", \"Salomon\", \"Samuel\", \"Savin\", \"Savinien\", \"Scholastique\", \"Sébastien\", \"Séraphin\", \"Serge\", \"Séverin\", \"Sidoine\", \"Sigebert\", \"Sigismond\", \"Silvère\", \"Simon\", \"Siméon\", \"Sixte\", \"Stanislas\", \"Stéphane\", \"Stephan\", \"Sylvain\", \"Sylvestre\", \"Tancrède\", \"Tanguy\", \"Taurin\", \"Théodore\", \"Théodose\", \"Théophile\", \"Théophraste\", \"Thibault\", \"Thibert\", \"Thierry\", \"Thomas\", \"Timoléon\", \"Timothée\", \"Titien\", \"Tonnin\", \"Toussaint\", \"Trajan\", \"Tristan\", \"Turold\", \"Tim\", \"Ulysse\", \"Urbain\", \"Valentin\", \"Valère\", \"Valéry\", \"Venance\", \"Venant\", \"Venceslas\", \"Vianney\", \"Victor\", \"Victorien\", \"Victorin\", \"Vigile\", \"Vincent\", \"Vital\", \"Vitalien\", \"Vivien\", \"Waleran\", \"Wandrille\", \"Xavier\", \"Xénophon\", \"Yves\", \"Zacharie\", \"Zaché\", \"Zéphirin\"]\n      },\n      \"female\": {\n        \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n        // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n        \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Lea\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"],\n        // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n        \"nl\": [\"Ada\", \"Arianne\", \"Afke\", \"Amanda\", \"Amber\", \"Amy\", \"Aniek\", \"Anita\", \"Anja\", \"Anna\", \"Anne\", \"Annelies\", \"Annemarie\", \"Annette\", \"Anouk\", \"Astrid\", \"Aukje\", \"Barbara\", \"Bianca\", \"Carla\", \"Carlijn\", \"Carolien\", \"Chantal\", \"Charlotte\", \"Claudia\", \"Daniëlle\", \"Debora\", \"Diane\", \"Dora\", \"Eline\", \"Elise\", \"Ella\", \"Ellen\", \"Emma\", \"Esmee\", \"Evelien\", \"Esther\", \"Erica\", \"Eva\", \"Femke\", \"Fleur\", \"Floor\", \"Froukje\", \"Gea\", \"Gerda\", \"Hanna\", \"Hanneke\", \"Heleen\", \"Hilde\", \"Ilona\", \"Ina\", \"Inge\", \"Ingrid\", \"Iris\", \"Isabel\", \"Isabelle\", \"Janneke\", \"Jasmijn\", \"Jeanine\", \"Jennifer\", \"Jessica\", \"Johanna\", \"Joke\", \"Julia\", \"Julie\", \"Karen\", \"Karin\", \"Katja\", \"Kim\", \"Lara\", \"Laura\", \"Lena\", \"Lianne\", \"Lieke\", \"Lilian\", \"Linda\", \"Lisa\", \"Lisanne\", \"Lotte\", \"Louise\", \"Maaike\", \"Manon\", \"Marga\", \"Maria\", \"Marissa\", \"Marit\", \"Marjolein\", \"Martine\", \"Marleen\", \"Melissa\", \"Merel\", \"Miranda\", \"Michelle\", \"Mirjam\", \"Mirthe\", \"Naomi\", \"Natalie\", 'Nienke', \"Nina\", \"Noortje\", \"Olivia\", \"Patricia\", \"Paula\", \"Paulien\", \"Ramona\", \"Ria\", \"Rianne\", \"Roos\", \"Rosanne\", \"Ruth\", \"Sabrina\", \"Sandra\", \"Sanne\", \"Sara\", \"Saskia\", \"Silvia\", \"Sofia\", \"Sophie\", \"Sonja\", \"Suzanne\", \"Tamara\", \"Tess\", \"Tessa\", \"Tineke\", \"Valerie\", \"Vanessa\", \"Veerle\", \"Vera\", \"Victoria\", \"Wendy\", \"Willeke\", \"Yvonne\", \"Zoë\"],\n        // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n        \"fr\": [\"Abdon\", \"Abel\", \"Abigaëlle\", \"Abigaïl\", \"Acacius\", \"Acanthe\", \"Adalbert\", \"Adalsinde\", \"Adegrine\", \"Adélaïde\", \"Adèle\", \"Adélie\", \"Adeline\", \"Adeltrude\", \"Adolphe\", \"Adonis\", \"Adrastée\", \"Adrehilde\", \"Adrienne\", \"Agathe\", \"Agilbert\", \"Aglaé\", \"Aignan\", \"Agneflète\", \"Agnès\", \"Agrippine\", \"Aimé\", \"Alaine\", \"Alaïs\", \"Albane\", \"Albérade\", \"Alberte\", \"Alcide\", \"Alcine\", \"Alcyone\", \"Aldegonde\", \"Aleth\", \"Alexandrine\", \"Alexine\", \"Alice\", \"Aliénor\", \"Aliette\", \"Aline\", \"Alix\", \"Alizé\", \"Aloïse\", \"Aloyse\", \"Alphonsine\", \"Althée\", \"Amaliane\", \"Amalthée\", \"Amande\", \"Amandine\", \"Amant\", \"Amarande\", \"Amaranthe\", \"Amaryllis\", \"Ambre\", \"Ambroisie\", \"Amélie\", \"Améthyste\", \"Aminte\", \"Anaël\", \"Anaïs\", \"Anastasie\", \"Anatole\", \"Ancelin\", \"Andrée\", \"Anémone\", \"Angadrême\", \"Angèle\", \"Angeline\", \"Angélique\", \"Angilbert\", \"Anicet\", \"Annabelle\", \"Anne\", \"Annette\", \"Annick\", \"Annie\", \"Annonciade\", \"Ansbert\", \"Anstrudie\", \"Anthelme\", \"Antigone\", \"Antoinette\", \"Antonine\", \"Aphélie\", \"Apolline\", \"Apollonie\", \"Aquiline\", \"Arabelle\", \"Arcadie\", \"Archange\", \"Argine\", \"Ariane\", \"Aricie\", \"Ariel\", \"Arielle\", \"Arlette\", \"Armance\", \"Armande\", \"Armandine\", \"Armelle\", \"Armide\", \"Armelle\", \"Armin\", \"Arnaud\", \"Arsène\", \"Arsinoé\", \"Artémis\", \"Arthur\", \"Ascelin\", \"Ascension\", \"Assomption\", \"Astarté\", \"Astérie\", \"Astrée\", \"Astrid\", \"Athalie\", \"Athanasie\", \"Athina\", \"Aube\", \"Albert\", \"Aude\", \"Audrey\", \"Augustine\", \"Aure\", \"Aurélie\", \"Aurélien\", \"Aurèle\", \"Aurore\", \"Auxence\", \"Aveline\", \"Abigaëlle\", \"Avoye\", \"Axelle\", \"Aymard\", \"Azalée\", \"Adèle\", \"Adeline\", \"Barbe\", \"Basilisse\", \"Bathilde\", \"Béatrice\", \"Béatrix\", \"Bénédicte\", \"Bérengère\", \"Bernadette\", \"Berthe\", \"Bertille\", \"Beuve\", \"Blanche\", \"Blanc\", \"Blandine\", \"Brigitte\", \"Brune\", \"Brunehilde\", \"Callista\", \"Camille\", \"Capucine\", \"Carine\", \"Caroline\", \"Cassandre\", \"Catherine\", \"Cécile\", \"Céleste\", \"Célestine\", \"Céline\", \"Chantal\", \"Charlène\", \"Charline\", \"Charlotte\", \"Chloé\", \"Christelle\", \"Christiane\", \"Christine\", \"Claire\", \"Clara\", \"Claude\", \"Claudine\", \"Clarisse\", \"Clémence\", \"Clémentine\", \"Cléo\", \"Clio\", \"Clotilde\", \"Coline\", \"Conception\", \"Constance\", \"Coralie\", \"Coraline\", \"Corentine\", \"Corinne\", \"Cyrielle\", \"Daniel\", \"Daniel\", \"Daphné\", \"Débora\", \"Delphine\", \"Denise\", \"Diane\", \"Dieudonné\", \"Dominique\", \"Doriane\", \"Dorothée\", \"Douce\", \"Édith\", \"Edmée\", \"Éléonore\", \"Éliane\", \"Élia\", \"Éliette\", \"Élisabeth\", \"Élise\", \"Ella\", \"Élodie\", \"Éloïse\", \"Elsa\", \"Émeline\", \"Émérance\", \"Émérentienne\", \"Émérencie\", \"Émilie\", \"Emma\", \"Emmanuelle\", \"Emmelie\", \"Ernestine\", \"Esther\", \"Estelle\", \"Eudoxie\", \"Eugénie\", \"Eulalie\", \"Euphrasie\", \"Eusébie\", \"Évangéline\", \"Eva\", \"Ève\", \"Évelyne\", \"Fanny\", \"Fantine\", \"Faustine\", \"Félicie\", \"Fernande\", \"Flavie\", \"Fleur\", \"Flore\", \"Florence\", \"Florie\", \"Fortuné\", \"France\", \"Francia\", \"Françoise\", \"Francine\", \"Gabrielle\", \"Gaëlle\", \"Garance\", \"Geneviève\", \"Georgette\", \"Gerberge\", \"Germaine\", \"Gertrude\", \"Gisèle\", \"Guenièvre\", \"Guilhemine\", \"Guillemette\", \"Gustave\", \"Gwenael\", \"Hélène\", \"Héloïse\", \"Henriette\", \"Hermine\", \"Hermione\", \"Hippolyte\", \"Honorine\", \"Hortense\", \"Huguette\", \"Ines\", \"Irène\", \"Irina\", \"Iris\", \"Isabeau\", \"Isabelle\", \"Iseult\", \"Isolde\", \"Ismérie\", \"Jacinthe\", \"Jacqueline\", \"Jade\", \"Janine\", \"Jeanne\", \"Jocelyne\", \"Joëlle\", \"Joséphine\", \"Judith\", \"Julia\", \"Julie\", \"Jules\", \"Juliette\", \"Justine\", \"Katy\", \"Kathy\", \"Katie\", \"Laura\", \"Laure\", \"Laureline\", \"Laurence\", \"Laurene\", \"Lauriane\", \"Laurianne\", \"Laurine\", \"Léa\", \"Léna\", \"Léonie\", \"Léon\", \"Léontine\", \"Lorraine\", \"Lucie\", \"Lucienne\", \"Lucille\", \"Ludivine\", \"Lydie\", \"Lydie\", \"Megane\", \"Madeleine\", \"Magali\", \"Maguelone\", \"Mallaury\", \"Manon\", \"Marceline\", \"Margot\", \"Marguerite\", \"Marianne\", \"Marie\", \"Myriam\", \"Marie\", \"Marine\", \"Marion\", \"Marlène\", \"Marthe\", \"Martine\", \"Mathilde\", \"Maud\", \"Maureen\", \"Mauricette\", \"Maxime\", \"Mélanie\", \"Melissa\", \"Mélissandre\", \"Mélisande\", \"Mélodie\", \"Michel\", \"Micheline\", \"Mireille\", \"Miriam\", \"Moïse\", \"Monique\", \"Morgane\", \"Muriel\", \"Mylène\", \"Nadège\", \"Nadine\", \"Nathalie\", \"Nicole\", \"Nicolette\", \"Nine\", \"Noël\", \"Noémie\", \"Océane\", \"Odette\", \"Odile\", \"Olive\", \"Olivia\", \"Olympe\", \"Ombline\", \"Ombeline\", \"Ophélie\", \"Oriande\", \"Oriane\", \"Ozanne\", \"Pascale\", \"Pascaline\", \"Paule\", \"Paulette\", \"Pauline\", \"Priscille\", \"Prisca\", \"Prisque\", \"Pécine\", \"Pélagie\", \"Pénélope\", \"Perrine\", \"Pétronille\", \"Philippine\", \"Philomène\", \"Philothée\", \"Primerose\", \"Prudence\", \"Pulchérie\", \"Quentine\", \"Quiéta\", \"Quintia\", \"Quintilla\", \"Rachel\", \"Raphaëlle\", \"Raymonde\", \"Rebecca\", \"Régine\", \"Réjeanne\", \"René\", \"Rita\", \"Rita\", \"Rolande\", \"Romane\", \"Rosalie\", \"Rose\", \"Roseline\", \"Sabine\", \"Salomé\", \"Sandra\", \"Sandrine\", \"Sarah\", \"Ségolène\", \"Séverine\", \"Sibylle\", \"Simone\", \"Sixt\", \"Solange\", \"Soline\", \"Solène\", \"Sophie\", \"Stéphanie\", \"Suzanne\", \"Sylvain\", \"Sylvie\", \"Tatiana\", \"Thaïs\", \"Théodora\", \"Thérèse\", \"Tiphaine\", \"Ursule\", \"Valentine\", \"Valérie\", \"Véronique\", \"Victoire\", \"Victorine\", \"Vinciane\", \"Violette\", \"Virginie\", \"Viviane\", \"Xavière\", \"Yolande\", \"Ysaline\", \"Yvette\", \"Yvonne\", \"Zélie\", \"Zita\", \"Zoé\"]\n      }\n    },\n    lastNames: {\n      \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n      // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n      \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"],\n      // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/\n      \"nl\": [\"Albers\", \"Alblas\", \"Appelman\", \"Baars\", \"Baas\", \"Bakker\", \"Blank\", \"Bleeker\", \"Blok\", \"Blom\", \"Boer\", \"Boers\", \"Boldewijn\", \"Boon\", \"Boot\", \"Bos\", \"Bosch\", \"Bosma\", \"Bosman\", \"Bouma\", \"Bouman\", \"Bouwman\", \"Brands\", \"Brouwer\", \"Burger\", \"Buijs\", \"Buitenhuis\", \"Ceder\", \"Cohen\", \"Dekker\", \"Dekkers\", \"Dijkman\", \"Dijkstra\", \"Driessen\", \"Drost\", \"Engel\", \"Evers\", \"Faber\", \"Franke\", \"Gerritsen\", \"Goedhart\", \"Goossens\", \"Groen\", \"Groenenberg\", \"Groot\", \"Haan\", \"Hart\", \"Heemskerk\", \"Hendriks\", \"Hermans\", \"Hoekstra\", \"Hofman\", \"Hopman\", \"Huisman\", \"Jacobs\", \"Jansen\", \"Janssen\", \"Jonker\", \"Jaspers\", \"Keijzer\", \"Klaassen\", \"Klein\", \"Koek\", \"Koenders\", \"Kok\", \"Kool\", \"Koopman\", \"Koopmans\", \"Koning\", \"Koster\", \"Kramer\", \"Kroon\", \"Kuijpers\", \"Kuiper\", \"Kuipers\", \"Kurt\", \"Koster\", \"Kwakman\", \"Los\", \"Lubbers\", \"Maas\", \"Markus\", \"Martens\", \"Meijer\", \"Mol\", \"Molenaar\", \"Mulder\", \"Nieuwenhuis\", \"Peeters\", \"Peters\", \"Pengel\", \"Pieters\", \"Pool\", \"Post\", \"Postma\", \"Prins\", \"Pronk\", \"Reijnders\", \"Rietveld\", \"Roest\", \"Roos\", \"Sanders\", \"Schaap\", \"Scheffer\", \"Schenk\", \"Schilder\", \"Schipper\", \"Schmidt\", \"Scholten\", \"Schouten\", \"Schut\", \"Schutte\", \"Schuurman\", \"Simons\", \"Smeets\", \"Smit\", \"Smits\", \"Snel\", \"Swinkels\", \"Tas\", \"Terpstra\", \"Timmermans\", \"Tol\", \"Tromp\", \"Troost\", \"Valk\", \"Veenstra\", \"Veldkamp\", \"Verbeek\", \"Verheul\", \"Verhoeven\", \"Vermeer\", \"Vermeulen\", \"Verweij\", \"Vink\", \"Visser\", \"Voorn\", \"Vos\", \"Wagenaar\", \"Wiersema\", \"Willems\", \"Willemsen\", \"Witteveen\", \"Wolff\", \"Wolters\", \"Zijlstra\", \"Zwart\", \"de Beer\", \"de Boer\", \"de Bruijn\", \"de Bruin\", \"de Graaf\", \"de Groot\", \"de Haan\", \"de Haas\", \"de Jager\", \"de Jong\", \"de Jonge\", \"de Koning\", \"de Lange\", \"de Leeuw\", \"de Ridder\", \"de Rooij\", \"de Ruiter\", \"de Vos\", \"de Vries\", \"de Waal\", \"de Wit\", \"de Zwart\", \"van Beek\", \"van Boven\", \"van Dam\", \"van Dijk\", \"van Dongen\", \"van Doorn\", \"van Egmond\", \"van Eijk\", \"van Es\", \"van Gelder\", \"van Gelderen\", \"van Houten\", \"van Hulst\", \"van Kempen\", \"van Kesteren\", \"van Leeuwen\", \"van Loon\", \"van Mill\", \"van Noord\", \"van Ommen\", \"van Ommeren\", \"van Oosten\", \"van Oostveen\", \"van Rijn\", \"van Schaik\", \"van Veen\", \"van Vliet\", \"van Wijk\", \"van Wijngaarden\", \"van den Poel\", \"van de Pol\", \"van den Ploeg\", \"van de Ven\", \"van den Berg\", \"van den Bosch\", \"van den Brink\", \"van den Broek\", \"van den Heuvel\", \"van der Heijden\", \"van der Horst\", \"van der Hulst\", \"van der Kroon\", \"van der Laan\", \"van der Linden\", \"van der Meer\", \"van der Meij\", \"van der Meulen\", \"van der Molen\", \"van der Sluis\", \"van der Spek\", \"van der Veen\", \"van der Velde\", \"van der Velden\", \"van der Vliet\", \"van der Wal\"],\n      // https://surnames.behindthename.com/top/lists/england-wales/1991\n      \"uk\": [\"Smith\", \"Jones\", \"Williams\", \"Taylor\", \"Brown\", \"Davies\", \"Evans\", \"Wilson\", \"Thomas\", \"Johnson\", \"Roberts\", \"Robinson\", \"Thompson\", \"Wright\", \"Walker\", \"White\", \"Edwards\", \"Hughes\", \"Green\", \"Hall\", \"Lewis\", \"Harris\", \"Clarke\", \"Patel\", \"Jackson\", \"Wood\", \"Turner\", \"Martin\", \"Cooper\", \"Hill\", \"Ward\", \"Morris\", \"Moore\", \"Clark\", \"Lee\", \"King\", \"Baker\", \"Harrison\", \"Morgan\", \"Allen\", \"James\", \"Scott\", \"Phillips\", \"Watson\", \"Davis\", \"Parker\", \"Price\", \"Bennett\", \"Young\", \"Griffiths\", \"Mitchell\", \"Kelly\", \"Cook\", \"Carter\", \"Richardson\", \"Bailey\", \"Collins\", \"Bell\", \"Shaw\", \"Murphy\", \"Miller\", \"Cox\", \"Richards\", \"Khan\", \"Marshall\", \"Anderson\", \"Simpson\", \"Ellis\", \"Adams\", \"Singh\", \"Begum\", \"Wilkinson\", \"Foster\", \"Chapman\", \"Powell\", \"Webb\", \"Rogers\", \"Gray\", \"Mason\", \"Ali\", \"Hunt\", \"Hussain\", \"Campbell\", \"Matthews\", \"Owen\", \"Palmer\", \"Holmes\", \"Mills\", \"Barnes\", \"Knight\", \"Lloyd\", \"Butler\", \"Russell\", \"Barker\", \"Fisher\", \"Stevens\", \"Jenkins\", \"Murray\", \"Dixon\", \"Harvey\", \"Graham\", \"Pearson\", \"Ahmed\", \"Fletcher\", \"Walsh\", \"Kaur\", \"Gibson\", \"Howard\", \"Andrews\", \"Stewart\", \"Elliott\", \"Reynolds\", \"Saunders\", \"Payne\", \"Fox\", \"Ford\", \"Pearce\", \"Day\", \"Brooks\", \"West\", \"Lawrence\", \"Cole\", \"Atkinson\", \"Bradley\", \"Spencer\", \"Gill\", \"Dawson\", \"Ball\", \"Burton\", \"O'brien\", \"Watts\", \"Rose\", \"Booth\", \"Perry\", \"Ryan\", \"Grant\", \"Wells\", \"Armstrong\", \"Francis\", \"Rees\", \"Hayes\", \"Hart\", \"Hudson\", \"Newman\", \"Barrett\", \"Webster\", \"Hunter\", \"Gregory\", \"Carr\", \"Lowe\", \"Page\", \"Marsh\", \"Riley\", \"Dunn\", \"Woods\", \"Parsons\", \"Berry\", \"Stone\", \"Reid\", \"Holland\", \"Hawkins\", \"Harding\", \"Porter\", \"Robertson\", \"Newton\", \"Oliver\", \"Reed\", \"Kennedy\", \"Williamson\", \"Bird\", \"Gardner\", \"Shah\", \"Dean\", \"Lane\", \"Cooke\", \"Bates\", \"Henderson\", \"Parry\", \"Burgess\", \"Bishop\", \"Walton\", \"Burns\", \"Nicholson\", \"Shepherd\", \"Ross\", \"Cross\", \"Long\", \"Freeman\", \"Warren\", \"Nicholls\", \"Hamilton\", \"Byrne\", \"Sutton\", \"Mcdonald\", \"Yates\", \"Hodgson\", \"Robson\", \"Curtis\", \"Hopkins\", \"O'connor\", \"Harper\", \"Coleman\", \"Watkins\", \"Moss\", \"Mccarthy\", \"Chambers\", \"O'neill\", \"Griffin\", \"Sharp\", \"Hardy\", \"Wheeler\", \"Potter\", \"Osborne\", \"Johnston\", \"Gordon\", \"Doyle\", \"Wallace\", \"George\", \"Jordan\", \"Hutchinson\", \"Rowe\", \"Burke\", \"May\", \"Pritchard\", \"Gilbert\", \"Willis\", \"Higgins\", \"Read\", \"Miles\", \"Stevenson\", \"Stephenson\", \"Hammond\", \"Arnold\", \"Buckley\", \"Walters\", \"Hewitt\", \"Barber\", \"Nelson\", \"Slater\", \"Austin\", \"Sullivan\", \"Whitehead\", \"Mann\", \"Frost\", \"Lambert\", \"Stephens\", \"Blake\", \"Akhtar\", \"Lynch\", \"Goodwin\", \"Barton\", \"Woodward\", \"Thomson\", \"Cunningham\", \"Quinn\", \"Barnett\", \"Baxter\", \"Bibi\", \"Clayton\", \"Nash\", \"Greenwood\", \"Jennings\", \"Holt\", \"Kemp\", \"Poole\", \"Gallagher\", \"Bond\", \"Stokes\", \"Tucker\", \"Davidson\", \"Fowler\", \"Heath\", \"Norman\", \"Middleton\", \"Lawson\", \"Banks\", \"French\", \"Stanley\", \"Jarvis\", \"Gibbs\", \"Ferguson\", \"Hayward\", \"Carroll\", \"Douglas\", \"Dickinson\", \"Todd\", \"Barlow\", \"Peters\", \"Lucas\", \"Knowles\", \"Hartley\", \"Miah\", \"Simmons\", \"Morton\", \"Alexander\", \"Field\", \"Morrison\", \"Norris\", \"Townsend\", \"Preston\", \"Hancock\", \"Thornton\", \"Baldwin\", \"Burrows\", \"Briggs\", \"Parkinson\", \"Reeves\", \"Macdonald\", \"Lamb\", \"Black\", \"Abbott\", \"Sanders\", \"Thorpe\", \"Holden\", \"Tomlinson\", \"Perkins\", \"Ashton\", \"Rhodes\", \"Fuller\", \"Howe\", \"Bryant\", \"Vaughan\", \"Dale\", \"Davey\", \"Weston\", \"Bartlett\", \"Whittaker\", \"Davison\", \"Kent\", \"Skinner\", \"Birch\", \"Morley\", \"Daniels\", \"Glover\", \"Howell\", \"Cartwright\", \"Pugh\", \"Humphreys\", \"Goddard\", \"Brennan\", \"Wall\", \"Kirby\", \"Bowen\", \"Savage\", \"Bull\", \"Wong\", \"Dobson\", \"Smart\", \"Wilkins\", \"Kirk\", \"Fraser\", \"Duffy\", \"Hicks\", \"Patterson\", \"Bradshaw\", \"Little\", \"Archer\", \"Warner\", \"Waters\", \"O'sullivan\", \"Farrell\", \"Brookes\", \"Atkins\", \"Kay\", \"Dodd\", \"Bentley\", \"Flynn\", \"John\", \"Schofield\", \"Short\", \"Haynes\", \"Wade\", \"Butcher\", \"Henry\", \"Sanderson\", \"Crawford\", \"Sheppard\", \"Bolton\", \"Coates\", \"Giles\", \"Gould\", \"Houghton\", \"Gibbons\", \"Pratt\", \"Manning\", \"Law\", \"Hooper\", \"Noble\", \"Dyer\", \"Rahman\", \"Clements\", \"Moran\", \"Sykes\", \"Chan\", \"Doherty\", \"Connolly\", \"Joyce\", \"Franklin\", \"Hobbs\", \"Coles\", \"Herbert\", \"Steele\", \"Kerr\", \"Leach\", \"Winter\", \"Owens\", \"Duncan\", \"Naylor\", \"Fleming\", \"Horton\", \"Finch\", \"Fitzgerald\", \"Randall\", \"Carpenter\", \"Marsden\", \"Browne\", \"Garner\", \"Pickering\", \"Hale\", \"Dennis\", \"Vincent\", \"Chadwick\", \"Chandler\", \"Sharpe\", \"Nolan\", \"Lyons\", \"Hurst\", \"Collier\", \"Peacock\", \"Howarth\", \"Faulkner\", \"Rice\", \"Pollard\", \"Welch\", \"Norton\", \"Gough\", \"Sinclair\", \"Blackburn\", \"Bryan\", \"Conway\", \"Power\", \"Cameron\", \"Daly\", \"Allan\", \"Hanson\", \"Gardiner\", \"Boyle\", \"Myers\", \"Turnbull\", \"Wallis\", \"Mahmood\", \"Sims\", \"Swift\", \"Iqbal\", \"Pope\", \"Brady\", \"Chamberlain\", \"Rowley\", \"Tyler\", \"Farmer\", \"Metcalfe\", \"Hilton\", \"Godfrey\", \"Holloway\", \"Parkin\", \"Bray\", \"Talbot\", \"Donnelly\", \"Nixon\", \"Charlton\", \"Benson\", \"Whitehouse\", \"Barry\", \"Hope\", \"Lord\", \"North\", \"Storey\", \"Connor\", \"Potts\", \"Bevan\", \"Hargreaves\", \"Mclean\", \"Mistry\", \"Bruce\", \"Howells\", \"Hyde\", \"Parkes\", \"Wyatt\", \"Fry\", \"Lees\", \"O'donnell\", \"Craig\", \"Forster\", \"Mckenzie\", \"Humphries\", \"Mellor\", \"Carey\", \"Ingram\", \"Summers\", \"Leonard\"],\n      // https://surnames.behindthename.com/top/lists/germany/2017\n      \"de\": [\"Müller\", \"Schmidt\", \"Schneider\", \"Fischer\", \"Weber\", \"Meyer\", \"Wagner\", \"Becker\", \"Schulz\", \"Hoffmann\", \"Schäfer\", \"Koch\", \"Bauer\", \"Richter\", \"Klein\", \"Wolf\", \"Schröder\", \"Neumann\", \"Schwarz\", \"Zimmermann\", \"Braun\", \"Krüger\", \"Hofmann\", \"Hartmann\", \"Lange\", \"Schmitt\", \"Werner\", \"Schmitz\", \"Krause\", \"Meier\", \"Lehmann\", \"Schmid\", \"Schulze\", \"Maier\", \"Köhler\", \"Herrmann\", \"König\", \"Walter\", \"Mayer\", \"Huber\", \"Kaiser\", \"Fuchs\", \"Peters\", \"Lang\", \"Scholz\", \"Möller\", \"Weiß\", \"Jung\", \"Hahn\", \"Schubert\", \"Vogel\", \"Friedrich\", \"Keller\", \"Günther\", \"Frank\", \"Berger\", \"Winkler\", \"Roth\", \"Beck\", \"Lorenz\", \"Baumann\", \"Franke\", \"Albrecht\", \"Schuster\", \"Simon\", \"Ludwig\", \"Böhm\", \"Winter\", \"Kraus\", \"Martin\", \"Schumacher\", \"Krämer\", \"Vogt\", \"Stein\", \"Jäger\", \"Otto\", \"Sommer\", \"Groß\", \"Seidel\", \"Heinrich\", \"Brandt\", \"Haas\", \"Schreiber\", \"Graf\", \"Schulte\", \"Dietrich\", \"Ziegler\", \"Kuhn\", \"Kühn\", \"Pohl\", \"Engel\", \"Horn\", \"Busch\", \"Bergmann\", \"Thomas\", \"Voigt\", \"Sauer\", \"Arnold\", \"Wolff\", \"Pfeiffer\"],\n      // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/\n      \"jp\": [\"Sato\", \"Suzuki\", \"Takahashi\", \"Tanaka\", \"Watanabe\", \"Ito\", \"Yamamoto\", \"Nakamura\", \"Kobayashi\", \"Kato\", \"Yoshida\", \"Yamada\", \"Sasaki\", \"Yamaguchi\", \"Saito\", \"Matsumoto\", \"Inoue\", \"Kimura\", \"Hayashi\", \"Shimizu\", \"Yamazaki\", \"Mori\", \"Abe\", \"Ikeda\", \"Hashimoto\", \"Yamashita\", \"Ishikawa\", \"Nakajima\", \"Maeda\", \"Fujita\", \"Ogawa\", \"Goto\", \"Okada\", \"Hasegawa\", \"Murakami\", \"Kondo\", \"Ishii\", \"Saito\", \"Sakamoto\", \"Endo\", \"Aoki\", \"Fujii\", \"Nishimura\", \"Fukuda\", \"Ota\", \"Miura\", \"Fujiwara\", \"Okamoto\", \"Matsuda\", \"Nakagawa\", \"Nakano\", \"Harada\", \"Ono\", \"Tamura\", \"Takeuchi\", \"Kaneko\", \"Wada\", \"Nakayama\", \"Ishida\", \"Ueda\", \"Morita\", \"Hara\", \"Shibata\", \"Sakai\", \"Kudo\", \"Yokoyama\", \"Miyazaki\", \"Miyamoto\", \"Uchida\", \"Takagi\", \"Ando\", \"Taniguchi\", \"Ohno\", \"Maruyama\", \"Imai\", \"Takada\", \"Fujimoto\", \"Takeda\", \"Murata\", \"Ueno\", \"Sugiyama\", \"Masuda\", \"Sugawara\", \"Hirano\", \"Kojima\", \"Otsuka\", \"Chiba\", \"Kubo\", \"Matsui\", \"Iwasaki\", \"Sakurai\", \"Kinoshita\", \"Noguchi\", \"Matsuo\", \"Nomura\", \"Kikuchi\", \"Sano\", \"Onishi\", \"Sugimoto\", \"Arai\"],\n      // http://www.lowchensaustralia.com/names/popular-spanish-names.htm\n      \"es\": [\"Garcia\", \"Fernandez\", \"Lopez\", \"Martinez\", \"Gonzalez\", \"Rodriguez\", \"Sanchez\", \"Perez\", \"Martin\", \"Gomez\", \"Ruiz\", \"Diaz\", \"Hernandez\", \"Alvarez\", \"Jimenez\", \"Moreno\", \"Munoz\", \"Alonso\", \"Romero\", \"Navarro\", \"Gutierrez\", \"Torres\", \"Dominguez\", \"Gil\", \"Vazquez\", \"Blanco\", \"Serrano\", \"Ramos\", \"Castro\", \"Suarez\", \"Sanz\", \"Rubio\", \"Ortega\", \"Molina\", \"Delgado\", \"Ortiz\", \"Morales\", \"Ramirez\", \"Marin\", \"Iglesias\", \"Santos\", \"Castillo\", \"Garrido\", \"Calvo\", \"Pena\", \"Cruz\", \"Cano\", \"Nunez\", \"Prieto\", \"Diez\", \"Lozano\", \"Vidal\", \"Pascual\", \"Ferrer\", \"Medina\", \"Vega\", \"Leon\", \"Herrero\", \"Vicente\", \"Mendez\", \"Guerrero\", \"Fuentes\", \"Campos\", \"Nieto\", \"Cortes\", \"Caballero\", \"Ibanez\", \"Lorenzo\", \"Pastor\", \"Gimenez\", \"Saez\", \"Soler\", \"Marquez\", \"Carrasco\", \"Herrera\", \"Montero\", \"Arias\", \"Crespo\", \"Flores\", \"Andres\", \"Aguilar\", \"Hidalgo\", \"Cabrera\", \"Mora\", \"Duran\", \"Velasco\", \"Rey\", \"Pardo\", \"Roman\", \"Vila\", \"Bravo\", \"Merino\", \"Moya\", \"Soto\", \"Izquierdo\", \"Reyes\", \"Redondo\", \"Marcos\", \"Carmona\", \"Menendez\"],\n      // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France\n      \"fr\": [\"Martin\", \"Bernard\", \"Thomas\", \"Petit\", \"Robert\", \"Richard\", \"Durand\", \"Dubois\", \"Moreau\", \"Laurent\", \"Simon\", \"Michel\", \"Lefèvre\", \"Leroy\", \"Roux\", \"David\", \"Bertrand\", \"Morel\", \"Fournier\", \"Girard\", \"Bonnet\", \"Dupont\", \"Lambert\", \"Fontaine\", \"Rousseau\", \"Vincent\", \"Müller\", \"Lefèvre\", \"Faure\", \"André\", \"Mercier\", \"Blanc\", \"Guérin\", \"Boyer\", \"Garnier\", \"Chevalier\", \"François\", \"Legrand\", \"Gauthier\", \"Garcia\", \"Perrin\", \"Robin\", \"Clément\", \"Morin\", \"Nicolas\", \"Henry\", \"Roussel\", \"Matthieu\", \"Gautier\", \"Masson\", \"Marchand\", \"Duval\", \"Denis\", \"Dumont\", \"Marie\", \"Lemaire\", \"Noël\", \"Meyer\", \"Dufour\", \"Meunier\", \"Brun\", \"Blanchard\", \"Giraud\", \"Joly\", \"Rivière\", \"Lucas\", \"Brunet\", \"Gaillard\", \"Barbier\", \"Arnaud\", \"Martínez\", \"Gérard\", \"Roche\", \"Renard\", \"Schmitt\", \"Roy\", \"Leroux\", \"Colin\", \"Vidal\", \"Caron\", \"Picard\", \"Roger\", \"Fabre\", \"Aubert\", \"Lemoine\", \"Renaud\", \"Dumas\", \"Lacroix\", \"Olivier\", \"Philippe\", \"Bourgeois\", \"Pierre\", \"Benoît\", \"Rey\", \"Leclerc\", \"Payet\", \"Rolland\", \"Leclercq\", \"Guillaume\", \"Lecomte\", \"López\", \"Jean\", \"Dupuy\", \"Guillot\", \"Hubert\", \"Berger\", \"Carpentier\", \"Sánchez\", \"Dupuis\", \"Moulin\", \"Louis\", \"Deschamps\", \"Huet\", \"Vasseur\", \"Perez\", \"Boucher\", \"Fleury\", \"Royer\", \"Klein\", \"Jacquet\", \"Adam\", \"Paris\", \"Poirier\", \"Marty\", \"Aubry\", \"Guyot\", \"Carré\", \"Charles\", \"Renault\", \"Charpentier\", \"Ménard\", \"Maillard\", \"Baron\", \"Bertin\", \"Bailly\", \"Hervé\", \"Schneider\", \"Fernández\", \"Le GallGall\", \"Collet\", \"Léger\", \"Bouvier\", \"Julien\", \"Prévost\", \"Millet\", \"Perrot\", \"Daniel\", \"Le RouxRoux\", \"Cousin\", \"Germain\", \"Breton\", \"Besson\", \"Langlois\", \"Rémi\", \"Le GoffGoff\", \"Pelletier\", \"Lévêque\", \"Perrier\", \"Leblanc\", \"Barré\", \"Lebrun\", \"Marchal\", \"Weber\", \"Mallet\", \"Hamon\", \"Boulanger\", \"Jacob\", \"Monnier\", \"Michaud\", \"Rodríguez\", \"Guichard\", \"Gillet\", \"Étienne\", \"Grondin\", \"Poulain\", \"Tessier\", \"Chevallier\", \"Collin\", \"Chauvin\", \"Da SilvaSilva\", \"Bouchet\", \"Gay\", \"Lemaître\", \"Bénard\", \"Maréchal\", \"Humbert\", \"Reynaud\", \"Antoine\", \"Hoarau\", \"Perret\", \"Barthélemy\", \"Cordier\", \"Pichon\", \"Lejeune\", \"Gilbert\", \"Lamy\", \"Delaunay\", \"Pasquier\", \"Carlier\", \"LaporteLaporte\"]\n    },\n    // Data taken from http://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-latest-centroids\n    postcodeAreas: [{\n      code: 'AB'\n    }, {\n      code: 'AL'\n    }, {\n      code: 'B'\n    }, {\n      code: 'BA'\n    }, {\n      code: 'BB'\n    }, {\n      code: 'BD'\n    }, {\n      code: 'BH'\n    }, {\n      code: 'BL'\n    }, {\n      code: 'BN'\n    }, {\n      code: 'BR'\n    }, {\n      code: 'BS'\n    }, {\n      code: 'BT'\n    }, {\n      code: 'CA'\n    }, {\n      code: 'CB'\n    }, {\n      code: 'CF'\n    }, {\n      code: 'CH'\n    }, {\n      code: 'CM'\n    }, {\n      code: 'CO'\n    }, {\n      code: 'CR'\n    }, {\n      code: 'CT'\n    }, {\n      code: 'CV'\n    }, {\n      code: 'CW'\n    }, {\n      code: 'DA'\n    }, {\n      code: 'DD'\n    }, {\n      code: 'DE'\n    }, {\n      code: 'DG'\n    }, {\n      code: 'DH'\n    }, {\n      code: 'DL'\n    }, {\n      code: 'DN'\n    }, {\n      code: 'DT'\n    }, {\n      code: 'DY'\n    }, {\n      code: 'E'\n    }, {\n      code: 'EC'\n    }, {\n      code: 'EH'\n    }, {\n      code: 'EN'\n    }, {\n      code: 'EX'\n    }, {\n      code: 'FK'\n    }, {\n      code: 'FY'\n    }, {\n      code: 'G'\n    }, {\n      code: 'GL'\n    }, {\n      code: 'GU'\n    }, {\n      code: 'GY'\n    }, {\n      code: 'HA'\n    }, {\n      code: 'HD'\n    }, {\n      code: 'HG'\n    }, {\n      code: 'HP'\n    }, {\n      code: 'HR'\n    }, {\n      code: 'HS'\n    }, {\n      code: 'HU'\n    }, {\n      code: 'HX'\n    }, {\n      code: 'IG'\n    }, {\n      code: 'IM'\n    }, {\n      code: 'IP'\n    }, {\n      code: 'IV'\n    }, {\n      code: 'JE'\n    }, {\n      code: 'KA'\n    }, {\n      code: 'KT'\n    }, {\n      code: 'KW'\n    }, {\n      code: 'KY'\n    }, {\n      code: 'L'\n    }, {\n      code: 'LA'\n    }, {\n      code: 'LD'\n    }, {\n      code: 'LE'\n    }, {\n      code: 'LL'\n    }, {\n      code: 'LN'\n    }, {\n      code: 'LS'\n    }, {\n      code: 'LU'\n    }, {\n      code: 'M'\n    }, {\n      code: 'ME'\n    }, {\n      code: 'MK'\n    }, {\n      code: 'ML'\n    }, {\n      code: 'N'\n    }, {\n      code: 'NE'\n    }, {\n      code: 'NG'\n    }, {\n      code: 'NN'\n    }, {\n      code: 'NP'\n    }, {\n      code: 'NR'\n    }, {\n      code: 'NW'\n    }, {\n      code: 'OL'\n    }, {\n      code: 'OX'\n    }, {\n      code: 'PA'\n    }, {\n      code: 'PE'\n    }, {\n      code: 'PH'\n    }, {\n      code: 'PL'\n    }, {\n      code: 'PO'\n    }, {\n      code: 'PR'\n    }, {\n      code: 'RG'\n    }, {\n      code: 'RH'\n    }, {\n      code: 'RM'\n    }, {\n      code: 'S'\n    }, {\n      code: 'SA'\n    }, {\n      code: 'SE'\n    }, {\n      code: 'SG'\n    }, {\n      code: 'SK'\n    }, {\n      code: 'SL'\n    }, {\n      code: 'SM'\n    }, {\n      code: 'SN'\n    }, {\n      code: 'SO'\n    }, {\n      code: 'SP'\n    }, {\n      code: 'SR'\n    }, {\n      code: 'SS'\n    }, {\n      code: 'ST'\n    }, {\n      code: 'SW'\n    }, {\n      code: 'SY'\n    }, {\n      code: 'TA'\n    }, {\n      code: 'TD'\n    }, {\n      code: 'TF'\n    }, {\n      code: 'TN'\n    }, {\n      code: 'TQ'\n    }, {\n      code: 'TR'\n    }, {\n      code: 'TS'\n    }, {\n      code: 'TW'\n    }, {\n      code: 'UB'\n    }, {\n      code: 'W'\n    }, {\n      code: 'WA'\n    }, {\n      code: 'WC'\n    }, {\n      code: 'WD'\n    }, {\n      code: 'WF'\n    }, {\n      code: 'WN'\n    }, {\n      code: 'WR'\n    }, {\n      code: 'WS'\n    }, {\n      code: 'WV'\n    }, {\n      code: 'YO'\n    }, {\n      code: 'ZE'\n    }],\n    // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\n    countries: [{\n      \"name\": \"Afghanistan\",\n      \"abbreviation\": \"AF\"\n    }, {\n      \"name\": \"Åland Islands\",\n      \"abbreviation\": \"AX\"\n    }, {\n      \"name\": \"Albania\",\n      \"abbreviation\": \"AL\"\n    }, {\n      \"name\": \"Algeria\",\n      \"abbreviation\": \"DZ\"\n    }, {\n      \"name\": \"American Samoa\",\n      \"abbreviation\": \"AS\"\n    }, {\n      \"name\": \"Andorra\",\n      \"abbreviation\": \"AD\"\n    }, {\n      \"name\": \"Angola\",\n      \"abbreviation\": \"AO\"\n    }, {\n      \"name\": \"Anguilla\",\n      \"abbreviation\": \"AI\"\n    }, {\n      \"name\": \"Antarctica\",\n      \"abbreviation\": \"AQ\"\n    }, {\n      \"name\": \"Antigua & Barbuda\",\n      \"abbreviation\": \"AG\"\n    }, {\n      \"name\": \"Argentina\",\n      \"abbreviation\": \"AR\"\n    }, {\n      \"name\": \"Armenia\",\n      \"abbreviation\": \"AM\"\n    }, {\n      \"name\": \"Aruba\",\n      \"abbreviation\": \"AW\"\n    }, {\n      \"name\": \"Ascension Island\",\n      \"abbreviation\": \"AC\"\n    }, {\n      \"name\": \"Australia\",\n      \"abbreviation\": \"AU\"\n    }, {\n      \"name\": \"Austria\",\n      \"abbreviation\": \"AT\"\n    }, {\n      \"name\": \"Azerbaijan\",\n      \"abbreviation\": \"AZ\"\n    }, {\n      \"name\": \"Bahamas\",\n      \"abbreviation\": \"BS\"\n    }, {\n      \"name\": \"Bahrain\",\n      \"abbreviation\": \"BH\"\n    }, {\n      \"name\": \"Bangladesh\",\n      \"abbreviation\": \"BD\"\n    }, {\n      \"name\": \"Barbados\",\n      \"abbreviation\": \"BB\"\n    }, {\n      \"name\": \"Belarus\",\n      \"abbreviation\": \"BY\"\n    }, {\n      \"name\": \"Belgium\",\n      \"abbreviation\": \"BE\"\n    }, {\n      \"name\": \"Belize\",\n      \"abbreviation\": \"BZ\"\n    }, {\n      \"name\": \"Benin\",\n      \"abbreviation\": \"BJ\"\n    }, {\n      \"name\": \"Bermuda\",\n      \"abbreviation\": \"BM\"\n    }, {\n      \"name\": \"Bhutan\",\n      \"abbreviation\": \"BT\"\n    }, {\n      \"name\": \"Bolivia\",\n      \"abbreviation\": \"BO\"\n    }, {\n      \"name\": \"Bosnia & Herzegovina\",\n      \"abbreviation\": \"BA\"\n    }, {\n      \"name\": \"Botswana\",\n      \"abbreviation\": \"BW\"\n    }, {\n      \"name\": \"Brazil\",\n      \"abbreviation\": \"BR\"\n    }, {\n      \"name\": \"British Indian Ocean Territory\",\n      \"abbreviation\": \"IO\"\n    }, {\n      \"name\": \"British Virgin Islands\",\n      \"abbreviation\": \"VG\"\n    }, {\n      \"name\": \"Brunei\",\n      \"abbreviation\": \"BN\"\n    }, {\n      \"name\": \"Bulgaria\",\n      \"abbreviation\": \"BG\"\n    }, {\n      \"name\": \"Burkina Faso\",\n      \"abbreviation\": \"BF\"\n    }, {\n      \"name\": \"Burundi\",\n      \"abbreviation\": \"BI\"\n    }, {\n      \"name\": \"Cambodia\",\n      \"abbreviation\": \"KH\"\n    }, {\n      \"name\": \"Cameroon\",\n      \"abbreviation\": \"CM\"\n    }, {\n      \"name\": \"Canada\",\n      \"abbreviation\": \"CA\"\n    }, {\n      \"name\": \"Canary Islands\",\n      \"abbreviation\": \"IC\"\n    }, {\n      \"name\": \"Cape Verde\",\n      \"abbreviation\": \"CV\"\n    }, {\n      \"name\": \"Caribbean Netherlands\",\n      \"abbreviation\": \"BQ\"\n    }, {\n      \"name\": \"Cayman Islands\",\n      \"abbreviation\": \"KY\"\n    }, {\n      \"name\": \"Central African Republic\",\n      \"abbreviation\": \"CF\"\n    }, {\n      \"name\": \"Ceuta & Melilla\",\n      \"abbreviation\": \"EA\"\n    }, {\n      \"name\": \"Chad\",\n      \"abbreviation\": \"TD\"\n    }, {\n      \"name\": \"Chile\",\n      \"abbreviation\": \"CL\"\n    }, {\n      \"name\": \"China\",\n      \"abbreviation\": \"CN\"\n    }, {\n      \"name\": \"Christmas Island\",\n      \"abbreviation\": \"CX\"\n    }, {\n      \"name\": \"Cocos (Keeling) Islands\",\n      \"abbreviation\": \"CC\"\n    }, {\n      \"name\": \"Colombia\",\n      \"abbreviation\": \"CO\"\n    }, {\n      \"name\": \"Comoros\",\n      \"abbreviation\": \"KM\"\n    }, {\n      \"name\": \"Congo - Brazzaville\",\n      \"abbreviation\": \"CG\"\n    }, {\n      \"name\": \"Congo - Kinshasa\",\n      \"abbreviation\": \"CD\"\n    }, {\n      \"name\": \"Cook Islands\",\n      \"abbreviation\": \"CK\"\n    }, {\n      \"name\": \"Costa Rica\",\n      \"abbreviation\": \"CR\"\n    }, {\n      \"name\": \"Côte d'Ivoire\",\n      \"abbreviation\": \"CI\"\n    }, {\n      \"name\": \"Croatia\",\n      \"abbreviation\": \"HR\"\n    }, {\n      \"name\": \"Cuba\",\n      \"abbreviation\": \"CU\"\n    }, {\n      \"name\": \"Curaçao\",\n      \"abbreviation\": \"CW\"\n    }, {\n      \"name\": \"Cyprus\",\n      \"abbreviation\": \"CY\"\n    }, {\n      \"name\": \"Czech Republic\",\n      \"abbreviation\": \"CZ\"\n    }, {\n      \"name\": \"Denmark\",\n      \"abbreviation\": \"DK\"\n    }, {\n      \"name\": \"Diego Garcia\",\n      \"abbreviation\": \"DG\"\n    }, {\n      \"name\": \"Djibouti\",\n      \"abbreviation\": \"DJ\"\n    }, {\n      \"name\": \"Dominica\",\n      \"abbreviation\": \"DM\"\n    }, {\n      \"name\": \"Dominican Republic\",\n      \"abbreviation\": \"DO\"\n    }, {\n      \"name\": \"Ecuador\",\n      \"abbreviation\": \"EC\"\n    }, {\n      \"name\": \"Egypt\",\n      \"abbreviation\": \"EG\"\n    }, {\n      \"name\": \"El Salvador\",\n      \"abbreviation\": \"SV\"\n    }, {\n      \"name\": \"Equatorial Guinea\",\n      \"abbreviation\": \"GQ\"\n    }, {\n      \"name\": \"Eritrea\",\n      \"abbreviation\": \"ER\"\n    }, {\n      \"name\": \"Estonia\",\n      \"abbreviation\": \"EE\"\n    }, {\n      \"name\": \"Ethiopia\",\n      \"abbreviation\": \"ET\"\n    }, {\n      \"name\": \"Falkland Islands\",\n      \"abbreviation\": \"FK\"\n    }, {\n      \"name\": \"Faroe Islands\",\n      \"abbreviation\": \"FO\"\n    }, {\n      \"name\": \"Fiji\",\n      \"abbreviation\": \"FJ\"\n    }, {\n      \"name\": \"Finland\",\n      \"abbreviation\": \"FI\"\n    }, {\n      \"name\": \"France\",\n      \"abbreviation\": \"FR\"\n    }, {\n      \"name\": \"French Guiana\",\n      \"abbreviation\": \"GF\"\n    }, {\n      \"name\": \"French Polynesia\",\n      \"abbreviation\": \"PF\"\n    }, {\n      \"name\": \"French Southern Territories\",\n      \"abbreviation\": \"TF\"\n    }, {\n      \"name\": \"Gabon\",\n      \"abbreviation\": \"GA\"\n    }, {\n      \"name\": \"Gambia\",\n      \"abbreviation\": \"GM\"\n    }, {\n      \"name\": \"Georgia\",\n      \"abbreviation\": \"GE\"\n    }, {\n      \"name\": \"Germany\",\n      \"abbreviation\": \"DE\"\n    }, {\n      \"name\": \"Ghana\",\n      \"abbreviation\": \"GH\"\n    }, {\n      \"name\": \"Gibraltar\",\n      \"abbreviation\": \"GI\"\n    }, {\n      \"name\": \"Greece\",\n      \"abbreviation\": \"GR\"\n    }, {\n      \"name\": \"Greenland\",\n      \"abbreviation\": \"GL\"\n    }, {\n      \"name\": \"Grenada\",\n      \"abbreviation\": \"GD\"\n    }, {\n      \"name\": \"Guadeloupe\",\n      \"abbreviation\": \"GP\"\n    }, {\n      \"name\": \"Guam\",\n      \"abbreviation\": \"GU\"\n    }, {\n      \"name\": \"Guatemala\",\n      \"abbreviation\": \"GT\"\n    }, {\n      \"name\": \"Guernsey\",\n      \"abbreviation\": \"GG\"\n    }, {\n      \"name\": \"Guinea\",\n      \"abbreviation\": \"GN\"\n    }, {\n      \"name\": \"Guinea-Bissau\",\n      \"abbreviation\": \"GW\"\n    }, {\n      \"name\": \"Guyana\",\n      \"abbreviation\": \"GY\"\n    }, {\n      \"name\": \"Haiti\",\n      \"abbreviation\": \"HT\"\n    }, {\n      \"name\": \"Honduras\",\n      \"abbreviation\": \"HN\"\n    }, {\n      \"name\": \"Hong Kong SAR China\",\n      \"abbreviation\": \"HK\"\n    }, {\n      \"name\": \"Hungary\",\n      \"abbreviation\": \"HU\"\n    }, {\n      \"name\": \"Iceland\",\n      \"abbreviation\": \"IS\"\n    }, {\n      \"name\": \"India\",\n      \"abbreviation\": \"IN\"\n    }, {\n      \"name\": \"Indonesia\",\n      \"abbreviation\": \"ID\"\n    }, {\n      \"name\": \"Iran\",\n      \"abbreviation\": \"IR\"\n    }, {\n      \"name\": \"Iraq\",\n      \"abbreviation\": \"IQ\"\n    }, {\n      \"name\": \"Ireland\",\n      \"abbreviation\": \"IE\"\n    }, {\n      \"name\": \"Isle of Man\",\n      \"abbreviation\": \"IM\"\n    }, {\n      \"name\": \"Israel\",\n      \"abbreviation\": \"IL\"\n    }, {\n      \"name\": \"Italy\",\n      \"abbreviation\": \"IT\"\n    }, {\n      \"name\": \"Jamaica\",\n      \"abbreviation\": \"JM\"\n    }, {\n      \"name\": \"Japan\",\n      \"abbreviation\": \"JP\"\n    }, {\n      \"name\": \"Jersey\",\n      \"abbreviation\": \"JE\"\n    }, {\n      \"name\": \"Jordan\",\n      \"abbreviation\": \"JO\"\n    }, {\n      \"name\": \"Kazakhstan\",\n      \"abbreviation\": \"KZ\"\n    }, {\n      \"name\": \"Kenya\",\n      \"abbreviation\": \"KE\"\n    }, {\n      \"name\": \"Kiribati\",\n      \"abbreviation\": \"KI\"\n    }, {\n      \"name\": \"Kosovo\",\n      \"abbreviation\": \"XK\"\n    }, {\n      \"name\": \"Kuwait\",\n      \"abbreviation\": \"KW\"\n    }, {\n      \"name\": \"Kyrgyzstan\",\n      \"abbreviation\": \"KG\"\n    }, {\n      \"name\": \"Laos\",\n      \"abbreviation\": \"LA\"\n    }, {\n      \"name\": \"Latvia\",\n      \"abbreviation\": \"LV\"\n    }, {\n      \"name\": \"Lebanon\",\n      \"abbreviation\": \"LB\"\n    }, {\n      \"name\": \"Lesotho\",\n      \"abbreviation\": \"LS\"\n    }, {\n      \"name\": \"Liberia\",\n      \"abbreviation\": \"LR\"\n    }, {\n      \"name\": \"Libya\",\n      \"abbreviation\": \"LY\"\n    }, {\n      \"name\": \"Liechtenstein\",\n      \"abbreviation\": \"LI\"\n    }, {\n      \"name\": \"Lithuania\",\n      \"abbreviation\": \"LT\"\n    }, {\n      \"name\": \"Luxembourg\",\n      \"abbreviation\": \"LU\"\n    }, {\n      \"name\": \"Macau SAR China\",\n      \"abbreviation\": \"MO\"\n    }, {\n      \"name\": \"Macedonia\",\n      \"abbreviation\": \"MK\"\n    }, {\n      \"name\": \"Madagascar\",\n      \"abbreviation\": \"MG\"\n    }, {\n      \"name\": \"Malawi\",\n      \"abbreviation\": \"MW\"\n    }, {\n      \"name\": \"Malaysia\",\n      \"abbreviation\": \"MY\"\n    }, {\n      \"name\": \"Maldives\",\n      \"abbreviation\": \"MV\"\n    }, {\n      \"name\": \"Mali\",\n      \"abbreviation\": \"ML\"\n    }, {\n      \"name\": \"Malta\",\n      \"abbreviation\": \"MT\"\n    }, {\n      \"name\": \"Marshall Islands\",\n      \"abbreviation\": \"MH\"\n    }, {\n      \"name\": \"Martinique\",\n      \"abbreviation\": \"MQ\"\n    }, {\n      \"name\": \"Mauritania\",\n      \"abbreviation\": \"MR\"\n    }, {\n      \"name\": \"Mauritius\",\n      \"abbreviation\": \"MU\"\n    }, {\n      \"name\": \"Mayotte\",\n      \"abbreviation\": \"YT\"\n    }, {\n      \"name\": \"Mexico\",\n      \"abbreviation\": \"MX\"\n    }, {\n      \"name\": \"Micronesia\",\n      \"abbreviation\": \"FM\"\n    }, {\n      \"name\": \"Moldova\",\n      \"abbreviation\": \"MD\"\n    }, {\n      \"name\": \"Monaco\",\n      \"abbreviation\": \"MC\"\n    }, {\n      \"name\": \"Mongolia\",\n      \"abbreviation\": \"MN\"\n    }, {\n      \"name\": \"Montenegro\",\n      \"abbreviation\": \"ME\"\n    }, {\n      \"name\": \"Montserrat\",\n      \"abbreviation\": \"MS\"\n    }, {\n      \"name\": \"Morocco\",\n      \"abbreviation\": \"MA\"\n    }, {\n      \"name\": \"Mozambique\",\n      \"abbreviation\": \"MZ\"\n    }, {\n      \"name\": \"Myanmar (Burma)\",\n      \"abbreviation\": \"MM\"\n    }, {\n      \"name\": \"Namibia\",\n      \"abbreviation\": \"NA\"\n    }, {\n      \"name\": \"Nauru\",\n      \"abbreviation\": \"NR\"\n    }, {\n      \"name\": \"Nepal\",\n      \"abbreviation\": \"NP\"\n    }, {\n      \"name\": \"Netherlands\",\n      \"abbreviation\": \"NL\"\n    }, {\n      \"name\": \"New Caledonia\",\n      \"abbreviation\": \"NC\"\n    }, {\n      \"name\": \"New Zealand\",\n      \"abbreviation\": \"NZ\"\n    }, {\n      \"name\": \"Nicaragua\",\n      \"abbreviation\": \"NI\"\n    }, {\n      \"name\": \"Niger\",\n      \"abbreviation\": \"NE\"\n    }, {\n      \"name\": \"Nigeria\",\n      \"abbreviation\": \"NG\"\n    }, {\n      \"name\": \"Niue\",\n      \"abbreviation\": \"NU\"\n    }, {\n      \"name\": \"Norfolk Island\",\n      \"abbreviation\": \"NF\"\n    }, {\n      \"name\": \"North Korea\",\n      \"abbreviation\": \"KP\"\n    }, {\n      \"name\": \"Northern Mariana Islands\",\n      \"abbreviation\": \"MP\"\n    }, {\n      \"name\": \"Norway\",\n      \"abbreviation\": \"NO\"\n    }, {\n      \"name\": \"Oman\",\n      \"abbreviation\": \"OM\"\n    }, {\n      \"name\": \"Pakistan\",\n      \"abbreviation\": \"PK\"\n    }, {\n      \"name\": \"Palau\",\n      \"abbreviation\": \"PW\"\n    }, {\n      \"name\": \"Palestinian Territories\",\n      \"abbreviation\": \"PS\"\n    }, {\n      \"name\": \"Panama\",\n      \"abbreviation\": \"PA\"\n    }, {\n      \"name\": \"Papua New Guinea\",\n      \"abbreviation\": \"PG\"\n    }, {\n      \"name\": \"Paraguay\",\n      \"abbreviation\": \"PY\"\n    }, {\n      \"name\": \"Peru\",\n      \"abbreviation\": \"PE\"\n    }, {\n      \"name\": \"Philippines\",\n      \"abbreviation\": \"PH\"\n    }, {\n      \"name\": \"Pitcairn Islands\",\n      \"abbreviation\": \"PN\"\n    }, {\n      \"name\": \"Poland\",\n      \"abbreviation\": \"PL\"\n    }, {\n      \"name\": \"Portugal\",\n      \"abbreviation\": \"PT\"\n    }, {\n      \"name\": \"Puerto Rico\",\n      \"abbreviation\": \"PR\"\n    }, {\n      \"name\": \"Qatar\",\n      \"abbreviation\": \"QA\"\n    }, {\n      \"name\": \"Réunion\",\n      \"abbreviation\": \"RE\"\n    }, {\n      \"name\": \"Romania\",\n      \"abbreviation\": \"RO\"\n    }, {\n      \"name\": \"Russia\",\n      \"abbreviation\": \"RU\"\n    }, {\n      \"name\": \"Rwanda\",\n      \"abbreviation\": \"RW\"\n    }, {\n      \"name\": \"Samoa\",\n      \"abbreviation\": \"WS\"\n    }, {\n      \"name\": \"San Marino\",\n      \"abbreviation\": \"SM\"\n    }, {\n      \"name\": \"São Tomé and Príncipe\",\n      \"abbreviation\": \"ST\"\n    }, {\n      \"name\": \"Saudi Arabia\",\n      \"abbreviation\": \"SA\"\n    }, {\n      \"name\": \"Senegal\",\n      \"abbreviation\": \"SN\"\n    }, {\n      \"name\": \"Serbia\",\n      \"abbreviation\": \"RS\"\n    }, {\n      \"name\": \"Seychelles\",\n      \"abbreviation\": \"SC\"\n    }, {\n      \"name\": \"Sierra Leone\",\n      \"abbreviation\": \"SL\"\n    }, {\n      \"name\": \"Singapore\",\n      \"abbreviation\": \"SG\"\n    }, {\n      \"name\": \"Sint Maarten\",\n      \"abbreviation\": \"SX\"\n    }, {\n      \"name\": \"Slovakia\",\n      \"abbreviation\": \"SK\"\n    }, {\n      \"name\": \"Slovenia\",\n      \"abbreviation\": \"SI\"\n    }, {\n      \"name\": \"Solomon Islands\",\n      \"abbreviation\": \"SB\"\n    }, {\n      \"name\": \"Somalia\",\n      \"abbreviation\": \"SO\"\n    }, {\n      \"name\": \"South Africa\",\n      \"abbreviation\": \"ZA\"\n    }, {\n      \"name\": \"South Georgia & South Sandwich Islands\",\n      \"abbreviation\": \"GS\"\n    }, {\n      \"name\": \"South Korea\",\n      \"abbreviation\": \"KR\"\n    }, {\n      \"name\": \"South Sudan\",\n      \"abbreviation\": \"SS\"\n    }, {\n      \"name\": \"Spain\",\n      \"abbreviation\": \"ES\"\n    }, {\n      \"name\": \"Sri Lanka\",\n      \"abbreviation\": \"LK\"\n    }, {\n      \"name\": \"St. Barthélemy\",\n      \"abbreviation\": \"BL\"\n    }, {\n      \"name\": \"St. Helena\",\n      \"abbreviation\": \"SH\"\n    }, {\n      \"name\": \"St. Kitts & Nevis\",\n      \"abbreviation\": \"KN\"\n    }, {\n      \"name\": \"St. Lucia\",\n      \"abbreviation\": \"LC\"\n    }, {\n      \"name\": \"St. Martin\",\n      \"abbreviation\": \"MF\"\n    }, {\n      \"name\": \"St. Pierre & Miquelon\",\n      \"abbreviation\": \"PM\"\n    }, {\n      \"name\": \"St. Vincent & Grenadines\",\n      \"abbreviation\": \"VC\"\n    }, {\n      \"name\": \"Sudan\",\n      \"abbreviation\": \"SD\"\n    }, {\n      \"name\": \"Suriname\",\n      \"abbreviation\": \"SR\"\n    }, {\n      \"name\": \"Svalbard & Jan Mayen\",\n      \"abbreviation\": \"SJ\"\n    }, {\n      \"name\": \"Swaziland\",\n      \"abbreviation\": \"SZ\"\n    }, {\n      \"name\": \"Sweden\",\n      \"abbreviation\": \"SE\"\n    }, {\n      \"name\": \"Switzerland\",\n      \"abbreviation\": \"CH\"\n    }, {\n      \"name\": \"Syria\",\n      \"abbreviation\": \"SY\"\n    }, {\n      \"name\": \"Taiwan\",\n      \"abbreviation\": \"TW\"\n    }, {\n      \"name\": \"Tajikistan\",\n      \"abbreviation\": \"TJ\"\n    }, {\n      \"name\": \"Tanzania\",\n      \"abbreviation\": \"TZ\"\n    }, {\n      \"name\": \"Thailand\",\n      \"abbreviation\": \"TH\"\n    }, {\n      \"name\": \"Timor-Leste\",\n      \"abbreviation\": \"TL\"\n    }, {\n      \"name\": \"Togo\",\n      \"abbreviation\": \"TG\"\n    }, {\n      \"name\": \"Tokelau\",\n      \"abbreviation\": \"TK\"\n    }, {\n      \"name\": \"Tonga\",\n      \"abbreviation\": \"TO\"\n    }, {\n      \"name\": \"Trinidad & Tobago\",\n      \"abbreviation\": \"TT\"\n    }, {\n      \"name\": \"Tristan da Cunha\",\n      \"abbreviation\": \"TA\"\n    }, {\n      \"name\": \"Tunisia\",\n      \"abbreviation\": \"TN\"\n    }, {\n      \"name\": \"Turkey\",\n      \"abbreviation\": \"TR\"\n    }, {\n      \"name\": \"Turkmenistan\",\n      \"abbreviation\": \"TM\"\n    }, {\n      \"name\": \"Turks & Caicos Islands\",\n      \"abbreviation\": \"TC\"\n    }, {\n      \"name\": \"Tuvalu\",\n      \"abbreviation\": \"TV\"\n    }, {\n      \"name\": \"U.S. Outlying Islands\",\n      \"abbreviation\": \"UM\"\n    }, {\n      \"name\": \"U.S. Virgin Islands\",\n      \"abbreviation\": \"VI\"\n    }, {\n      \"name\": \"Uganda\",\n      \"abbreviation\": \"UG\"\n    }, {\n      \"name\": \"Ukraine\",\n      \"abbreviation\": \"UA\"\n    }, {\n      \"name\": \"United Arab Emirates\",\n      \"abbreviation\": \"AE\"\n    }, {\n      \"name\": \"United Kingdom\",\n      \"abbreviation\": \"GB\"\n    }, {\n      \"name\": \"United States\",\n      \"abbreviation\": \"US\"\n    }, {\n      \"name\": \"Uruguay\",\n      \"abbreviation\": \"UY\"\n    }, {\n      \"name\": \"Uzbekistan\",\n      \"abbreviation\": \"UZ\"\n    }, {\n      \"name\": \"Vanuatu\",\n      \"abbreviation\": \"VU\"\n    }, {\n      \"name\": \"Vatican City\",\n      \"abbreviation\": \"VA\"\n    }, {\n      \"name\": \"Venezuela\",\n      \"abbreviation\": \"VE\"\n    }, {\n      \"name\": \"Vietnam\",\n      \"abbreviation\": \"VN\"\n    }, {\n      \"name\": \"Wallis & Futuna\",\n      \"abbreviation\": \"WF\"\n    }, {\n      \"name\": \"Western Sahara\",\n      \"abbreviation\": \"EH\"\n    }, {\n      \"name\": \"Yemen\",\n      \"abbreviation\": \"YE\"\n    }, {\n      \"name\": \"Zambia\",\n      \"abbreviation\": \"ZM\"\n    }, {\n      \"name\": \"Zimbabwe\",\n      \"abbreviation\": \"ZW\"\n    }],\n    counties: {\n      // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n      \"uk\": [{\n        name: 'Bath and North East Somerset'\n      }, {\n        name: 'Aberdeenshire'\n      }, {\n        name: 'Anglesey'\n      }, {\n        name: 'Angus'\n      }, {\n        name: 'Bedford'\n      }, {\n        name: 'Blackburn with Darwen'\n      }, {\n        name: 'Blackpool'\n      }, {\n        name: 'Bournemouth'\n      }, {\n        name: 'Bracknell Forest'\n      }, {\n        name: 'Brighton & Hove'\n      }, {\n        name: 'Bristol'\n      }, {\n        name: 'Buckinghamshire'\n      }, {\n        name: 'Cambridgeshire'\n      }, {\n        name: 'Carmarthenshire'\n      }, {\n        name: 'Central Bedfordshire'\n      }, {\n        name: 'Ceredigion'\n      }, {\n        name: 'Cheshire East'\n      }, {\n        name: 'Cheshire West and Chester'\n      }, {\n        name: 'Clackmannanshire'\n      }, {\n        name: 'Conwy'\n      }, {\n        name: 'Cornwall'\n      }, {\n        name: 'County Antrim'\n      }, {\n        name: 'County Armagh'\n      }, {\n        name: 'County Down'\n      }, {\n        name: 'County Durham'\n      }, {\n        name: 'County Fermanagh'\n      }, {\n        name: 'County Londonderry'\n      }, {\n        name: 'County Tyrone'\n      }, {\n        name: 'Cumbria'\n      }, {\n        name: 'Darlington'\n      }, {\n        name: 'Denbighshire'\n      }, {\n        name: 'Derby'\n      }, {\n        name: 'Derbyshire'\n      }, {\n        name: 'Devon'\n      }, {\n        name: 'Dorset'\n      }, {\n        name: 'Dumfries and Galloway'\n      }, {\n        name: 'Dundee'\n      }, {\n        name: 'East Lothian'\n      }, {\n        name: 'East Riding of Yorkshire'\n      }, {\n        name: 'East Sussex'\n      }, {\n        name: 'Edinburgh?'\n      }, {\n        name: 'Essex'\n      }, {\n        name: 'Falkirk'\n      }, {\n        name: 'Fife'\n      }, {\n        name: 'Flintshire'\n      }, {\n        name: 'Gloucestershire'\n      }, {\n        name: 'Greater London'\n      }, {\n        name: 'Greater Manchester'\n      }, {\n        name: 'Gwent'\n      }, {\n        name: 'Gwynedd'\n      }, {\n        name: 'Halton'\n      }, {\n        name: 'Hampshire'\n      }, {\n        name: 'Hartlepool'\n      }, {\n        name: 'Herefordshire'\n      }, {\n        name: 'Hertfordshire'\n      }, {\n        name: 'Highlands'\n      }, {\n        name: 'Hull'\n      }, {\n        name: 'Isle of Wight'\n      }, {\n        name: 'Isles of Scilly'\n      }, {\n        name: 'Kent'\n      }, {\n        name: 'Lancashire'\n      }, {\n        name: 'Leicester'\n      }, {\n        name: 'Leicestershire'\n      }, {\n        name: 'Lincolnshire'\n      }, {\n        name: 'Lothian'\n      }, {\n        name: 'Luton'\n      }, {\n        name: 'Medway'\n      }, {\n        name: 'Merseyside'\n      }, {\n        name: 'Mid Glamorgan'\n      }, {\n        name: 'Middlesbrough'\n      }, {\n        name: 'Milton Keynes'\n      }, {\n        name: 'Monmouthshire'\n      }, {\n        name: 'Moray'\n      }, {\n        name: 'Norfolk'\n      }, {\n        name: 'North East Lincolnshire'\n      }, {\n        name: 'North Lincolnshire'\n      }, {\n        name: 'North Somerset'\n      }, {\n        name: 'North Yorkshire'\n      }, {\n        name: 'Northamptonshire'\n      }, {\n        name: 'Northumberland'\n      }, {\n        name: 'Nottingham'\n      }, {\n        name: 'Nottinghamshire'\n      }, {\n        name: 'Oxfordshire'\n      }, {\n        name: 'Pembrokeshire'\n      }, {\n        name: 'Perth and Kinross'\n      }, {\n        name: 'Peterborough'\n      }, {\n        name: 'Plymouth'\n      }, {\n        name: 'Poole'\n      }, {\n        name: 'Portsmouth'\n      }, {\n        name: 'Powys'\n      }, {\n        name: 'Reading'\n      }, {\n        name: 'Redcar and Cleveland'\n      }, {\n        name: 'Rutland'\n      }, {\n        name: 'Scottish Borders'\n      }, {\n        name: 'Shropshire'\n      }, {\n        name: 'Slough'\n      }, {\n        name: 'Somerset'\n      }, {\n        name: 'South Glamorgan'\n      }, {\n        name: 'South Gloucestershire'\n      }, {\n        name: 'South Yorkshire'\n      }, {\n        name: 'Southampton'\n      }, {\n        name: 'Southend-on-Sea'\n      }, {\n        name: 'Staffordshire'\n      }, {\n        name: 'Stirlingshire'\n      }, {\n        name: 'Stockton-on-Tees'\n      }, {\n        name: 'Stoke-on-Trent'\n      }, {\n        name: 'Strathclyde'\n      }, {\n        name: 'Suffolk'\n      }, {\n        name: 'Surrey'\n      }, {\n        name: 'Swindon'\n      }, {\n        name: 'Telford and Wrekin'\n      }, {\n        name: 'Thurrock'\n      }, {\n        name: 'Torbay'\n      }, {\n        name: 'Tyne and Wear'\n      }, {\n        name: 'Warrington'\n      }, {\n        name: 'Warwickshire'\n      }, {\n        name: 'West Berkshire'\n      }, {\n        name: 'West Glamorgan'\n      }, {\n        name: 'West Lothian'\n      }, {\n        name: 'West Midlands'\n      }, {\n        name: 'West Sussex'\n      }, {\n        name: 'West Yorkshire'\n      }, {\n        name: 'Western Isles'\n      }, {\n        name: 'Wiltshire'\n      }, {\n        name: 'Windsor and Maidenhead'\n      }, {\n        name: 'Wokingham'\n      }, {\n        name: 'Worcestershire'\n      }, {\n        name: 'Wrexham'\n      }, {\n        name: 'York'\n      }]\n    },\n    provinces: {\n      \"ca\": [{\n        name: 'Alberta',\n        abbreviation: 'AB'\n      }, {\n        name: 'British Columbia',\n        abbreviation: 'BC'\n      }, {\n        name: 'Manitoba',\n        abbreviation: 'MB'\n      }, {\n        name: 'New Brunswick',\n        abbreviation: 'NB'\n      }, {\n        name: 'Newfoundland and Labrador',\n        abbreviation: 'NL'\n      }, {\n        name: 'Nova Scotia',\n        abbreviation: 'NS'\n      }, {\n        name: 'Ontario',\n        abbreviation: 'ON'\n      }, {\n        name: 'Prince Edward Island',\n        abbreviation: 'PE'\n      }, {\n        name: 'Quebec',\n        abbreviation: 'QC'\n      }, {\n        name: 'Saskatchewan',\n        abbreviation: 'SK'\n      }, // The case could be made that the following are not actually provinces\n      // since they are technically considered \"territories\" however they all\n      // look the same on an envelope!\n      {\n        name: 'Northwest Territories',\n        abbreviation: 'NT'\n      }, {\n        name: 'Nunavut',\n        abbreviation: 'NU'\n      }, {\n        name: 'Yukon',\n        abbreviation: 'YT'\n      }],\n      \"it\": [{\n        name: \"Agrigento\",\n        abbreviation: \"AG\",\n        code: 84\n      }, {\n        name: \"Alessandria\",\n        abbreviation: \"AL\",\n        code: 6\n      }, {\n        name: \"Ancona\",\n        abbreviation: \"AN\",\n        code: 42\n      }, {\n        name: \"Aosta\",\n        abbreviation: \"AO\",\n        code: 7\n      }, {\n        name: \"L'Aquila\",\n        abbreviation: \"AQ\",\n        code: 66\n      }, {\n        name: \"Arezzo\",\n        abbreviation: \"AR\",\n        code: 51\n      }, {\n        name: \"Ascoli-Piceno\",\n        abbreviation: \"AP\",\n        code: 44\n      }, {\n        name: \"Asti\",\n        abbreviation: \"AT\",\n        code: 5\n      }, {\n        name: \"Avellino\",\n        abbreviation: \"AV\",\n        code: 64\n      }, {\n        name: \"Bari\",\n        abbreviation: \"BA\",\n        code: 72\n      }, {\n        name: \"Barletta-Andria-Trani\",\n        abbreviation: \"BT\",\n        code: 72\n      }, {\n        name: \"Belluno\",\n        abbreviation: \"BL\",\n        code: 25\n      }, {\n        name: \"Benevento\",\n        abbreviation: \"BN\",\n        code: 62\n      }, {\n        name: \"Bergamo\",\n        abbreviation: \"BG\",\n        code: 16\n      }, {\n        name: \"Biella\",\n        abbreviation: \"BI\",\n        code: 96\n      }, {\n        name: \"Bologna\",\n        abbreviation: \"BO\",\n        code: 37\n      }, {\n        name: \"Bolzano\",\n        abbreviation: \"BZ\",\n        code: 21\n      }, {\n        name: \"Brescia\",\n        abbreviation: \"BS\",\n        code: 17\n      }, {\n        name: \"Brindisi\",\n        abbreviation: \"BR\",\n        code: 74\n      }, {\n        name: \"Cagliari\",\n        abbreviation: \"CA\",\n        code: 92\n      }, {\n        name: \"Caltanissetta\",\n        abbreviation: \"CL\",\n        code: 85\n      }, {\n        name: \"Campobasso\",\n        abbreviation: \"CB\",\n        code: 70\n      }, {\n        name: \"Carbonia Iglesias\",\n        abbreviation: \"CI\",\n        code: 70\n      }, {\n        name: \"Caserta\",\n        abbreviation: \"CE\",\n        code: 61\n      }, {\n        name: \"Catania\",\n        abbreviation: \"CT\",\n        code: 87\n      }, {\n        name: \"Catanzaro\",\n        abbreviation: \"CZ\",\n        code: 79\n      }, {\n        name: \"Chieti\",\n        abbreviation: \"CH\",\n        code: 69\n      }, {\n        name: \"Como\",\n        abbreviation: \"CO\",\n        code: 13\n      }, {\n        name: \"Cosenza\",\n        abbreviation: \"CS\",\n        code: 78\n      }, {\n        name: \"Cremona\",\n        abbreviation: \"CR\",\n        code: 19\n      }, {\n        name: \"Crotone\",\n        abbreviation: \"KR\",\n        code: 101\n      }, {\n        name: \"Cuneo\",\n        abbreviation: \"CN\",\n        code: 4\n      }, {\n        name: \"Enna\",\n        abbreviation: \"EN\",\n        code: 86\n      }, {\n        name: \"Fermo\",\n        abbreviation: \"FM\",\n        code: 86\n      }, {\n        name: \"Ferrara\",\n        abbreviation: \"FE\",\n        code: 38\n      }, {\n        name: \"Firenze\",\n        abbreviation: \"FI\",\n        code: 48\n      }, {\n        name: \"Foggia\",\n        abbreviation: \"FG\",\n        code: 71\n      }, {\n        name: \"Forli-Cesena\",\n        abbreviation: \"FC\",\n        code: 71\n      }, {\n        name: \"Frosinone\",\n        abbreviation: \"FR\",\n        code: 60\n      }, {\n        name: \"Genova\",\n        abbreviation: \"GE\",\n        code: 10\n      }, {\n        name: \"Gorizia\",\n        abbreviation: \"GO\",\n        code: 31\n      }, {\n        name: \"Grosseto\",\n        abbreviation: \"GR\",\n        code: 53\n      }, {\n        name: \"Imperia\",\n        abbreviation: \"IM\",\n        code: 8\n      }, {\n        name: \"Isernia\",\n        abbreviation: \"IS\",\n        code: 94\n      }, {\n        name: \"La-Spezia\",\n        abbreviation: \"SP\",\n        code: 66\n      }, {\n        name: \"Latina\",\n        abbreviation: \"LT\",\n        code: 59\n      }, {\n        name: \"Lecce\",\n        abbreviation: \"LE\",\n        code: 75\n      }, {\n        name: \"Lecco\",\n        abbreviation: \"LC\",\n        code: 97\n      }, {\n        name: \"Livorno\",\n        abbreviation: \"LI\",\n        code: 49\n      }, {\n        name: \"Lodi\",\n        abbreviation: \"LO\",\n        code: 98\n      }, {\n        name: \"Lucca\",\n        abbreviation: \"LU\",\n        code: 46\n      }, {\n        name: \"Macerata\",\n        abbreviation: \"MC\",\n        code: 43\n      }, {\n        name: \"Mantova\",\n        abbreviation: \"MN\",\n        code: 20\n      }, {\n        name: \"Massa-Carrara\",\n        abbreviation: \"MS\",\n        code: 45\n      }, {\n        name: \"Matera\",\n        abbreviation: \"MT\",\n        code: 77\n      }, {\n        name: \"Medio Campidano\",\n        abbreviation: \"VS\",\n        code: 77\n      }, {\n        name: \"Messina\",\n        abbreviation: \"ME\",\n        code: 83\n      }, {\n        name: \"Milano\",\n        abbreviation: \"MI\",\n        code: 15\n      }, {\n        name: \"Modena\",\n        abbreviation: \"MO\",\n        code: 36\n      }, {\n        name: \"Monza-Brianza\",\n        abbreviation: \"MB\",\n        code: 36\n      }, {\n        name: \"Napoli\",\n        abbreviation: \"NA\",\n        code: 63\n      }, {\n        name: \"Novara\",\n        abbreviation: \"NO\",\n        code: 3\n      }, {\n        name: \"Nuoro\",\n        abbreviation: \"NU\",\n        code: 91\n      }, {\n        name: \"Ogliastra\",\n        abbreviation: \"OG\",\n        code: 91\n      }, {\n        name: \"Olbia Tempio\",\n        abbreviation: \"OT\",\n        code: 91\n      }, {\n        name: \"Oristano\",\n        abbreviation: \"OR\",\n        code: 95\n      }, {\n        name: \"Padova\",\n        abbreviation: \"PD\",\n        code: 28\n      }, {\n        name: \"Palermo\",\n        abbreviation: \"PA\",\n        code: 82\n      }, {\n        name: \"Parma\",\n        abbreviation: \"PR\",\n        code: 34\n      }, {\n        name: \"Pavia\",\n        abbreviation: \"PV\",\n        code: 18\n      }, {\n        name: \"Perugia\",\n        abbreviation: \"PG\",\n        code: 54\n      }, {\n        name: \"Pesaro-Urbino\",\n        abbreviation: \"PU\",\n        code: 41\n      }, {\n        name: \"Pescara\",\n        abbreviation: \"PE\",\n        code: 68\n      }, {\n        name: \"Piacenza\",\n        abbreviation: \"PC\",\n        code: 33\n      }, {\n        name: \"Pisa\",\n        abbreviation: \"PI\",\n        code: 50\n      }, {\n        name: \"Pistoia\",\n        abbreviation: \"PT\",\n        code: 47\n      }, {\n        name: \"Pordenone\",\n        abbreviation: \"PN\",\n        code: 93\n      }, {\n        name: \"Potenza\",\n        abbreviation: \"PZ\",\n        code: 76\n      }, {\n        name: \"Prato\",\n        abbreviation: \"PO\",\n        code: 100\n      }, {\n        name: \"Ragusa\",\n        abbreviation: \"RG\",\n        code: 88\n      }, {\n        name: \"Ravenna\",\n        abbreviation: \"RA\",\n        code: 39\n      }, {\n        name: \"Reggio-Calabria\",\n        abbreviation: \"RC\",\n        code: 35\n      }, {\n        name: \"Reggio-Emilia\",\n        abbreviation: \"RE\",\n        code: 35\n      }, {\n        name: \"Rieti\",\n        abbreviation: \"RI\",\n        code: 57\n      }, {\n        name: \"Rimini\",\n        abbreviation: \"RN\",\n        code: 99\n      }, {\n        name: \"Roma\",\n        abbreviation: \"Roma\",\n        code: 58\n      }, {\n        name: \"Rovigo\",\n        abbreviation: \"RO\",\n        code: 29\n      }, {\n        name: \"Salerno\",\n        abbreviation: \"SA\",\n        code: 65\n      }, {\n        name: \"Sassari\",\n        abbreviation: \"SS\",\n        code: 90\n      }, {\n        name: \"Savona\",\n        abbreviation: \"SV\",\n        code: 9\n      }, {\n        name: \"Siena\",\n        abbreviation: \"SI\",\n        code: 52\n      }, {\n        name: \"Siracusa\",\n        abbreviation: \"SR\",\n        code: 89\n      }, {\n        name: \"Sondrio\",\n        abbreviation: \"SO\",\n        code: 14\n      }, {\n        name: \"Taranto\",\n        abbreviation: \"TA\",\n        code: 73\n      }, {\n        name: \"Teramo\",\n        abbreviation: \"TE\",\n        code: 67\n      }, {\n        name: \"Terni\",\n        abbreviation: \"TR\",\n        code: 55\n      }, {\n        name: \"Torino\",\n        abbreviation: \"TO\",\n        code: 1\n      }, {\n        name: \"Trapani\",\n        abbreviation: \"TP\",\n        code: 81\n      }, {\n        name: \"Trento\",\n        abbreviation: \"TN\",\n        code: 22\n      }, {\n        name: \"Treviso\",\n        abbreviation: \"TV\",\n        code: 26\n      }, {\n        name: \"Trieste\",\n        abbreviation: \"TS\",\n        code: 32\n      }, {\n        name: \"Udine\",\n        abbreviation: \"UD\",\n        code: 30\n      }, {\n        name: \"Varese\",\n        abbreviation: \"VA\",\n        code: 12\n      }, {\n        name: \"Venezia\",\n        abbreviation: \"VE\",\n        code: 27\n      }, {\n        name: \"Verbania\",\n        abbreviation: \"VB\",\n        code: 27\n      }, {\n        name: \"Vercelli\",\n        abbreviation: \"VC\",\n        code: 2\n      }, {\n        name: \"Verona\",\n        abbreviation: \"VR\",\n        code: 23\n      }, {\n        name: \"Vibo-Valentia\",\n        abbreviation: \"VV\",\n        code: 102\n      }, {\n        name: \"Vicenza\",\n        abbreviation: \"VI\",\n        code: 24\n      }, {\n        name: \"Viterbo\",\n        abbreviation: \"VT\",\n        code: 56\n      }]\n    },\n    // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n    nationalities: [{\n      name: 'Afghan'\n    }, {\n      name: 'Albanian'\n    }, {\n      name: 'Algerian'\n    }, {\n      name: 'American'\n    }, {\n      name: 'Andorran'\n    }, {\n      name: 'Angolan'\n    }, {\n      name: 'Antiguans'\n    }, {\n      name: 'Argentinean'\n    }, {\n      name: 'Armenian'\n    }, {\n      name: 'Australian'\n    }, {\n      name: 'Austrian'\n    }, {\n      name: 'Azerbaijani'\n    }, {\n      name: 'Bahami'\n    }, {\n      name: 'Bahraini'\n    }, {\n      name: 'Bangladeshi'\n    }, {\n      name: 'Barbadian'\n    }, {\n      name: 'Barbudans'\n    }, {\n      name: 'Batswana'\n    }, {\n      name: 'Belarusian'\n    }, {\n      name: 'Belgian'\n    }, {\n      name: 'Belizean'\n    }, {\n      name: 'Beninese'\n    }, {\n      name: 'Bhutanese'\n    }, {\n      name: 'Bolivian'\n    }, {\n      name: 'Bosnian'\n    }, {\n      name: 'Brazilian'\n    }, {\n      name: 'British'\n    }, {\n      name: 'Bruneian'\n    }, {\n      name: 'Bulgarian'\n    }, {\n      name: 'Burkinabe'\n    }, {\n      name: 'Burmese'\n    }, {\n      name: 'Burundian'\n    }, {\n      name: 'Cambodian'\n    }, {\n      name: 'Cameroonian'\n    }, {\n      name: 'Canadian'\n    }, {\n      name: 'Cape Verdean'\n    }, {\n      name: 'Central African'\n    }, {\n      name: 'Chadian'\n    }, {\n      name: 'Chilean'\n    }, {\n      name: 'Chinese'\n    }, {\n      name: 'Colombian'\n    }, {\n      name: 'Comoran'\n    }, {\n      name: 'Congolese'\n    }, {\n      name: 'Costa Rican'\n    }, {\n      name: 'Croatian'\n    }, {\n      name: 'Cuban'\n    }, {\n      name: 'Cypriot'\n    }, {\n      name: 'Czech'\n    }, {\n      name: 'Danish'\n    }, {\n      name: 'Djibouti'\n    }, {\n      name: 'Dominican'\n    }, {\n      name: 'Dutch'\n    }, {\n      name: 'East Timorese'\n    }, {\n      name: 'Ecuadorean'\n    }, {\n      name: 'Egyptian'\n    }, {\n      name: 'Emirian'\n    }, {\n      name: 'Equatorial Guinean'\n    }, {\n      name: 'Eritrean'\n    }, {\n      name: 'Estonian'\n    }, {\n      name: 'Ethiopian'\n    }, {\n      name: 'Fijian'\n    }, {\n      name: 'Filipino'\n    }, {\n      name: 'Finnish'\n    }, {\n      name: 'French'\n    }, {\n      name: 'Gabonese'\n    }, {\n      name: 'Gambian'\n    }, {\n      name: 'Georgian'\n    }, {\n      name: 'German'\n    }, {\n      name: 'Ghanaian'\n    }, {\n      name: 'Greek'\n    }, {\n      name: 'Grenadian'\n    }, {\n      name: 'Guatemalan'\n    }, {\n      name: 'Guinea-Bissauan'\n    }, {\n      name: 'Guinean'\n    }, {\n      name: 'Guyanese'\n    }, {\n      name: 'Haitian'\n    }, {\n      name: 'Herzegovinian'\n    }, {\n      name: 'Honduran'\n    }, {\n      name: 'Hungarian'\n    }, {\n      name: 'I-Kiribati'\n    }, {\n      name: 'Icelander'\n    }, {\n      name: 'Indian'\n    }, {\n      name: 'Indonesian'\n    }, {\n      name: 'Iranian'\n    }, {\n      name: 'Iraqi'\n    }, {\n      name: 'Irish'\n    }, {\n      name: 'Israeli'\n    }, {\n      name: 'Italian'\n    }, {\n      name: 'Ivorian'\n    }, {\n      name: 'Jamaican'\n    }, {\n      name: 'Japanese'\n    }, {\n      name: 'Jordanian'\n    }, {\n      name: 'Kazakhstani'\n    }, {\n      name: 'Kenyan'\n    }, {\n      name: 'Kittian and Nevisian'\n    }, {\n      name: 'Kuwaiti'\n    }, {\n      name: 'Kyrgyz'\n    }, {\n      name: 'Laotian'\n    }, {\n      name: 'Latvian'\n    }, {\n      name: 'Lebanese'\n    }, {\n      name: 'Liberian'\n    }, {\n      name: 'Libyan'\n    }, {\n      name: 'Liechtensteiner'\n    }, {\n      name: 'Lithuanian'\n    }, {\n      name: 'Luxembourger'\n    }, {\n      name: 'Macedonian'\n    }, {\n      name: 'Malagasy'\n    }, {\n      name: 'Malawian'\n    }, {\n      name: 'Malaysian'\n    }, {\n      name: 'Maldivan'\n    }, {\n      name: 'Malian'\n    }, {\n      name: 'Maltese'\n    }, {\n      name: 'Marshallese'\n    }, {\n      name: 'Mauritanian'\n    }, {\n      name: 'Mauritian'\n    }, {\n      name: 'Mexican'\n    }, {\n      name: 'Micronesian'\n    }, {\n      name: 'Moldovan'\n    }, {\n      name: 'Monacan'\n    }, {\n      name: 'Mongolian'\n    }, {\n      name: 'Moroccan'\n    }, {\n      name: 'Mosotho'\n    }, {\n      name: 'Motswana'\n    }, {\n      name: 'Mozambican'\n    }, {\n      name: 'Namibian'\n    }, {\n      name: 'Nauruan'\n    }, {\n      name: 'Nepalese'\n    }, {\n      name: 'New Zealander'\n    }, {\n      name: 'Nicaraguan'\n    }, {\n      name: 'Nigerian'\n    }, {\n      name: 'Nigerien'\n    }, {\n      name: 'North Korean'\n    }, {\n      name: 'Northern Irish'\n    }, {\n      name: 'Norwegian'\n    }, {\n      name: 'Omani'\n    }, {\n      name: 'Pakistani'\n    }, {\n      name: 'Palauan'\n    }, {\n      name: 'Panamanian'\n    }, {\n      name: 'Papua New Guinean'\n    }, {\n      name: 'Paraguayan'\n    }, {\n      name: 'Peruvian'\n    }, {\n      name: 'Polish'\n    }, {\n      name: 'Portuguese'\n    }, {\n      name: 'Qatari'\n    }, {\n      name: 'Romani'\n    }, {\n      name: 'Russian'\n    }, {\n      name: 'Rwandan'\n    }, {\n      name: 'Saint Lucian'\n    }, {\n      name: 'Salvadoran'\n    }, {\n      name: 'Samoan'\n    }, {\n      name: 'San Marinese'\n    }, {\n      name: 'Sao Tomean'\n    }, {\n      name: 'Saudi'\n    }, {\n      name: 'Scottish'\n    }, {\n      name: 'Senegalese'\n    }, {\n      name: 'Serbian'\n    }, {\n      name: 'Seychellois'\n    }, {\n      name: 'Sierra Leonean'\n    }, {\n      name: 'Singaporean'\n    }, {\n      name: 'Slovakian'\n    }, {\n      name: 'Slovenian'\n    }, {\n      name: 'Solomon Islander'\n    }, {\n      name: 'Somali'\n    }, {\n      name: 'South African'\n    }, {\n      name: 'South Korean'\n    }, {\n      name: 'Spanish'\n    }, {\n      name: 'Sri Lankan'\n    }, {\n      name: 'Sudanese'\n    }, {\n      name: 'Surinamer'\n    }, {\n      name: 'Swazi'\n    }, {\n      name: 'Swedish'\n    }, {\n      name: 'Swiss'\n    }, {\n      name: 'Syrian'\n    }, {\n      name: 'Taiwanese'\n    }, {\n      name: 'Tajik'\n    }, {\n      name: 'Tanzanian'\n    }, {\n      name: 'Thai'\n    }, {\n      name: 'Togolese'\n    }, {\n      name: 'Tongan'\n    }, {\n      name: 'Trinidadian or Tobagonian'\n    }, {\n      name: 'Tunisian'\n    }, {\n      name: 'Turkish'\n    }, {\n      name: 'Tuvaluan'\n    }, {\n      name: 'Ugandan'\n    }, {\n      name: 'Ukrainian'\n    }, {\n      name: 'Uruguaya'\n    }, {\n      name: 'Uzbekistani'\n    }, {\n      name: 'Venezuela'\n    }, {\n      name: 'Vietnamese'\n    }, {\n      name: 'Wels'\n    }, {\n      name: 'Yemenit'\n    }, {\n      name: 'Zambia'\n    }, {\n      name: 'Zimbabwe'\n    }],\n    // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)\n    locale_languages: [\"aa\", \"ab\", \"ae\", \"af\", \"ak\", \"am\", \"an\", \"ar\", \"as\", \"av\", \"ay\", \"az\", \"ba\", \"be\", \"bg\", \"bh\", \"bi\", \"bm\", \"bn\", \"bo\", \"br\", \"bs\", \"ca\", \"ce\", \"ch\", \"co\", \"cr\", \"cs\", \"cu\", \"cv\", \"cy\", \"da\", \"de\", \"dv\", \"dz\", \"ee\", \"el\", \"en\", \"eo\", \"es\", \"et\", \"eu\", \"fa\", \"ff\", \"fi\", \"fj\", \"fo\", \"fr\", \"fy\", \"ga\", \"gd\", \"gl\", \"gn\", \"gu\", \"gv\", \"ha\", \"he\", \"hi\", \"ho\", \"hr\", \"ht\", \"hu\", \"hy\", \"hz\", \"ia\", \"id\", \"ie\", \"ig\", \"ii\", \"ik\", \"io\", \"is\", \"it\", \"iu\", \"ja\", \"jv\", \"ka\", \"kg\", \"ki\", \"kj\", \"kk\", \"kl\", \"km\", \"kn\", \"ko\", \"kr\", \"ks\", \"ku\", \"kv\", \"kw\", \"ky\", \"la\", \"lb\", \"lg\", \"li\", \"ln\", \"lo\", \"lt\", \"lu\", \"lv\", \"mg\", \"mh\", \"mi\", \"mk\", \"ml\", \"mn\", \"mr\", \"ms\", \"mt\", \"my\", \"na\", \"nb\", \"nd\", \"ne\", \"ng\", \"nl\", \"nn\", \"no\", \"nr\", \"nv\", \"ny\", \"oc\", \"oj\", \"om\", \"or\", \"os\", \"pa\", \"pi\", \"pl\", \"ps\", \"pt\", \"qu\", \"rm\", \"rn\", \"ro\", \"ru\", \"rw\", \"sa\", \"sc\", \"sd\", \"se\", \"sg\", \"si\", \"sk\", \"sl\", \"sm\", \"sn\", \"so\", \"sq\", \"sr\", \"ss\", \"st\", \"su\", \"sv\", \"sw\", \"ta\", \"te\", \"tg\", \"th\", \"ti\", \"tk\", \"tl\", \"tn\", \"to\", \"tr\", \"ts\", \"tt\", \"tw\", \"ty\", \"ug\", \"uk\", \"ur\", \"uz\", \"ve\", \"vi\", \"vo\", \"wa\", \"wo\", \"xh\", \"yi\", \"yo\", \"za\", \"zh\", \"zu\"],\n    // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)\n    locale_regions: [\"agq-CM\", \"asa-TZ\", \"ast-ES\", \"bas-CM\", \"bem-ZM\", \"bez-TZ\", \"brx-IN\", \"cgg-UG\", \"chr-US\", \"dav-KE\", \"dje-NE\", \"dsb-DE\", \"dua-CM\", \"dyo-SN\", \"ebu-KE\", \"ewo-CM\", \"fil-PH\", \"fur-IT\", \"gsw-CH\", \"gsw-FR\", \"gsw-LI\", \"guz-KE\", \"haw-US\", \"hsb-DE\", \"jgo-CM\", \"jmc-TZ\", \"kab-DZ\", \"kam-KE\", \"kde-TZ\", \"kea-CV\", \"khq-ML\", \"kkj-CM\", \"kln-KE\", \"kok-IN\", \"ksb-TZ\", \"ksf-CM\", \"ksh-DE\", \"lag-TZ\", \"lkt-US\", \"luo-KE\", \"luy-KE\", \"mas-KE\", \"mas-TZ\", \"mer-KE\", \"mfe-MU\", \"mgh-MZ\", \"mgo-CM\", \"mua-CM\", \"naq-NA\", \"nmg-CM\", \"nnh-CM\", \"nus-SD\", \"nyn-UG\", \"rof-TZ\", \"rwk-TZ\", \"sah-RU\", \"saq-KE\", \"sbp-TZ\", \"seh-MZ\", \"ses-ML\", \"shi-Latn\", \"shi-Latn-MA\", \"shi-Tfng\", \"shi-Tfng-MA\", \"smn-FI\", \"teo-KE\", \"teo-UG\", \"twq-NE\", \"tzm-Latn\", \"tzm-Latn-MA\", \"vai-Latn\", \"vai-Latn-LR\", \"vai-Vaii\", \"vai-Vaii-LR\", \"vun-TZ\", \"wae-CH\", \"xog-UG\", \"yav-CM\", \"zgh-MA\", \"af-NA\", \"af-ZA\", \"ak-GH\", \"am-ET\", \"ar-001\", \"ar-AE\", \"ar-BH\", \"ar-DJ\", \"ar-DZ\", \"ar-EG\", \"ar-EH\", \"ar-ER\", \"ar-IL\", \"ar-IQ\", \"ar-JO\", \"ar-KM\", \"ar-KW\", \"ar-LB\", \"ar-LY\", \"ar-MA\", \"ar-MR\", \"ar-OM\", \"ar-PS\", \"ar-QA\", \"ar-SA\", \"ar-SD\", \"ar-SO\", \"ar-SS\", \"ar-SY\", \"ar-TD\", \"ar-TN\", \"ar-YE\", \"as-IN\", \"az-Cyrl\", \"az-Cyrl-AZ\", \"az-Latn\", \"az-Latn-AZ\", \"be-BY\", \"bg-BG\", \"bm-Latn\", \"bm-Latn-ML\", \"bn-BD\", \"bn-IN\", \"bo-CN\", \"bo-IN\", \"br-FR\", \"bs-Cyrl\", \"bs-Cyrl-BA\", \"bs-Latn\", \"bs-Latn-BA\", \"ca-AD\", \"ca-ES\", \"ca-ES-VALENCIA\", \"ca-FR\", \"ca-IT\", \"cs-CZ\", \"cy-GB\", \"da-DK\", \"da-GL\", \"de-AT\", \"de-BE\", \"de-CH\", \"de-DE\", \"de-LI\", \"de-LU\", \"dz-BT\", \"ee-GH\", \"ee-TG\", \"el-CY\", \"el-GR\", \"en-001\", \"en-150\", \"en-AG\", \"en-AI\", \"en-AS\", \"en-AU\", \"en-BB\", \"en-BE\", \"en-BM\", \"en-BS\", \"en-BW\", \"en-BZ\", \"en-CA\", \"en-CC\", \"en-CK\", \"en-CM\", \"en-CX\", \"en-DG\", \"en-DM\", \"en-ER\", \"en-FJ\", \"en-FK\", \"en-FM\", \"en-GB\", \"en-GD\", \"en-GG\", \"en-GH\", \"en-GI\", \"en-GM\", \"en-GU\", \"en-GY\", \"en-HK\", \"en-IE\", \"en-IM\", \"en-IN\", \"en-IO\", \"en-JE\", \"en-JM\", \"en-KE\", \"en-KI\", \"en-KN\", \"en-KY\", \"en-LC\", \"en-LR\", \"en-LS\", \"en-MG\", \"en-MH\", \"en-MO\", \"en-MP\", \"en-MS\", \"en-MT\", \"en-MU\", \"en-MW\", \"en-MY\", \"en-NA\", \"en-NF\", \"en-NG\", \"en-NR\", \"en-NU\", \"en-NZ\", \"en-PG\", \"en-PH\", \"en-PK\", \"en-PN\", \"en-PR\", \"en-PW\", \"en-RW\", \"en-SB\", \"en-SC\", \"en-SD\", \"en-SG\", \"en-SH\", \"en-SL\", \"en-SS\", \"en-SX\", \"en-SZ\", \"en-TC\", \"en-TK\", \"en-TO\", \"en-TT\", \"en-TV\", \"en-TZ\", \"en-UG\", \"en-UM\", \"en-US\", \"en-US-POSIX\", \"en-VC\", \"en-VG\", \"en-VI\", \"en-VU\", \"en-WS\", \"en-ZA\", \"en-ZM\", \"en-ZW\", \"eo-001\", \"es-419\", \"es-AR\", \"es-BO\", \"es-CL\", \"es-CO\", \"es-CR\", \"es-CU\", \"es-DO\", \"es-EA\", \"es-EC\", \"es-ES\", \"es-GQ\", \"es-GT\", \"es-HN\", \"es-IC\", \"es-MX\", \"es-NI\", \"es-PA\", \"es-PE\", \"es-PH\", \"es-PR\", \"es-PY\", \"es-SV\", \"es-US\", \"es-UY\", \"es-VE\", \"et-EE\", \"eu-ES\", \"fa-AF\", \"fa-IR\", \"ff-CM\", \"ff-GN\", \"ff-MR\", \"ff-SN\", \"fi-FI\", \"fo-FO\", \"fr-BE\", \"fr-BF\", \"fr-BI\", \"fr-BJ\", \"fr-BL\", \"fr-CA\", \"fr-CD\", \"fr-CF\", \"fr-CG\", \"fr-CH\", \"fr-CI\", \"fr-CM\", \"fr-DJ\", \"fr-DZ\", \"fr-FR\", \"fr-GA\", \"fr-GF\", \"fr-GN\", \"fr-GP\", \"fr-GQ\", \"fr-HT\", \"fr-KM\", \"fr-LU\", \"fr-MA\", \"fr-MC\", \"fr-MF\", \"fr-MG\", \"fr-ML\", \"fr-MQ\", \"fr-MR\", \"fr-MU\", \"fr-NC\", \"fr-NE\", \"fr-PF\", \"fr-PM\", \"fr-RE\", \"fr-RW\", \"fr-SC\", \"fr-SN\", \"fr-SY\", \"fr-TD\", \"fr-TG\", \"fr-TN\", \"fr-VU\", \"fr-WF\", \"fr-YT\", \"fy-NL\", \"ga-IE\", \"gd-GB\", \"gl-ES\", \"gu-IN\", \"gv-IM\", \"ha-Latn\", \"ha-Latn-GH\", \"ha-Latn-NE\", \"ha-Latn-NG\", \"he-IL\", \"hi-IN\", \"hr-BA\", \"hr-HR\", \"hu-HU\", \"hy-AM\", \"id-ID\", \"ig-NG\", \"ii-CN\", \"is-IS\", \"it-CH\", \"it-IT\", \"it-SM\", \"ja-JP\", \"ka-GE\", \"ki-KE\", \"kk-Cyrl\", \"kk-Cyrl-KZ\", \"kl-GL\", \"km-KH\", \"kn-IN\", \"ko-KP\", \"ko-KR\", \"ks-Arab\", \"ks-Arab-IN\", \"kw-GB\", \"ky-Cyrl\", \"ky-Cyrl-KG\", \"lb-LU\", \"lg-UG\", \"ln-AO\", \"ln-CD\", \"ln-CF\", \"ln-CG\", \"lo-LA\", \"lt-LT\", \"lu-CD\", \"lv-LV\", \"mg-MG\", \"mk-MK\", \"ml-IN\", \"mn-Cyrl\", \"mn-Cyrl-MN\", \"mr-IN\", \"ms-Latn\", \"ms-Latn-BN\", \"ms-Latn-MY\", \"ms-Latn-SG\", \"mt-MT\", \"my-MM\", \"nb-NO\", \"nb-SJ\", \"nd-ZW\", \"ne-IN\", \"ne-NP\", \"nl-AW\", \"nl-BE\", \"nl-BQ\", \"nl-CW\", \"nl-NL\", \"nl-SR\", \"nl-SX\", \"nn-NO\", \"om-ET\", \"om-KE\", \"or-IN\", \"os-GE\", \"os-RU\", \"pa-Arab\", \"pa-Arab-PK\", \"pa-Guru\", \"pa-Guru-IN\", \"pl-PL\", \"ps-AF\", \"pt-AO\", \"pt-BR\", \"pt-CV\", \"pt-GW\", \"pt-MO\", \"pt-MZ\", \"pt-PT\", \"pt-ST\", \"pt-TL\", \"qu-BO\", \"qu-EC\", \"qu-PE\", \"rm-CH\", \"rn-BI\", \"ro-MD\", \"ro-RO\", \"ru-BY\", \"ru-KG\", \"ru-KZ\", \"ru-MD\", \"ru-RU\", \"ru-UA\", \"rw-RW\", \"se-FI\", \"se-NO\", \"se-SE\", \"sg-CF\", \"si-LK\", \"sk-SK\", \"sl-SI\", \"sn-ZW\", \"so-DJ\", \"so-ET\", \"so-KE\", \"so-SO\", \"sq-AL\", \"sq-MK\", \"sq-XK\", \"sr-Cyrl\", \"sr-Cyrl-BA\", \"sr-Cyrl-ME\", \"sr-Cyrl-RS\", \"sr-Cyrl-XK\", \"sr-Latn\", \"sr-Latn-BA\", \"sr-Latn-ME\", \"sr-Latn-RS\", \"sr-Latn-XK\", \"sv-AX\", \"sv-FI\", \"sv-SE\", \"sw-CD\", \"sw-KE\", \"sw-TZ\", \"sw-UG\", \"ta-IN\", \"ta-LK\", \"ta-MY\", \"ta-SG\", \"te-IN\", \"th-TH\", \"ti-ER\", \"ti-ET\", \"to-TO\", \"tr-CY\", \"tr-TR\", \"ug-Arab\", \"ug-Arab-CN\", \"uk-UA\", \"ur-IN\", \"ur-PK\", \"uz-Arab\", \"uz-Arab-AF\", \"uz-Cyrl\", \"uz-Cyrl-UZ\", \"uz-Latn\", \"uz-Latn-UZ\", \"vi-VN\", \"yi-001\", \"yo-BJ\", \"yo-NG\", \"zh-Hans\", \"zh-Hans-CN\", \"zh-Hans-HK\", \"zh-Hans-MO\", \"zh-Hans-SG\", \"zh-Hant\", \"zh-Hant-HK\", \"zh-Hant-MO\", \"zh-Hant-TW\", \"zu-ZA\"],\n    us_states_and_dc: [{\n      name: 'Alabama',\n      abbreviation: 'AL'\n    }, {\n      name: 'Alaska',\n      abbreviation: 'AK'\n    }, {\n      name: 'Arizona',\n      abbreviation: 'AZ'\n    }, {\n      name: 'Arkansas',\n      abbreviation: 'AR'\n    }, {\n      name: 'California',\n      abbreviation: 'CA'\n    }, {\n      name: 'Colorado',\n      abbreviation: 'CO'\n    }, {\n      name: 'Connecticut',\n      abbreviation: 'CT'\n    }, {\n      name: 'Delaware',\n      abbreviation: 'DE'\n    }, {\n      name: 'District of Columbia',\n      abbreviation: 'DC'\n    }, {\n      name: 'Florida',\n      abbreviation: 'FL'\n    }, {\n      name: 'Georgia',\n      abbreviation: 'GA'\n    }, {\n      name: 'Hawaii',\n      abbreviation: 'HI'\n    }, {\n      name: 'Idaho',\n      abbreviation: 'ID'\n    }, {\n      name: 'Illinois',\n      abbreviation: 'IL'\n    }, {\n      name: 'Indiana',\n      abbreviation: 'IN'\n    }, {\n      name: 'Iowa',\n      abbreviation: 'IA'\n    }, {\n      name: 'Kansas',\n      abbreviation: 'KS'\n    }, {\n      name: 'Kentucky',\n      abbreviation: 'KY'\n    }, {\n      name: 'Louisiana',\n      abbreviation: 'LA'\n    }, {\n      name: 'Maine',\n      abbreviation: 'ME'\n    }, {\n      name: 'Maryland',\n      abbreviation: 'MD'\n    }, {\n      name: 'Massachusetts',\n      abbreviation: 'MA'\n    }, {\n      name: 'Michigan',\n      abbreviation: 'MI'\n    }, {\n      name: 'Minnesota',\n      abbreviation: 'MN'\n    }, {\n      name: 'Mississippi',\n      abbreviation: 'MS'\n    }, {\n      name: 'Missouri',\n      abbreviation: 'MO'\n    }, {\n      name: 'Montana',\n      abbreviation: 'MT'\n    }, {\n      name: 'Nebraska',\n      abbreviation: 'NE'\n    }, {\n      name: 'Nevada',\n      abbreviation: 'NV'\n    }, {\n      name: 'New Hampshire',\n      abbreviation: 'NH'\n    }, {\n      name: 'New Jersey',\n      abbreviation: 'NJ'\n    }, {\n      name: 'New Mexico',\n      abbreviation: 'NM'\n    }, {\n      name: 'New York',\n      abbreviation: 'NY'\n    }, {\n      name: 'North Carolina',\n      abbreviation: 'NC'\n    }, {\n      name: 'North Dakota',\n      abbreviation: 'ND'\n    }, {\n      name: 'Ohio',\n      abbreviation: 'OH'\n    }, {\n      name: 'Oklahoma',\n      abbreviation: 'OK'\n    }, {\n      name: 'Oregon',\n      abbreviation: 'OR'\n    }, {\n      name: 'Pennsylvania',\n      abbreviation: 'PA'\n    }, {\n      name: 'Rhode Island',\n      abbreviation: 'RI'\n    }, {\n      name: 'South Carolina',\n      abbreviation: 'SC'\n    }, {\n      name: 'South Dakota',\n      abbreviation: 'SD'\n    }, {\n      name: 'Tennessee',\n      abbreviation: 'TN'\n    }, {\n      name: 'Texas',\n      abbreviation: 'TX'\n    }, {\n      name: 'Utah',\n      abbreviation: 'UT'\n    }, {\n      name: 'Vermont',\n      abbreviation: 'VT'\n    }, {\n      name: 'Virginia',\n      abbreviation: 'VA'\n    }, {\n      name: 'Washington',\n      abbreviation: 'WA'\n    }, {\n      name: 'West Virginia',\n      abbreviation: 'WV'\n    }, {\n      name: 'Wisconsin',\n      abbreviation: 'WI'\n    }, {\n      name: 'Wyoming',\n      abbreviation: 'WY'\n    }],\n    territories: [{\n      name: 'American Samoa',\n      abbreviation: 'AS'\n    }, {\n      name: 'Federated States of Micronesia',\n      abbreviation: 'FM'\n    }, {\n      name: 'Guam',\n      abbreviation: 'GU'\n    }, {\n      name: 'Marshall Islands',\n      abbreviation: 'MH'\n    }, {\n      name: 'Northern Mariana Islands',\n      abbreviation: 'MP'\n    }, {\n      name: 'Puerto Rico',\n      abbreviation: 'PR'\n    }, {\n      name: 'Virgin Islands, U.S.',\n      abbreviation: 'VI'\n    }],\n    armed_forces: [{\n      name: 'Armed Forces Europe',\n      abbreviation: 'AE'\n    }, {\n      name: 'Armed Forces Pacific',\n      abbreviation: 'AP'\n    }, {\n      name: 'Armed Forces the Americas',\n      abbreviation: 'AA'\n    }],\n    country_regions: {\n      it: [{\n        name: \"Valle d'Aosta\",\n        abbreviation: \"VDA\"\n      }, {\n        name: \"Piemonte\",\n        abbreviation: \"PIE\"\n      }, {\n        name: \"Lombardia\",\n        abbreviation: \"LOM\"\n      }, {\n        name: \"Veneto\",\n        abbreviation: \"VEN\"\n      }, {\n        name: \"Trentino Alto Adige\",\n        abbreviation: \"TAA\"\n      }, {\n        name: \"Friuli Venezia Giulia\",\n        abbreviation: \"FVG\"\n      }, {\n        name: \"Liguria\",\n        abbreviation: \"LIG\"\n      }, {\n        name: \"Emilia Romagna\",\n        abbreviation: \"EMR\"\n      }, {\n        name: \"Toscana\",\n        abbreviation: \"TOS\"\n      }, {\n        name: \"Umbria\",\n        abbreviation: \"UMB\"\n      }, {\n        name: \"Marche\",\n        abbreviation: \"MAR\"\n      }, {\n        name: \"Abruzzo\",\n        abbreviation: \"ABR\"\n      }, {\n        name: \"Lazio\",\n        abbreviation: \"LAZ\"\n      }, {\n        name: \"Campania\",\n        abbreviation: \"CAM\"\n      }, {\n        name: \"Puglia\",\n        abbreviation: \"PUG\"\n      }, {\n        name: \"Basilicata\",\n        abbreviation: \"BAS\"\n      }, {\n        name: \"Molise\",\n        abbreviation: \"MOL\"\n      }, {\n        name: \"Calabria\",\n        abbreviation: \"CAL\"\n      }, {\n        name: \"Sicilia\",\n        abbreviation: \"SIC\"\n      }, {\n        name: \"Sardegna\",\n        abbreviation: \"SAR\"\n      }]\n    },\n    street_suffixes: {\n      'us': [{\n        name: 'Avenue',\n        abbreviation: 'Ave'\n      }, {\n        name: 'Boulevard',\n        abbreviation: 'Blvd'\n      }, {\n        name: 'Center',\n        abbreviation: 'Ctr'\n      }, {\n        name: 'Circle',\n        abbreviation: 'Cir'\n      }, {\n        name: 'Court',\n        abbreviation: 'Ct'\n      }, {\n        name: 'Drive',\n        abbreviation: 'Dr'\n      }, {\n        name: 'Extension',\n        abbreviation: 'Ext'\n      }, {\n        name: 'Glen',\n        abbreviation: 'Gln'\n      }, {\n        name: 'Grove',\n        abbreviation: 'Grv'\n      }, {\n        name: 'Heights',\n        abbreviation: 'Hts'\n      }, {\n        name: 'Highway',\n        abbreviation: 'Hwy'\n      }, {\n        name: 'Junction',\n        abbreviation: 'Jct'\n      }, {\n        name: 'Key',\n        abbreviation: 'Key'\n      }, {\n        name: 'Lane',\n        abbreviation: 'Ln'\n      }, {\n        name: 'Loop',\n        abbreviation: 'Loop'\n      }, {\n        name: 'Manor',\n        abbreviation: 'Mnr'\n      }, {\n        name: 'Mill',\n        abbreviation: 'Mill'\n      }, {\n        name: 'Park',\n        abbreviation: 'Park'\n      }, {\n        name: 'Parkway',\n        abbreviation: 'Pkwy'\n      }, {\n        name: 'Pass',\n        abbreviation: 'Pass'\n      }, {\n        name: 'Path',\n        abbreviation: 'Path'\n      }, {\n        name: 'Pike',\n        abbreviation: 'Pike'\n      }, {\n        name: 'Place',\n        abbreviation: 'Pl'\n      }, {\n        name: 'Plaza',\n        abbreviation: 'Plz'\n      }, {\n        name: 'Point',\n        abbreviation: 'Pt'\n      }, {\n        name: 'Ridge',\n        abbreviation: 'Rdg'\n      }, {\n        name: 'River',\n        abbreviation: 'Riv'\n      }, {\n        name: 'Road',\n        abbreviation: 'Rd'\n      }, {\n        name: 'Square',\n        abbreviation: 'Sq'\n      }, {\n        name: 'Street',\n        abbreviation: 'St'\n      }, {\n        name: 'Terrace',\n        abbreviation: 'Ter'\n      }, {\n        name: 'Trail',\n        abbreviation: 'Trl'\n      }, {\n        name: 'Turnpike',\n        abbreviation: 'Tpke'\n      }, {\n        name: 'View',\n        abbreviation: 'Vw'\n      }, {\n        name: 'Way',\n        abbreviation: 'Way'\n      }],\n      'it': [{\n        name: 'Accesso',\n        abbreviation: 'Acc.'\n      }, {\n        name: 'Alzaia',\n        abbreviation: 'Alz.'\n      }, {\n        name: 'Arco',\n        abbreviation: 'Arco'\n      }, {\n        name: 'Archivolto',\n        abbreviation: 'Acv.'\n      }, {\n        name: 'Arena',\n        abbreviation: 'Arena'\n      }, {\n        name: 'Argine',\n        abbreviation: 'Argine'\n      }, {\n        name: 'Bacino',\n        abbreviation: 'Bacino'\n      }, {\n        name: 'Banchi',\n        abbreviation: 'Banchi'\n      }, {\n        name: 'Banchina',\n        abbreviation: 'Ban.'\n      }, {\n        name: 'Bastioni',\n        abbreviation: 'Bas.'\n      }, {\n        name: 'Belvedere',\n        abbreviation: 'Belv.'\n      }, {\n        name: 'Borgata',\n        abbreviation: 'B.ta'\n      }, {\n        name: 'Borgo',\n        abbreviation: 'B.go'\n      }, {\n        name: 'Calata',\n        abbreviation: 'Cal.'\n      }, {\n        name: 'Calle',\n        abbreviation: 'Calle'\n      }, {\n        name: 'Campiello',\n        abbreviation: 'Cam.'\n      }, {\n        name: 'Campo',\n        abbreviation: 'Cam.'\n      }, {\n        name: 'Canale',\n        abbreviation: 'Can.'\n      }, {\n        name: 'Carraia',\n        abbreviation: 'Carr.'\n      }, {\n        name: 'Cascina',\n        abbreviation: 'Cascina'\n      }, {\n        name: 'Case sparse',\n        abbreviation: 'c.s.'\n      }, {\n        name: 'Cavalcavia',\n        abbreviation: 'Cv.'\n      }, {\n        name: 'Circonvallazione',\n        abbreviation: 'Cv.'\n      }, {\n        name: 'Complanare',\n        abbreviation: 'C.re'\n      }, {\n        name: 'Contrada',\n        abbreviation: 'C.da'\n      }, {\n        name: 'Corso',\n        abbreviation: 'C.so'\n      }, {\n        name: 'Corte',\n        abbreviation: 'C.te'\n      }, {\n        name: 'Cortile',\n        abbreviation: 'C.le'\n      }, {\n        name: 'Diramazione',\n        abbreviation: 'Dir.'\n      }, {\n        name: 'Fondaco',\n        abbreviation: 'F.co'\n      }, {\n        name: 'Fondamenta',\n        abbreviation: 'F.ta'\n      }, {\n        name: 'Fondo',\n        abbreviation: 'F.do'\n      }, {\n        name: 'Frazione',\n        abbreviation: 'Fr.'\n      }, {\n        name: 'Isola',\n        abbreviation: 'Is.'\n      }, {\n        name: 'Largo',\n        abbreviation: 'L.go'\n      }, {\n        name: 'Litoranea',\n        abbreviation: 'Lit.'\n      }, {\n        name: 'Lungolago',\n        abbreviation: 'L.go lago'\n      }, {\n        name: 'Lungo Po',\n        abbreviation: 'l.go Po'\n      }, {\n        name: 'Molo',\n        abbreviation: 'Molo'\n      }, {\n        name: 'Mura',\n        abbreviation: 'Mura'\n      }, {\n        name: 'Passaggio privato',\n        abbreviation: 'pass. priv.'\n      }, {\n        name: 'Passeggiata',\n        abbreviation: 'Pass.'\n      }, {\n        name: 'Piazza',\n        abbreviation: 'P.zza'\n      }, {\n        name: 'Piazzale',\n        abbreviation: 'P.le'\n      }, {\n        name: 'Ponte',\n        abbreviation: 'P.te'\n      }, {\n        name: 'Portico',\n        abbreviation: 'P.co'\n      }, {\n        name: 'Rampa',\n        abbreviation: 'Rampa'\n      }, {\n        name: 'Regione',\n        abbreviation: 'Reg.'\n      }, {\n        name: 'Rione',\n        abbreviation: 'R.ne'\n      }, {\n        name: 'Rio',\n        abbreviation: 'Rio'\n      }, {\n        name: 'Ripa',\n        abbreviation: 'Ripa'\n      }, {\n        name: 'Riva',\n        abbreviation: 'Riva'\n      }, {\n        name: 'Rondò',\n        abbreviation: 'Rondò'\n      }, {\n        name: 'Rotonda',\n        abbreviation: 'Rot.'\n      }, {\n        name: 'Sagrato',\n        abbreviation: 'Sagr.'\n      }, {\n        name: 'Salita',\n        abbreviation: 'Sal.'\n      }, {\n        name: 'Scalinata',\n        abbreviation: 'Scal.'\n      }, {\n        name: 'Scalone',\n        abbreviation: 'Scal.'\n      }, {\n        name: 'Slargo',\n        abbreviation: 'Sl.'\n      }, {\n        name: 'Sottoportico',\n        abbreviation: 'Sott.'\n      }, {\n        name: 'Strada',\n        abbreviation: 'Str.'\n      }, {\n        name: 'Stradale',\n        abbreviation: 'Str.le'\n      }, {\n        name: 'Strettoia',\n        abbreviation: 'Strett.'\n      }, {\n        name: 'Traversa',\n        abbreviation: 'Trav.'\n      }, {\n        name: 'Via',\n        abbreviation: 'V.'\n      }, {\n        name: 'Viale',\n        abbreviation: 'V.le'\n      }, {\n        name: 'Vicinale',\n        abbreviation: 'Vic.le'\n      }, {\n        name: 'Vicolo',\n        abbreviation: 'Vic.'\n      }],\n      'uk': [{\n        name: 'Avenue',\n        abbreviation: 'Ave'\n      }, {\n        name: 'Close',\n        abbreviation: 'Cl'\n      }, {\n        name: 'Court',\n        abbreviation: 'Ct'\n      }, {\n        name: 'Crescent',\n        abbreviation: 'Cr'\n      }, {\n        name: 'Drive',\n        abbreviation: 'Dr'\n      }, {\n        name: 'Garden',\n        abbreviation: 'Gdn'\n      }, {\n        name: 'Gardens',\n        abbreviation: 'Gdns'\n      }, {\n        name: 'Green',\n        abbreviation: 'Gn'\n      }, {\n        name: 'Grove',\n        abbreviation: 'Gr'\n      }, {\n        name: 'Lane',\n        abbreviation: 'Ln'\n      }, {\n        name: 'Mount',\n        abbreviation: 'Mt'\n      }, {\n        name: 'Place',\n        abbreviation: 'Pl'\n      }, {\n        name: 'Park',\n        abbreviation: 'Pk'\n      }, {\n        name: 'Ridge',\n        abbreviation: 'Rdg'\n      }, {\n        name: 'Road',\n        abbreviation: 'Rd'\n      }, {\n        name: 'Square',\n        abbreviation: 'Sq'\n      }, {\n        name: 'Street',\n        abbreviation: 'St'\n      }, {\n        name: 'Terrace',\n        abbreviation: 'Ter'\n      }, {\n        name: 'Valley',\n        abbreviation: 'Val'\n      }]\n    },\n    months: [{\n      name: 'January',\n      short_name: 'Jan',\n      numeric: '01',\n      days: 31\n    }, // Not messing with leap years...\n    {\n      name: 'February',\n      short_name: 'Feb',\n      numeric: '02',\n      days: 28\n    }, {\n      name: 'March',\n      short_name: 'Mar',\n      numeric: '03',\n      days: 31\n    }, {\n      name: 'April',\n      short_name: 'Apr',\n      numeric: '04',\n      days: 30\n    }, {\n      name: 'May',\n      short_name: 'May',\n      numeric: '05',\n      days: 31\n    }, {\n      name: 'June',\n      short_name: 'Jun',\n      numeric: '06',\n      days: 30\n    }, {\n      name: 'July',\n      short_name: 'Jul',\n      numeric: '07',\n      days: 31\n    }, {\n      name: 'August',\n      short_name: 'Aug',\n      numeric: '08',\n      days: 31\n    }, {\n      name: 'September',\n      short_name: 'Sep',\n      numeric: '09',\n      days: 30\n    }, {\n      name: 'October',\n      short_name: 'Oct',\n      numeric: '10',\n      days: 31\n    }, {\n      name: 'November',\n      short_name: 'Nov',\n      numeric: '11',\n      days: 30\n    }, {\n      name: 'December',\n      short_name: 'Dec',\n      numeric: '12',\n      days: 31\n    }],\n    // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n    cc_types: [{\n      name: \"American Express\",\n      short_name: 'amex',\n      prefix: '34',\n      length: 15\n    }, {\n      name: \"Bankcard\",\n      short_name: 'bankcard',\n      prefix: '5610',\n      length: 16\n    }, {\n      name: \"China UnionPay\",\n      short_name: 'chinaunion',\n      prefix: '62',\n      length: 16\n    }, {\n      name: \"Diners Club Carte Blanche\",\n      short_name: 'dccarte',\n      prefix: '300',\n      length: 14\n    }, {\n      name: \"Diners Club enRoute\",\n      short_name: 'dcenroute',\n      prefix: '2014',\n      length: 15\n    }, {\n      name: \"Diners Club International\",\n      short_name: 'dcintl',\n      prefix: '36',\n      length: 14\n    }, {\n      name: \"Diners Club United States & Canada\",\n      short_name: 'dcusc',\n      prefix: '54',\n      length: 16\n    }, {\n      name: \"Discover Card\",\n      short_name: 'discover',\n      prefix: '6011',\n      length: 16\n    }, {\n      name: \"InstaPayment\",\n      short_name: 'instapay',\n      prefix: '637',\n      length: 16\n    }, {\n      name: \"JCB\",\n      short_name: 'jcb',\n      prefix: '3528',\n      length: 16\n    }, {\n      name: \"Laser\",\n      short_name: 'laser',\n      prefix: '6304',\n      length: 16\n    }, {\n      name: \"Maestro\",\n      short_name: 'maestro',\n      prefix: '5018',\n      length: 16\n    }, {\n      name: \"Mastercard\",\n      short_name: 'mc',\n      prefix: '51',\n      length: 16\n    }, {\n      name: \"Solo\",\n      short_name: 'solo',\n      prefix: '6334',\n      length: 16\n    }, {\n      name: \"Switch\",\n      short_name: 'switch',\n      prefix: '4903',\n      length: 16\n    }, {\n      name: \"Visa\",\n      short_name: 'visa',\n      prefix: '4',\n      length: 16\n    }, {\n      name: \"Visa Electron\",\n      short_name: 'electron',\n      prefix: '4026',\n      length: 16\n    }],\n    //return all world currency by ISO 4217\n    currency_types: [{\n      'code': 'AED',\n      'name': 'United Arab Emirates Dirham'\n    }, {\n      'code': 'AFN',\n      'name': 'Afghanistan Afghani'\n    }, {\n      'code': 'ALL',\n      'name': 'Albania Lek'\n    }, {\n      'code': 'AMD',\n      'name': 'Armenia Dram'\n    }, {\n      'code': 'ANG',\n      'name': 'Netherlands Antilles Guilder'\n    }, {\n      'code': 'AOA',\n      'name': 'Angola Kwanza'\n    }, {\n      'code': 'ARS',\n      'name': 'Argentina Peso'\n    }, {\n      'code': 'AUD',\n      'name': 'Australia Dollar'\n    }, {\n      'code': 'AWG',\n      'name': 'Aruba Guilder'\n    }, {\n      'code': 'AZN',\n      'name': 'Azerbaijan New Manat'\n    }, {\n      'code': 'BAM',\n      'name': 'Bosnia and Herzegovina Convertible Marka'\n    }, {\n      'code': 'BBD',\n      'name': 'Barbados Dollar'\n    }, {\n      'code': 'BDT',\n      'name': 'Bangladesh Taka'\n    }, {\n      'code': 'BGN',\n      'name': 'Bulgaria Lev'\n    }, {\n      'code': 'BHD',\n      'name': 'Bahrain Dinar'\n    }, {\n      'code': 'BIF',\n      'name': 'Burundi Franc'\n    }, {\n      'code': 'BMD',\n      'name': 'Bermuda Dollar'\n    }, {\n      'code': 'BND',\n      'name': 'Brunei Darussalam Dollar'\n    }, {\n      'code': 'BOB',\n      'name': 'Bolivia Boliviano'\n    }, {\n      'code': 'BRL',\n      'name': 'Brazil Real'\n    }, {\n      'code': 'BSD',\n      'name': 'Bahamas Dollar'\n    }, {\n      'code': 'BTN',\n      'name': 'Bhutan Ngultrum'\n    }, {\n      'code': 'BWP',\n      'name': 'Botswana Pula'\n    }, {\n      'code': 'BYR',\n      'name': 'Belarus Ruble'\n    }, {\n      'code': 'BZD',\n      'name': 'Belize Dollar'\n    }, {\n      'code': 'CAD',\n      'name': 'Canada Dollar'\n    }, {\n      'code': 'CDF',\n      'name': 'Congo/Kinshasa Franc'\n    }, {\n      'code': 'CHF',\n      'name': 'Switzerland Franc'\n    }, {\n      'code': 'CLP',\n      'name': 'Chile Peso'\n    }, {\n      'code': 'CNY',\n      'name': 'China Yuan Renminbi'\n    }, {\n      'code': 'COP',\n      'name': 'Colombia Peso'\n    }, {\n      'code': 'CRC',\n      'name': 'Costa Rica Colon'\n    }, {\n      'code': 'CUC',\n      'name': 'Cuba Convertible Peso'\n    }, {\n      'code': 'CUP',\n      'name': 'Cuba Peso'\n    }, {\n      'code': 'CVE',\n      'name': 'Cape Verde Escudo'\n    }, {\n      'code': 'CZK',\n      'name': 'Czech Republic Koruna'\n    }, {\n      'code': 'DJF',\n      'name': 'Djibouti Franc'\n    }, {\n      'code': 'DKK',\n      'name': 'Denmark Krone'\n    }, {\n      'code': 'DOP',\n      'name': 'Dominican Republic Peso'\n    }, {\n      'code': 'DZD',\n      'name': 'Algeria Dinar'\n    }, {\n      'code': 'EGP',\n      'name': 'Egypt Pound'\n    }, {\n      'code': 'ERN',\n      'name': 'Eritrea Nakfa'\n    }, {\n      'code': 'ETB',\n      'name': 'Ethiopia Birr'\n    }, {\n      'code': 'EUR',\n      'name': 'Euro Member Countries'\n    }, {\n      'code': 'FJD',\n      'name': 'Fiji Dollar'\n    }, {\n      'code': 'FKP',\n      'name': 'Falkland Islands (Malvinas) Pound'\n    }, {\n      'code': 'GBP',\n      'name': 'United Kingdom Pound'\n    }, {\n      'code': 'GEL',\n      'name': 'Georgia Lari'\n    }, {\n      'code': 'GGP',\n      'name': 'Guernsey Pound'\n    }, {\n      'code': 'GHS',\n      'name': 'Ghana Cedi'\n    }, {\n      'code': 'GIP',\n      'name': 'Gibraltar Pound'\n    }, {\n      'code': 'GMD',\n      'name': 'Gambia Dalasi'\n    }, {\n      'code': 'GNF',\n      'name': 'Guinea Franc'\n    }, {\n      'code': 'GTQ',\n      'name': 'Guatemala Quetzal'\n    }, {\n      'code': 'GYD',\n      'name': 'Guyana Dollar'\n    }, {\n      'code': 'HKD',\n      'name': 'Hong Kong Dollar'\n    }, {\n      'code': 'HNL',\n      'name': 'Honduras Lempira'\n    }, {\n      'code': 'HRK',\n      'name': 'Croatia Kuna'\n    }, {\n      'code': 'HTG',\n      'name': 'Haiti Gourde'\n    }, {\n      'code': 'HUF',\n      'name': 'Hungary Forint'\n    }, {\n      'code': 'IDR',\n      'name': 'Indonesia Rupiah'\n    }, {\n      'code': 'ILS',\n      'name': 'Israel Shekel'\n    }, {\n      'code': 'IMP',\n      'name': 'Isle of Man Pound'\n    }, {\n      'code': 'INR',\n      'name': 'India Rupee'\n    }, {\n      'code': 'IQD',\n      'name': 'Iraq Dinar'\n    }, {\n      'code': 'IRR',\n      'name': 'Iran Rial'\n    }, {\n      'code': 'ISK',\n      'name': 'Iceland Krona'\n    }, {\n      'code': 'JEP',\n      'name': 'Jersey Pound'\n    }, {\n      'code': 'JMD',\n      'name': 'Jamaica Dollar'\n    }, {\n      'code': 'JOD',\n      'name': 'Jordan Dinar'\n    }, {\n      'code': 'JPY',\n      'name': 'Japan Yen'\n    }, {\n      'code': 'KES',\n      'name': 'Kenya Shilling'\n    }, {\n      'code': 'KGS',\n      'name': 'Kyrgyzstan Som'\n    }, {\n      'code': 'KHR',\n      'name': 'Cambodia Riel'\n    }, {\n      'code': 'KMF',\n      'name': 'Comoros Franc'\n    }, {\n      'code': 'KPW',\n      'name': 'Korea (North) Won'\n    }, {\n      'code': 'KRW',\n      'name': 'Korea (South) Won'\n    }, {\n      'code': 'KWD',\n      'name': 'Kuwait Dinar'\n    }, {\n      'code': 'KYD',\n      'name': 'Cayman Islands Dollar'\n    }, {\n      'code': 'KZT',\n      'name': 'Kazakhstan Tenge'\n    }, {\n      'code': 'LAK',\n      'name': 'Laos Kip'\n    }, {\n      'code': 'LBP',\n      'name': 'Lebanon Pound'\n    }, {\n      'code': 'LKR',\n      'name': 'Sri Lanka Rupee'\n    }, {\n      'code': 'LRD',\n      'name': 'Liberia Dollar'\n    }, {\n      'code': 'LSL',\n      'name': 'Lesotho Loti'\n    }, {\n      'code': 'LTL',\n      'name': 'Lithuania Litas'\n    }, {\n      'code': 'LYD',\n      'name': 'Libya Dinar'\n    }, {\n      'code': 'MAD',\n      'name': 'Morocco Dirham'\n    }, {\n      'code': 'MDL',\n      'name': 'Moldova Leu'\n    }, {\n      'code': 'MGA',\n      'name': 'Madagascar Ariary'\n    }, {\n      'code': 'MKD',\n      'name': 'Macedonia Denar'\n    }, {\n      'code': 'MMK',\n      'name': 'Myanmar (Burma) Kyat'\n    }, {\n      'code': 'MNT',\n      'name': 'Mongolia Tughrik'\n    }, {\n      'code': 'MOP',\n      'name': 'Macau Pataca'\n    }, {\n      'code': 'MRO',\n      'name': 'Mauritania Ouguiya'\n    }, {\n      'code': 'MUR',\n      'name': 'Mauritius Rupee'\n    }, {\n      'code': 'MVR',\n      'name': 'Maldives (Maldive Islands) Rufiyaa'\n    }, {\n      'code': 'MWK',\n      'name': 'Malawi Kwacha'\n    }, {\n      'code': 'MXN',\n      'name': 'Mexico Peso'\n    }, {\n      'code': 'MYR',\n      'name': 'Malaysia Ringgit'\n    }, {\n      'code': 'MZN',\n      'name': 'Mozambique Metical'\n    }, {\n      'code': 'NAD',\n      'name': 'Namibia Dollar'\n    }, {\n      'code': 'NGN',\n      'name': 'Nigeria Naira'\n    }, {\n      'code': 'NIO',\n      'name': 'Nicaragua Cordoba'\n    }, {\n      'code': 'NOK',\n      'name': 'Norway Krone'\n    }, {\n      'code': 'NPR',\n      'name': 'Nepal Rupee'\n    }, {\n      'code': 'NZD',\n      'name': 'New Zealand Dollar'\n    }, {\n      'code': 'OMR',\n      'name': 'Oman Rial'\n    }, {\n      'code': 'PAB',\n      'name': 'Panama Balboa'\n    }, {\n      'code': 'PEN',\n      'name': 'Peru Nuevo Sol'\n    }, {\n      'code': 'PGK',\n      'name': 'Papua New Guinea Kina'\n    }, {\n      'code': 'PHP',\n      'name': 'Philippines Peso'\n    }, {\n      'code': 'PKR',\n      'name': 'Pakistan Rupee'\n    }, {\n      'code': 'PLN',\n      'name': 'Poland Zloty'\n    }, {\n      'code': 'PYG',\n      'name': 'Paraguay Guarani'\n    }, {\n      'code': 'QAR',\n      'name': 'Qatar Riyal'\n    }, {\n      'code': 'RON',\n      'name': 'Romania New Leu'\n    }, {\n      'code': 'RSD',\n      'name': 'Serbia Dinar'\n    }, {\n      'code': 'RUB',\n      'name': 'Russia Ruble'\n    }, {\n      'code': 'RWF',\n      'name': 'Rwanda Franc'\n    }, {\n      'code': 'SAR',\n      'name': 'Saudi Arabia Riyal'\n    }, {\n      'code': 'SBD',\n      'name': 'Solomon Islands Dollar'\n    }, {\n      'code': 'SCR',\n      'name': 'Seychelles Rupee'\n    }, {\n      'code': 'SDG',\n      'name': 'Sudan Pound'\n    }, {\n      'code': 'SEK',\n      'name': 'Sweden Krona'\n    }, {\n      'code': 'SGD',\n      'name': 'Singapore Dollar'\n    }, {\n      'code': 'SHP',\n      'name': 'Saint Helena Pound'\n    }, {\n      'code': 'SLL',\n      'name': 'Sierra Leone Leone'\n    }, {\n      'code': 'SOS',\n      'name': 'Somalia Shilling'\n    }, {\n      'code': 'SPL',\n      'name': 'Seborga Luigino'\n    }, {\n      'code': 'SRD',\n      'name': 'Suriname Dollar'\n    }, {\n      'code': 'STD',\n      'name': 'São Tomé and Príncipe Dobra'\n    }, {\n      'code': 'SVC',\n      'name': 'El Salvador Colon'\n    }, {\n      'code': 'SYP',\n      'name': 'Syria Pound'\n    }, {\n      'code': 'SZL',\n      'name': 'Swaziland Lilangeni'\n    }, {\n      'code': 'THB',\n      'name': 'Thailand Baht'\n    }, {\n      'code': 'TJS',\n      'name': 'Tajikistan Somoni'\n    }, {\n      'code': 'TMT',\n      'name': 'Turkmenistan Manat'\n    }, {\n      'code': 'TND',\n      'name': 'Tunisia Dinar'\n    }, {\n      'code': 'TOP',\n      'name': 'Tonga Pa\\'anga'\n    }, {\n      'code': 'TRY',\n      'name': 'Turkey Lira'\n    }, {\n      'code': 'TTD',\n      'name': 'Trinidad and Tobago Dollar'\n    }, {\n      'code': 'TVD',\n      'name': 'Tuvalu Dollar'\n    }, {\n      'code': 'TWD',\n      'name': 'Taiwan New Dollar'\n    }, {\n      'code': 'TZS',\n      'name': 'Tanzania Shilling'\n    }, {\n      'code': 'UAH',\n      'name': 'Ukraine Hryvnia'\n    }, {\n      'code': 'UGX',\n      'name': 'Uganda Shilling'\n    }, {\n      'code': 'USD',\n      'name': 'United States Dollar'\n    }, {\n      'code': 'UYU',\n      'name': 'Uruguay Peso'\n    }, {\n      'code': 'UZS',\n      'name': 'Uzbekistan Som'\n    }, {\n      'code': 'VEF',\n      'name': 'Venezuela Bolivar'\n    }, {\n      'code': 'VND',\n      'name': 'Viet Nam Dong'\n    }, {\n      'code': 'VUV',\n      'name': 'Vanuatu Vatu'\n    }, {\n      'code': 'WST',\n      'name': 'Samoa Tala'\n    }, {\n      'code': 'XAF',\n      'name': 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'\n    }, {\n      'code': 'XCD',\n      'name': 'East Caribbean Dollar'\n    }, {\n      'code': 'XDR',\n      'name': 'International Monetary Fund (IMF) Special Drawing Rights'\n    }, {\n      'code': 'XOF',\n      'name': 'Communauté Financière Africaine (BCEAO) Franc'\n    }, {\n      'code': 'XPF',\n      'name': 'Comptoirs Français du Pacifique (CFP) Franc'\n    }, {\n      'code': 'YER',\n      'name': 'Yemen Rial'\n    }, {\n      'code': 'ZAR',\n      'name': 'South Africa Rand'\n    }, {\n      'code': 'ZMW',\n      'name': 'Zambia Kwacha'\n    }, {\n      'code': 'ZWD',\n      'name': 'Zimbabwe Dollar'\n    }],\n    // return the names of all valide colors\n    colorNames: [\"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\", \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\", \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\", \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\", \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\", \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\", \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\", \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\", \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"],\n    // Data taken from https://www.sec.gov/rules/other/4-460list.htm\n    company: [\"3Com Corp\", \"3M Company\", \"A.G. Edwards Inc.\", \"Abbott Laboratories\", \"Abercrombie & Fitch Co.\", \"ABM Industries Incorporated\", \"Ace Hardware Corporation\", \"ACT Manufacturing Inc.\", \"Acterna Corp.\", \"Adams Resources & Energy, Inc.\", \"ADC Telecommunications, Inc.\", \"Adelphia Communications Corporation\", \"Administaff, Inc.\", \"Adobe Systems Incorporated\", \"Adolph Coors Company\", \"Advance Auto Parts, Inc.\", \"Advanced Micro Devices, Inc.\", \"AdvancePCS, Inc.\", \"Advantica Restaurant Group, Inc.\", \"The AES Corporation\", \"Aetna Inc.\", \"Affiliated Computer Services, Inc.\", \"AFLAC Incorporated\", \"AGCO Corporation\", \"Agilent Technologies, Inc.\", \"Agway Inc.\", \"Apartment Investment and Management Company\", \"Air Products and Chemicals, Inc.\", \"Airborne, Inc.\", \"Airgas, Inc.\", \"AK Steel Holding Corporation\", \"Alaska Air Group, Inc.\", \"Alberto-Culver Company\", \"Albertson's, Inc.\", \"Alcoa Inc.\", \"Alleghany Corporation\", \"Allegheny Energy, Inc.\", \"Allegheny Technologies Incorporated\", \"Allergan, Inc.\", \"ALLETE, Inc.\", \"Alliant Energy Corporation\", \"Allied Waste Industries, Inc.\", \"Allmerica Financial Corporation\", \"The Allstate Corporation\", \"ALLTEL Corporation\", \"The Alpine Group, Inc.\", \"Amazon.com, Inc.\", \"AMC Entertainment Inc.\", \"American Power Conversion Corporation\", \"Amerada Hess Corporation\", \"AMERCO\", \"Ameren Corporation\", \"America West Holdings Corporation\", \"American Axle & Manufacturing Holdings, Inc.\", \"American Eagle Outfitters, Inc.\", \"American Electric Power Company, Inc.\", \"American Express Company\", \"American Financial Group, Inc.\", \"American Greetings Corporation\", \"American International Group, Inc.\", \"American Standard Companies Inc.\", \"American Water Works Company, Inc.\", \"AmerisourceBergen Corporation\", \"Ames Department Stores, Inc.\", \"Amgen Inc.\", \"Amkor Technology, Inc.\", \"AMR Corporation\", \"AmSouth Bancorp.\", \"Amtran, Inc.\", \"Anadarko Petroleum Corporation\", \"Analog Devices, Inc.\", \"Anheuser-Busch Companies, Inc.\", \"Anixter International Inc.\", \"AnnTaylor Inc.\", \"Anthem, Inc.\", \"AOL Time Warner Inc.\", \"Aon Corporation\", \"Apache Corporation\", \"Apple Computer, Inc.\", \"Applera Corporation\", \"Applied Industrial Technologies, Inc.\", \"Applied Materials, Inc.\", \"Aquila, Inc.\", \"ARAMARK Corporation\", \"Arch Coal, Inc.\", \"Archer Daniels Midland Company\", \"Arkansas Best Corporation\", \"Armstrong Holdings, Inc.\", \"Arrow Electronics, Inc.\", \"ArvinMeritor, Inc.\", \"Ashland Inc.\", \"Astoria Financial Corporation\", \"AT&T Corp.\", \"Atmel Corporation\", \"Atmos Energy Corporation\", \"Audiovox Corporation\", \"Autoliv, Inc.\", \"Automatic Data Processing, Inc.\", \"AutoNation, Inc.\", \"AutoZone, Inc.\", \"Avaya Inc.\", \"Avery Dennison Corporation\", \"Avista Corporation\", \"Avnet, Inc.\", \"Avon Products, Inc.\", \"Baker Hughes Incorporated\", \"Ball Corporation\", \"Bank of America Corporation\", \"The Bank of New York Company, Inc.\", \"Bank One Corporation\", \"Banknorth Group, Inc.\", \"Banta Corporation\", \"Barnes & Noble, Inc.\", \"Bausch & Lomb Incorporated\", \"Baxter International Inc.\", \"BB&T Corporation\", \"The Bear Stearns Companies Inc.\", \"Beazer Homes USA, Inc.\", \"Beckman Coulter, Inc.\", \"Becton, Dickinson and Company\", \"Bed Bath & Beyond Inc.\", \"Belk, Inc.\", \"Bell Microproducts Inc.\", \"BellSouth Corporation\", \"Belo Corp.\", \"Bemis Company, Inc.\", \"Benchmark Electronics, Inc.\", \"Berkshire Hathaway Inc.\", \"Best Buy Co., Inc.\", \"Bethlehem Steel Corporation\", \"Beverly Enterprises, Inc.\", \"Big Lots, Inc.\", \"BJ Services Company\", \"BJ's Wholesale Club, Inc.\", \"The Black & Decker Corporation\", \"Black Hills Corporation\", \"BMC Software, Inc.\", \"The Boeing Company\", \"Boise Cascade Corporation\", \"Borders Group, Inc.\", \"BorgWarner Inc.\", \"Boston Scientific Corporation\", \"Bowater Incorporated\", \"Briggs & Stratton Corporation\", \"Brightpoint, Inc.\", \"Brinker International, Inc.\", \"Bristol-Myers Squibb Company\", \"Broadwing, Inc.\", \"Brown Shoe Company, Inc.\", \"Brown-Forman Corporation\", \"Brunswick Corporation\", \"Budget Group, Inc.\", \"Burlington Coat Factory Warehouse Corporation\", \"Burlington Industries, Inc.\", \"Burlington Northern Santa Fe Corporation\", \"Burlington Resources Inc.\", \"C. H. Robinson Worldwide Inc.\", \"Cablevision Systems Corp\", \"Cabot Corp\", \"Cadence Design Systems, Inc.\", \"Calpine Corp.\", \"Campbell Soup Co.\", \"Capital One Financial Corp.\", \"Cardinal Health Inc.\", \"Caremark Rx Inc.\", \"Carlisle Cos. Inc.\", \"Carpenter Technology Corp.\", \"Casey's General Stores Inc.\", \"Caterpillar Inc.\", \"CBRL Group Inc.\", \"CDI Corp.\", \"CDW Computer Centers Inc.\", \"CellStar Corp.\", \"Cendant Corp\", \"Cenex Harvest States Cooperatives\", \"Centex Corp.\", \"CenturyTel Inc.\", \"Ceridian Corp.\", \"CH2M Hill Cos. Ltd.\", \"Champion Enterprises Inc.\", \"Charles Schwab Corp.\", \"Charming Shoppes Inc.\", \"Charter Communications Inc.\", \"Charter One Financial Inc.\", \"ChevronTexaco Corp.\", \"Chiquita Brands International Inc.\", \"Chubb Corp\", \"Ciena Corp.\", \"Cigna Corp\", \"Cincinnati Financial Corp.\", \"Cinergy Corp.\", \"Cintas Corp.\", \"Circuit City Stores Inc.\", \"Cisco Systems Inc.\", \"Citigroup, Inc\", \"Citizens Communications Co.\", \"CKE Restaurants Inc.\", \"Clear Channel Communications Inc.\", \"The Clorox Co.\", \"CMGI Inc.\", \"CMS Energy Corp.\", \"CNF Inc.\", \"Coca-Cola Co.\", \"Coca-Cola Enterprises Inc.\", \"Colgate-Palmolive Co.\", \"Collins & Aikman Corp.\", \"Comcast Corp.\", \"Comdisco Inc.\", \"Comerica Inc.\", \"Comfort Systems USA Inc.\", \"Commercial Metals Co.\", \"Community Health Systems Inc.\", \"Compass Bancshares Inc\", \"Computer Associates International Inc.\", \"Computer Sciences Corp.\", \"Compuware Corp.\", \"Comverse Technology Inc.\", \"ConAgra Foods Inc.\", \"Concord EFS Inc.\", \"Conectiv, Inc\", \"Conoco Inc\", \"Conseco Inc.\", \"Consolidated Freightways Corp.\", \"Consolidated Edison Inc.\", \"Constellation Brands Inc.\", \"Constellation Emergy Group Inc.\", \"Continental Airlines Inc.\", \"Convergys Corp.\", \"Cooper Cameron Corp.\", \"Cooper Industries Ltd.\", \"Cooper Tire & Rubber Co.\", \"Corn Products International Inc.\", \"Corning Inc.\", \"Costco Wholesale Corp.\", \"Countrywide Credit Industries Inc.\", \"Coventry Health Care Inc.\", \"Cox Communications Inc.\", \"Crane Co.\", \"Crompton Corp.\", \"Crown Cork & Seal Co. Inc.\", \"CSK Auto Corp.\", \"CSX Corp.\", \"Cummins Inc.\", \"CVS Corp.\", \"Cytec Industries Inc.\", \"D&K Healthcare Resources, Inc.\", \"D.R. Horton Inc.\", \"Dana Corporation\", \"Danaher Corporation\", \"Darden Restaurants Inc.\", \"DaVita Inc.\", \"Dean Foods Company\", \"Deere & Company\", \"Del Monte Foods Co\", \"Dell Computer Corporation\", \"Delphi Corp.\", \"Delta Air Lines Inc.\", \"Deluxe Corporation\", \"Devon Energy Corporation\", \"Di Giorgio Corporation\", \"Dial Corporation\", \"Diebold Incorporated\", \"Dillard's Inc.\", \"DIMON Incorporated\", \"Dole Food Company, Inc.\", \"Dollar General Corporation\", \"Dollar Tree Stores, Inc.\", \"Dominion Resources, Inc.\", \"Domino's Pizza LLC\", \"Dover Corporation, Inc.\", \"Dow Chemical Company\", \"Dow Jones & Company, Inc.\", \"DPL Inc.\", \"DQE Inc.\", \"Dreyer's Grand Ice Cream, Inc.\", \"DST Systems, Inc.\", \"DTE Energy Co.\", \"E.I. Du Pont de Nemours and Company\", \"Duke Energy Corp\", \"Dun & Bradstreet Inc.\", \"DURA Automotive Systems Inc.\", \"DynCorp\", \"Dynegy Inc.\", \"E*Trade Group, Inc.\", \"E.W. Scripps Company\", \"Earthlink, Inc.\", \"Eastman Chemical Company\", \"Eastman Kodak Company\", \"Eaton Corporation\", \"Echostar Communications Corporation\", \"Ecolab Inc.\", \"Edison International\", \"EGL Inc.\", \"El Paso Corporation\", \"Electronic Arts Inc.\", \"Electronic Data Systems Corp.\", \"Eli Lilly and Company\", \"EMC Corporation\", \"Emcor Group Inc.\", \"Emerson Electric Co.\", \"Encompass Services Corporation\", \"Energizer Holdings Inc.\", \"Energy East Corporation\", \"Engelhard Corporation\", \"Enron Corp.\", \"Entergy Corporation\", \"Enterprise Products Partners L.P.\", \"EOG Resources, Inc.\", \"Equifax Inc.\", \"Equitable Resources Inc.\", \"Equity Office Properties Trust\", \"Equity Residential Properties Trust\", \"Estee Lauder Companies Inc.\", \"Exelon Corporation\", \"Exide Technologies\", \"Expeditors International of Washington Inc.\", \"Express Scripts Inc.\", \"ExxonMobil Corporation\", \"Fairchild Semiconductor International Inc.\", \"Family Dollar Stores Inc.\", \"Farmland Industries Inc.\", \"Federal Mogul Corp.\", \"Federated Department Stores Inc.\", \"Federal Express Corp.\", \"Felcor Lodging Trust Inc.\", \"Ferro Corp.\", \"Fidelity National Financial Inc.\", \"Fifth Third Bancorp\", \"First American Financial Corp.\", \"First Data Corp.\", \"First National of Nebraska Inc.\", \"First Tennessee National Corp.\", \"FirstEnergy Corp.\", \"Fiserv Inc.\", \"Fisher Scientific International Inc.\", \"FleetBoston Financial Co.\", \"Fleetwood Enterprises Inc.\", \"Fleming Companies Inc.\", \"Flowers Foods Inc.\", \"Flowserv Corp\", \"Fluor Corp\", \"FMC Corp\", \"Foamex International Inc\", \"Foot Locker Inc\", \"Footstar Inc.\", \"Ford Motor Co\", \"Forest Laboratories Inc.\", \"Fortune Brands Inc.\", \"Foster Wheeler Ltd.\", \"FPL Group Inc.\", \"Franklin Resources Inc.\", \"Freeport McMoran Copper & Gold Inc.\", \"Frontier Oil Corp\", \"Furniture Brands International Inc.\", \"Gannett Co., Inc.\", \"Gap Inc.\", \"Gateway Inc.\", \"GATX Corporation\", \"Gemstar-TV Guide International Inc.\", \"GenCorp Inc.\", \"General Cable Corporation\", \"General Dynamics Corporation\", \"General Electric Company\", \"General Mills Inc\", \"General Motors Corporation\", \"Genesis Health Ventures Inc.\", \"Gentek Inc.\", \"Gentiva Health Services Inc.\", \"Genuine Parts Company\", \"Genuity Inc.\", \"Genzyme Corporation\", \"Georgia Gulf Corporation\", \"Georgia-Pacific Corporation\", \"Gillette Company\", \"Gold Kist Inc.\", \"Golden State Bancorp Inc.\", \"Golden West Financial Corporation\", \"Goldman Sachs Group Inc.\", \"Goodrich Corporation\", \"The Goodyear Tire & Rubber Company\", \"Granite Construction Incorporated\", \"Graybar Electric Company Inc.\", \"Great Lakes Chemical Corporation\", \"Great Plains Energy Inc.\", \"GreenPoint Financial Corp.\", \"Greif Bros. Corporation\", \"Grey Global Group Inc.\", \"Group 1 Automotive Inc.\", \"Guidant Corporation\", \"H&R Block Inc.\", \"H.B. Fuller Company\", \"H.J. Heinz Company\", \"Halliburton Co.\", \"Harley-Davidson Inc.\", \"Harman International Industries Inc.\", \"Harrah's Entertainment Inc.\", \"Harris Corp.\", \"Harsco Corp.\", \"Hartford Financial Services Group Inc.\", \"Hasbro Inc.\", \"Hawaiian Electric Industries Inc.\", \"HCA Inc.\", \"Health Management Associates Inc.\", \"Health Net Inc.\", \"Healthsouth Corp\", \"Henry Schein Inc.\", \"Hercules Inc.\", \"Herman Miller Inc.\", \"Hershey Foods Corp.\", \"Hewlett-Packard Company\", \"Hibernia Corp.\", \"Hillenbrand Industries Inc.\", \"Hilton Hotels Corp.\", \"Hollywood Entertainment Corp.\", \"Home Depot Inc.\", \"Hon Industries Inc.\", \"Honeywell International Inc.\", \"Hormel Foods Corp.\", \"Host Marriott Corp.\", \"Household International Corp.\", \"Hovnanian Enterprises Inc.\", \"Hub Group Inc.\", \"Hubbell Inc.\", \"Hughes Supply Inc.\", \"Humana Inc.\", \"Huntington Bancshares Inc.\", \"Idacorp Inc.\", \"IDT Corporation\", \"IKON Office Solutions Inc.\", \"Illinois Tool Works Inc.\", \"IMC Global Inc.\", \"Imperial Sugar Company\", \"IMS Health Inc.\", \"Ingles Market Inc\", \"Ingram Micro Inc.\", \"Insight Enterprises Inc.\", \"Integrated Electrical Services Inc.\", \"Intel Corporation\", \"International Paper Co.\", \"Interpublic Group of Companies Inc.\", \"Interstate Bakeries Corporation\", \"International Business Machines Corp.\", \"International Flavors & Fragrances Inc.\", \"International Multifoods Corporation\", \"Intuit Inc.\", \"IT Group Inc.\", \"ITT Industries Inc.\", \"Ivax Corp.\", \"J.B. Hunt Transport Services Inc.\", \"J.C. Penny Co.\", \"J.P. Morgan Chase & Co.\", \"Jabil Circuit Inc.\", \"Jack In The Box Inc.\", \"Jacobs Engineering Group Inc.\", \"JDS Uniphase Corp.\", \"Jefferson-Pilot Co.\", \"John Hancock Financial Services Inc.\", \"Johnson & Johnson\", \"Johnson Controls Inc.\", \"Jones Apparel Group Inc.\", \"KB Home\", \"Kellogg Company\", \"Kellwood Company\", \"Kelly Services Inc.\", \"Kemet Corp.\", \"Kennametal Inc.\", \"Kerr-McGee Corporation\", \"KeyCorp\", \"KeySpan Corp.\", \"Kimball International Inc.\", \"Kimberly-Clark Corporation\", \"Kindred Healthcare Inc.\", \"KLA-Tencor Corporation\", \"K-Mart Corp.\", \"Knight-Ridder Inc.\", \"Kohl's Corp.\", \"KPMG Consulting Inc.\", \"Kroger Co.\", \"L-3 Communications Holdings Inc.\", \"Laboratory Corporation of America Holdings\", \"Lam Research Corporation\", \"LandAmerica Financial Group Inc.\", \"Lands' End Inc.\", \"Landstar System Inc.\", \"La-Z-Boy Inc.\", \"Lear Corporation\", \"Legg Mason Inc.\", \"Leggett & Platt Inc.\", \"Lehman Brothers Holdings Inc.\", \"Lennar Corporation\", \"Lennox International Inc.\", \"Level 3 Communications Inc.\", \"Levi Strauss & Co.\", \"Lexmark International Inc.\", \"Limited Inc.\", \"Lincoln National Corporation\", \"Linens 'n Things Inc.\", \"Lithia Motors Inc.\", \"Liz Claiborne Inc.\", \"Lockheed Martin Corporation\", \"Loews Corporation\", \"Longs Drug Stores Corporation\", \"Louisiana-Pacific Corporation\", \"Lowe's Companies Inc.\", \"LSI Logic Corporation\", \"The LTV Corporation\", \"The Lubrizol Corporation\", \"Lucent Technologies Inc.\", \"Lyondell Chemical Company\", \"M & T Bank Corporation\", \"Magellan Health Services Inc.\", \"Mail-Well Inc.\", \"Mandalay Resort Group\", \"Manor Care Inc.\", \"Manpower Inc.\", \"Marathon Oil Corporation\", \"Mariner Health Care Inc.\", \"Markel Corporation\", \"Marriott International Inc.\", \"Marsh & McLennan Companies Inc.\", \"Marsh Supermarkets Inc.\", \"Marshall & Ilsley Corporation\", \"Martin Marietta Materials Inc.\", \"Masco Corporation\", \"Massey Energy Company\", \"MasTec Inc.\", \"Mattel Inc.\", \"Maxim Integrated Products Inc.\", \"Maxtor Corporation\", \"Maxxam Inc.\", \"The May Department Stores Company\", \"Maytag Corporation\", \"MBNA Corporation\", \"McCormick & Company Incorporated\", \"McDonald's Corporation\", \"The McGraw-Hill Companies Inc.\", \"McKesson Corporation\", \"McLeodUSA Incorporated\", \"M.D.C. Holdings Inc.\", \"MDU Resources Group Inc.\", \"MeadWestvaco Corporation\", \"Medtronic Inc.\", \"Mellon Financial Corporation\", \"The Men's Wearhouse Inc.\", \"Merck & Co., Inc.\", \"Mercury General Corporation\", \"Merrill Lynch & Co. Inc.\", \"Metaldyne Corporation\", \"Metals USA Inc.\", \"MetLife Inc.\", \"Metris Companies Inc\", \"MGIC Investment Corporation\", \"MGM Mirage\", \"Michaels Stores Inc.\", \"Micron Technology Inc.\", \"Microsoft Corporation\", \"Milacron Inc.\", \"Millennium Chemicals Inc.\", \"Mirant Corporation\", \"Mohawk Industries Inc.\", \"Molex Incorporated\", \"The MONY Group Inc.\", \"Morgan Stanley Dean Witter & Co.\", \"Motorola Inc.\", \"MPS Group Inc.\", \"Murphy Oil Corporation\", \"Nabors Industries Inc\", \"Nacco Industries Inc\", \"Nash Finch Company\", \"National City Corp.\", \"National Commerce Financial Corporation\", \"National Fuel Gas Company\", \"National Oilwell Inc\", \"National Rural Utilities Cooperative Finance Corporation\", \"National Semiconductor Corporation\", \"National Service Industries Inc\", \"Navistar International Corporation\", \"NCR Corporation\", \"The Neiman Marcus Group Inc.\", \"New Jersey Resources Corporation\", \"New York Times Company\", \"Newell Rubbermaid Inc\", \"Newmont Mining Corporation\", \"Nextel Communications Inc\", \"Nicor Inc\", \"Nike Inc\", \"NiSource Inc\", \"Noble Energy Inc\", \"Nordstrom Inc\", \"Norfolk Southern Corporation\", \"Nortek Inc\", \"North Fork Bancorporation Inc\", \"Northeast Utilities System\", \"Northern Trust Corporation\", \"Northrop Grumman Corporation\", \"NorthWestern Corporation\", \"Novellus Systems Inc\", \"NSTAR\", \"NTL Incorporated\", \"Nucor Corp\", \"Nvidia Corp\", \"NVR Inc\", \"Northwest Airlines Corp\", \"Occidental Petroleum Corp\", \"Ocean Energy Inc\", \"Office Depot Inc.\", \"OfficeMax Inc\", \"OGE Energy Corp\", \"Oglethorpe Power Corp.\", \"Ohio Casualty Corp.\", \"Old Republic International Corp.\", \"Olin Corp.\", \"OM Group Inc\", \"Omnicare Inc\", \"Omnicom Group\", \"On Semiconductor Corp\", \"ONEOK Inc\", \"Oracle Corp\", \"Oshkosh Truck Corp\", \"Outback Steakhouse Inc.\", \"Owens & Minor Inc.\", \"Owens Corning\", \"Owens-Illinois Inc\", \"Oxford Health Plans Inc\", \"Paccar Inc\", \"PacifiCare Health Systems Inc\", \"Packaging Corp. of America\", \"Pactiv Corp\", \"Pall Corp\", \"Pantry Inc\", \"Park Place Entertainment Corp\", \"Parker Hannifin Corp.\", \"Pathmark Stores Inc.\", \"Paychex Inc\", \"Payless Shoesource Inc\", \"Penn Traffic Co.\", \"Pennzoil-Quaker State Company\", \"Pentair Inc\", \"Peoples Energy Corp.\", \"PeopleSoft Inc\", \"Pep Boys Manny, Moe & Jack\", \"Potomac Electric Power Co.\", \"Pepsi Bottling Group Inc.\", \"PepsiAmericas Inc.\", \"PepsiCo Inc.\", \"Performance Food Group Co.\", \"Perini Corp\", \"PerkinElmer Inc\", \"Perot Systems Corp\", \"Petco Animal Supplies Inc.\", \"Peter Kiewit Sons', Inc.\", \"PETsMART Inc\", \"Pfizer Inc\", \"Pacific Gas & Electric Corp.\", \"Pharmacia Corp\", \"Phar Mor Inc.\", \"Phelps Dodge Corp.\", \"Philip Morris Companies Inc.\", \"Phillips Petroleum Co\", \"Phillips Van Heusen Corp.\", \"Phoenix Companies Inc\", \"Pier 1 Imports Inc.\", \"Pilgrim's Pride Corporation\", \"Pinnacle West Capital Corp\", \"Pioneer-Standard Electronics Inc.\", \"Pitney Bowes Inc.\", \"Pittston Brinks Group\", \"Plains All American Pipeline LP\", \"PNC Financial Services Group Inc.\", \"PNM Resources Inc\", \"Polaris Industries Inc.\", \"Polo Ralph Lauren Corp\", \"PolyOne Corp\", \"Popular Inc\", \"Potlatch Corp\", \"PPG Industries Inc\", \"PPL Corp\", \"Praxair Inc\", \"Precision Castparts Corp\", \"Premcor Inc.\", \"Pride International Inc\", \"Primedia Inc\", \"Principal Financial Group Inc.\", \"Procter & Gamble Co.\", \"Pro-Fac Cooperative Inc.\", \"Progress Energy Inc\", \"Progressive Corporation\", \"Protective Life Corp\", \"Provident Financial Group\", \"Providian Financial Corp.\", \"Prudential Financial Inc.\", \"PSS World Medical Inc\", \"Public Service Enterprise Group Inc.\", \"Publix Super Markets Inc.\", \"Puget Energy Inc.\", \"Pulte Homes Inc\", \"Qualcomm Inc\", \"Quanta Services Inc.\", \"Quantum Corp\", \"Quest Diagnostics Inc.\", \"Questar Corp\", \"Quintiles Transnational\", \"Qwest Communications Intl Inc\", \"R.J. Reynolds Tobacco Company\", \"R.R. Donnelley & Sons Company\", \"Radio Shack Corporation\", \"Raymond James Financial Inc.\", \"Raytheon Company\", \"Reader's Digest Association Inc.\", \"Reebok International Ltd.\", \"Regions Financial Corp.\", \"Regis Corporation\", \"Reliance Steel & Aluminum Co.\", \"Reliant Energy Inc.\", \"Rent A Center Inc\", \"Republic Services Inc\", \"Revlon Inc\", \"RGS Energy Group Inc\", \"Rite Aid Corp\", \"Riverwood Holding Inc.\", \"RoadwayCorp\", \"Robert Half International Inc.\", \"Rock-Tenn Co\", \"Rockwell Automation Inc\", \"Rockwell Collins Inc\", \"Rohm & Haas Co.\", \"Ross Stores Inc\", \"RPM Inc.\", \"Ruddick Corp\", \"Ryder System Inc\", \"Ryerson Tull Inc\", \"Ryland Group Inc.\", \"Sabre Holdings Corp\", \"Safeco Corp\", \"Safeguard Scientifics Inc.\", \"Safeway Inc\", \"Saks Inc\", \"Sanmina-SCI Inc\", \"Sara Lee Corp\", \"SBC Communications Inc\", \"Scana Corp.\", \"Schering-Plough Corp\", \"Scholastic Corp\", \"SCI Systems Onc.\", \"Science Applications Intl. Inc.\", \"Scientific-Atlanta Inc\", \"Scotts Company\", \"Seaboard Corp\", \"Sealed Air Corp\", \"Sears Roebuck & Co\", \"Sempra Energy\", \"Sequa Corp\", \"Service Corp. International\", \"ServiceMaster Co\", \"Shaw Group Inc\", \"Sherwin-Williams Company\", \"Shopko Stores Inc\", \"Siebel Systems Inc\", \"Sierra Health Services Inc\", \"Sierra Pacific Resources\", \"Silgan Holdings Inc.\", \"Silicon Graphics Inc\", \"Simon Property Group Inc\", \"SLM Corporation\", \"Smith International Inc\", \"Smithfield Foods Inc\", \"Smurfit-Stone Container Corp\", \"Snap-On Inc\", \"Solectron Corp\", \"Solutia Inc\", \"Sonic Automotive Inc.\", \"Sonoco Products Co.\", \"Southern Company\", \"Southern Union Company\", \"SouthTrust Corp.\", \"Southwest Airlines Co\", \"Southwest Gas Corp\", \"Sovereign Bancorp Inc.\", \"Spartan Stores Inc\", \"Spherion Corp\", \"Sports Authority Inc\", \"Sprint Corp.\", \"SPX Corp\", \"St. Jude Medical Inc\", \"St. Paul Cos.\", \"Staff Leasing Inc.\", \"StanCorp Financial Group Inc\", \"Standard Pacific Corp.\", \"Stanley Works\", \"Staples Inc\", \"Starbucks Corp\", \"Starwood Hotels & Resorts Worldwide Inc\", \"State Street Corp.\", \"Stater Bros. Holdings Inc.\", \"Steelcase Inc\", \"Stein Mart Inc\", \"Stewart & Stevenson Services Inc\", \"Stewart Information Services Corp\", \"Stilwell Financial Inc\", \"Storage Technology Corporation\", \"Stryker Corp\", \"Sun Healthcare Group Inc.\", \"Sun Microsystems Inc.\", \"SunGard Data Systems Inc.\", \"Sunoco Inc.\", \"SunTrust Banks Inc\", \"Supervalu Inc\", \"Swift Transportation, Co., Inc\", \"Symbol Technologies Inc\", \"Synovus Financial Corp.\", \"Sysco Corp\", \"Systemax Inc.\", \"Target Corp.\", \"Tech Data Corporation\", \"TECO Energy Inc\", \"Tecumseh Products Company\", \"Tektronix Inc\", \"Teleflex Incorporated\", \"Telephone & Data Systems Inc\", \"Tellabs Inc.\", \"Temple-Inland Inc\", \"Tenet Healthcare Corporation\", \"Tenneco Automotive Inc.\", \"Teradyne Inc\", \"Terex Corp\", \"Tesoro Petroleum Corp.\", \"Texas Industries Inc.\", \"Texas Instruments Incorporated\", \"Textron Inc\", \"Thermo Electron Corporation\", \"Thomas & Betts Corporation\", \"Tiffany & Co\", \"Timken Company\", \"TJX Companies Inc\", \"TMP Worldwide Inc\", \"Toll Brothers Inc\", \"Torchmark Corporation\", \"Toro Company\", \"Tower Automotive Inc.\", \"Toys 'R' Us Inc\", \"Trans World Entertainment Corp.\", \"TransMontaigne Inc\", \"Transocean Inc\", \"TravelCenters of America Inc.\", \"Triad Hospitals Inc\", \"Tribune Company\", \"Trigon Healthcare Inc.\", \"Trinity Industries Inc\", \"Trump Hotels & Casino Resorts Inc.\", \"TruServ Corporation\", \"TRW Inc\", \"TXU Corp\", \"Tyson Foods Inc\", \"U.S. Bancorp\", \"U.S. Industries Inc.\", \"UAL Corporation\", \"UGI Corporation\", \"Unified Western Grocers Inc\", \"Union Pacific Corporation\", \"Union Planters Corp\", \"Unisource Energy Corp\", \"Unisys Corporation\", \"United Auto Group Inc\", \"United Defense Industries Inc.\", \"United Parcel Service Inc\", \"United Rentals Inc\", \"United Stationers Inc\", \"United Technologies Corporation\", \"UnitedHealth Group Incorporated\", \"Unitrin Inc\", \"Universal Corporation\", \"Universal Forest Products Inc\", \"Universal Health Services Inc\", \"Unocal Corporation\", \"Unova Inc\", \"UnumProvident Corporation\", \"URS Corporation\", \"US Airways Group Inc\", \"US Oncology Inc\", \"USA Interactive\", \"USFreighways Corporation\", \"USG Corporation\", \"UST Inc\", \"Valero Energy Corporation\", \"Valspar Corporation\", \"Value City Department Stores Inc\", \"Varco International Inc\", \"Vectren Corporation\", \"Veritas Software Corporation\", \"Verizon Communications Inc\", \"VF Corporation\", \"Viacom Inc\", \"Viad Corp\", \"Viasystems Group Inc\", \"Vishay Intertechnology Inc\", \"Visteon Corporation\", \"Volt Information Sciences Inc\", \"Vulcan Materials Company\", \"W.R. Berkley Corporation\", \"W.R. Grace & Co\", \"W.W. Grainger Inc\", \"Wachovia Corporation\", \"Wakenhut Corporation\", \"Walgreen Co\", \"Wallace Computer Services Inc\", \"Wal-Mart Stores Inc\", \"Walt Disney Co\", \"Walter Industries Inc\", \"Washington Mutual Inc\", \"Washington Post Co.\", \"Waste Management Inc\", \"Watsco Inc\", \"Weatherford International Inc\", \"Weis Markets Inc.\", \"Wellpoint Health Networks Inc\", \"Wells Fargo & Company\", \"Wendy's International Inc\", \"Werner Enterprises Inc\", \"WESCO International Inc\", \"Western Digital Inc\", \"Western Gas Resources Inc\", \"WestPoint Stevens Inc\", \"Weyerhauser Company\", \"WGL Holdings Inc\", \"Whirlpool Corporation\", \"Whole Foods Market Inc\", \"Willamette Industries Inc.\", \"Williams Companies Inc\", \"Williams Sonoma Inc\", \"Winn Dixie Stores Inc\", \"Wisconsin Energy Corporation\", \"Wm Wrigley Jr Company\", \"World Fuel Services Corporation\", \"WorldCom Inc\", \"Worthington Industries Inc\", \"WPS Resources Corporation\", \"Wyeth\", \"Wyndham International Inc\", \"Xcel Energy Inc\", \"Xerox Corp\", \"Xilinx Inc\", \"XO Communications Inc\", \"Yellow Corporation\", \"York International Corp\", \"Yum Brands Inc.\", \"Zale Corporation\", \"Zions Bancorporation\"],\n    fileExtension: {\n      \"raster\": [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n      \"vector\": [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n      \"3d\": [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n      \"document\": [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n    },\n    // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n    timezones: [{\n      \"name\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\"Etc/GMT+12\"]\n    }, {\n      \"name\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\"Etc/GMT+11\", \"Pacific/Midway\", \"Pacific/Niue\", \"Pacific/Pago_Pago\"]\n    }, {\n      \"name\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\"Etc/GMT+10\", \"Pacific/Honolulu\", \"Pacific/Johnston\", \"Pacific/Rarotonga\", \"Pacific/Tahiti\"]\n    }, {\n      \"name\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\"America/Anchorage\", \"America/Juneau\", \"America/Nome\", \"America/Sitka\", \"America/Yakutat\"]\n    }, {\n      \"name\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\"America/Santa_Isabel\"]\n    }, {\n      \"name\": \"Pacific Standard Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\"America/Dawson\", \"America/Los_Angeles\", \"America/Tijuana\", \"America/Vancouver\", \"America/Whitehorse\", \"PST8PDT\"]\n    }, {\n      \"name\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\"America/Creston\", \"America/Dawson_Creek\", \"America/Hermosillo\", \"America/Phoenix\", \"Etc/GMT+7\"]\n    }, {\n      \"name\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\"America/Chihuahua\", \"America/Mazatlan\"]\n    }, {\n      \"name\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\"America/Boise\", \"America/Cambridge_Bay\", \"America/Denver\", \"America/Edmonton\", \"America/Inuvik\", \"America/Ojinaga\", \"America/Yellowknife\", \"MST7MDT\"]\n    }, {\n      \"name\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\"America/Belize\", \"America/Costa_Rica\", \"America/El_Salvador\", \"America/Guatemala\", \"America/Managua\", \"America/Tegucigalpa\", \"Etc/GMT+6\", \"Pacific/Galapagos\"]\n    }, {\n      \"name\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\"America/Chicago\", \"America/Indiana/Knox\", \"America/Indiana/Tell_City\", \"America/Matamoros\", \"America/Menominee\", \"America/North_Dakota/Beulah\", \"America/North_Dakota/Center\", \"America/North_Dakota/New_Salem\", \"America/Rainy_River\", \"America/Rankin_Inlet\", \"America/Resolute\", \"America/Winnipeg\", \"CST6CDT\"]\n    }, {\n      \"name\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\"America/Bahia_Banderas\", \"America/Cancun\", \"America/Merida\", \"America/Mexico_City\", \"America/Monterrey\"]\n    }, {\n      \"name\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\"America/Regina\", \"America/Swift_Current\"]\n    }, {\n      \"name\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\"America/Bogota\", \"America/Cayman\", \"America/Coral_Harbour\", \"America/Eirunepe\", \"America/Guayaquil\", \"America/Jamaica\", \"America/Lima\", \"America/Panama\", \"America/Rio_Branco\", \"Etc/GMT+5\"]\n    }, {\n      \"name\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\"America/Detroit\", \"America/Havana\", \"America/Indiana/Petersburg\", \"America/Indiana/Vincennes\", \"America/Indiana/Winamac\", \"America/Iqaluit\", \"America/Kentucky/Monticello\", \"America/Louisville\", \"America/Montreal\", \"America/Nassau\", \"America/New_York\", \"America/Nipigon\", \"America/Pangnirtung\", \"America/Port-au-Prince\", \"America/Thunder_Bay\", \"America/Toronto\", \"EST5EDT\"]\n    }, {\n      \"name\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\"America/Indiana/Marengo\", \"America/Indiana/Vevay\", \"America/Indianapolis\"]\n    }, {\n      \"name\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\"America/Caracas\"]\n    }, {\n      \"name\": \"Paraguay Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\"America/Asuncion\"]\n    }, {\n      \"name\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\"America/Glace_Bay\", \"America/Goose_Bay\", \"America/Halifax\", \"America/Moncton\", \"America/Thule\", \"Atlantic/Bermuda\"]\n    }, {\n      \"name\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\"America/Campo_Grande\", \"America/Cuiaba\"]\n    }, {\n      \"name\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\"America/Anguilla\", \"America/Antigua\", \"America/Aruba\", \"America/Barbados\", \"America/Blanc-Sablon\", \"America/Boa_Vista\", \"America/Curacao\", \"America/Dominica\", \"America/Grand_Turk\", \"America/Grenada\", \"America/Guadeloupe\", \"America/Guyana\", \"America/Kralendijk\", \"America/La_Paz\", \"America/Lower_Princes\", \"America/Manaus\", \"America/Marigot\", \"America/Martinique\", \"America/Montserrat\", \"America/Port_of_Spain\", \"America/Porto_Velho\", \"America/Puerto_Rico\", \"America/Santo_Domingo\", \"America/St_Barthelemy\", \"America/St_Kitts\", \"America/St_Lucia\", \"America/St_Thomas\", \"America/St_Vincent\", \"America/Tortola\", \"Etc/GMT+4\"]\n    }, {\n      \"name\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\"America/Santiago\", \"Antarctica/Palmer\"]\n    }, {\n      \"name\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\"America/St_Johns\"]\n    }, {\n      \"name\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\"America/Sao_Paulo\"]\n    }, {\n      \"name\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\"America/Argentina/La_Rioja\", \"America/Argentina/Rio_Gallegos\", \"America/Argentina/Salta\", \"America/Argentina/San_Juan\", \"America/Argentina/San_Luis\", \"America/Argentina/Tucuman\", \"America/Argentina/Ushuaia\", \"America/Buenos_Aires\", \"America/Catamarca\", \"America/Cordoba\", \"America/Jujuy\", \"America/Mendoza\"]\n    }, {\n      \"name\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\"America/Araguaina\", \"America/Belem\", \"America/Cayenne\", \"America/Fortaleza\", \"America/Maceio\", \"America/Paramaribo\", \"America/Recife\", \"America/Santarem\", \"Antarctica/Rothera\", \"Atlantic/Stanley\", \"Etc/GMT+3\"]\n    }, {\n      \"name\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -2,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\"America/Godthab\"]\n    }, {\n      \"name\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\"America/Montevideo\"]\n    }, {\n      \"name\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\"America/Bahia\"]\n    }, {\n      \"name\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\"America/Noronha\", \"Atlantic/South_Georgia\", \"Etc/GMT+2\"]\n    }, {\n      \"name\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\"\n    }, {\n      \"name\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\"America/Scoresbysund\", \"Atlantic/Azores\"]\n    }, {\n      \"name\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\"Atlantic/Cape_Verde\", \"Etc/GMT+1\"]\n    }, {\n      \"name\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\"Africa/Casablanca\", \"Africa/El_Aaiun\"]\n    }, {\n      \"name\": \"UTC\",\n      \"abbr\": \"CUT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\"America/Danmarkshavn\", \"Etc/GMT\"]\n    }, {\n      \"name\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n      \"utc\": [\"Atlantic/Canary\", \"Atlantic/Faeroe\", \"Atlantic/Madeira\", \"Europe/Dublin\", \"Europe/Guernsey\", \"Europe/Isle_of_Man\", \"Europe/Jersey\", \"Europe/Lisbon\", \"Europe/London\"]\n    }, {\n      \"name\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\"Africa/Abidjan\", \"Africa/Accra\", \"Africa/Bamako\", \"Africa/Banjul\", \"Africa/Bissau\", \"Africa/Conakry\", \"Africa/Dakar\", \"Africa/Freetown\", \"Africa/Lome\", \"Africa/Monrovia\", \"Africa/Nouakchott\", \"Africa/Ouagadougou\", \"Africa/Sao_Tome\", \"Atlantic/Reykjavik\", \"Atlantic/St_Helena\"]\n    }, {\n      \"name\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\"Arctic/Longyearbyen\", \"Europe/Amsterdam\", \"Europe/Andorra\", \"Europe/Berlin\", \"Europe/Busingen\", \"Europe/Gibraltar\", \"Europe/Luxembourg\", \"Europe/Malta\", \"Europe/Monaco\", \"Europe/Oslo\", \"Europe/Rome\", \"Europe/San_Marino\", \"Europe/Stockholm\", \"Europe/Vaduz\", \"Europe/Vatican\", \"Europe/Vienna\", \"Europe/Zurich\"]\n    }, {\n      \"name\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\"Europe/Belgrade\", \"Europe/Bratislava\", \"Europe/Budapest\", \"Europe/Ljubljana\", \"Europe/Podgorica\", \"Europe/Prague\", \"Europe/Tirane\"]\n    }, {\n      \"name\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\"Africa/Ceuta\", \"Europe/Brussels\", \"Europe/Copenhagen\", \"Europe/Madrid\", \"Europe/Paris\"]\n    }, {\n      \"name\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\"Europe/Sarajevo\", \"Europe/Skopje\", \"Europe/Warsaw\", \"Europe/Zagreb\"]\n    }, {\n      \"name\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\"Africa/Algiers\", \"Africa/Bangui\", \"Africa/Brazzaville\", \"Africa/Douala\", \"Africa/Kinshasa\", \"Africa/Lagos\", \"Africa/Libreville\", \"Africa/Luanda\", \"Africa/Malabo\", \"Africa/Ndjamena\", \"Africa/Niamey\", \"Africa/Porto-Novo\", \"Africa/Tunis\", \"Etc/GMT-1\"]\n    }, {\n      \"name\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\"Africa/Windhoek\"]\n    }, {\n      \"name\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\"Asia/Nicosia\", \"Europe/Athens\", \"Europe/Bucharest\", \"Europe/Chisinau\"]\n    }, {\n      \"name\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\"Asia/Beirut\"]\n    }, {\n      \"name\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\"Africa/Cairo\"]\n    }, {\n      \"name\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\"Asia/Damascus\"]\n    }, {\n      \"name\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\"\n    }, {\n      \"name\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\"Africa/Blantyre\", \"Africa/Bujumbura\", \"Africa/Gaborone\", \"Africa/Harare\", \"Africa/Johannesburg\", \"Africa/Kigali\", \"Africa/Lubumbashi\", \"Africa/Lusaka\", \"Africa/Maputo\", \"Africa/Maseru\", \"Africa/Mbabane\", \"Etc/GMT-2\"]\n    }, {\n      \"name\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\"Europe/Helsinki\", \"Europe/Kiev\", \"Europe/Mariehamn\", \"Europe/Riga\", \"Europe/Sofia\", \"Europe/Tallinn\", \"Europe/Uzhgorod\", \"Europe/Vilnius\", \"Europe/Zaporozhye\"]\n    }, {\n      \"name\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Istanbul\",\n      \"utc\": [\"Europe/Istanbul\"]\n    }, {\n      \"name\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\"Asia/Jerusalem\"]\n    }, {\n      \"name\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\"Africa/Tripoli\"]\n    }, {\n      \"name\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\"Asia/Amman\"]\n    }, {\n      \"name\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\"Asia/Baghdad\"]\n    }, {\n      \"name\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kaliningrad, Minsk\",\n      \"utc\": [\"Europe/Kaliningrad\", \"Europe/Minsk\"]\n    }, {\n      \"name\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\"Asia/Aden\", \"Asia/Bahrain\", \"Asia/Kuwait\", \"Asia/Qatar\", \"Asia/Riyadh\"]\n    }, {\n      \"name\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\"Africa/Addis_Ababa\", \"Africa/Asmera\", \"Africa/Dar_es_Salaam\", \"Africa/Djibouti\", \"Africa/Juba\", \"Africa/Kampala\", \"Africa/Khartoum\", \"Africa/Mogadishu\", \"Africa/Nairobi\", \"Antarctica/Syowa\", \"Etc/GMT-3\", \"Indian/Antananarivo\", \"Indian/Comoro\", \"Indian/Mayotte\"]\n    }, {\n      \"name\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\"Asia/Tehran\"]\n    }, {\n      \"name\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\"Asia/Dubai\", \"Asia/Muscat\", \"Etc/GMT-4\"]\n    }, {\n      \"name\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\"Asia/Baku\"]\n    }, {\n      \"name\": \"Russian Standard Time\",\n      \"abbr\": \"RST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n      \"utc\": [\"Europe/Moscow\", \"Europe/Samara\", \"Europe/Simferopol\", \"Europe/Volgograd\"]\n    }, {\n      \"name\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\"Indian/Mahe\", \"Indian/Mauritius\", \"Indian/Reunion\"]\n    }, {\n      \"name\": \"Georgian Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\"Asia/Tbilisi\"]\n    }, {\n      \"name\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\"Asia/Yerevan\"]\n    }, {\n      \"name\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\"Asia/Kabul\"]\n    }, {\n      \"name\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\"Antarctica/Mawson\", \"Asia/Aqtau\", \"Asia/Aqtobe\", \"Asia/Ashgabat\", \"Asia/Dushanbe\", \"Asia/Oral\", \"Asia/Samarkand\", \"Asia/Tashkent\", \"Etc/GMT-5\", \"Indian/Kerguelen\", \"Indian/Maldives\"]\n    }, {\n      \"name\": \"Pakistan Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\"Asia/Karachi\"]\n    }, {\n      \"name\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\"Asia/Calcutta\"]\n    }, {\n      \"name\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\"Asia/Colombo\"]\n    }, {\n      \"name\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\"Asia/Katmandu\"]\n    }, {\n      \"name\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Astana\",\n      \"utc\": [\"Antarctica/Vostok\", \"Asia/Almaty\", \"Asia/Bishkek\", \"Asia/Qyzylorda\", \"Asia/Urumqi\", \"Etc/GMT-6\", \"Indian/Chagos\"]\n    }, {\n      \"name\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\"Asia/Dhaka\", \"Asia/Thimphu\"]\n    }, {\n      \"name\": \"Ekaterinburg Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Ekaterinburg\",\n      \"utc\": [\"Asia/Yekaterinburg\"]\n    }, {\n      \"name\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\"Asia/Rangoon\", \"Indian/Cocos\"]\n    }, {\n      \"name\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\"Antarctica/Davis\", \"Asia/Bangkok\", \"Asia/Hovd\", \"Asia/Jakarta\", \"Asia/Phnom_Penh\", \"Asia/Pontianak\", \"Asia/Saigon\", \"Asia/Vientiane\", \"Etc/GMT-7\", \"Indian/Christmas\"]\n    }, {\n      \"name\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\"Asia/Novokuznetsk\", \"Asia/Novosibirsk\", \"Asia/Omsk\"]\n    }, {\n      \"name\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\"Asia/Hong_Kong\", \"Asia/Macau\", \"Asia/Shanghai\"]\n    }, {\n      \"name\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\"Asia/Krasnoyarsk\"]\n    }, {\n      \"name\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\"Asia/Brunei\", \"Asia/Kuala_Lumpur\", \"Asia/Kuching\", \"Asia/Makassar\", \"Asia/Manila\", \"Asia/Singapore\", \"Etc/GMT-8\"]\n    }, {\n      \"name\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\"Antarctica/Casey\", \"Australia/Perth\"]\n    }, {\n      \"name\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\"Asia/Taipei\"]\n    }, {\n      \"name\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\"Asia/Choibalsan\", \"Asia/Ulaanbaatar\"]\n    }, {\n      \"name\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Irkutsk\",\n      \"utc\": [\"Asia/Irkutsk\"]\n    }, {\n      \"name\": \"Tokyo Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\"Asia/Dili\", \"Asia/Jayapura\", \"Asia/Tokyo\", \"Etc/GMT-9\", \"Pacific/Palau\"]\n    }, {\n      \"name\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\"Asia/Pyongyang\", \"Asia/Seoul\"]\n    }, {\n      \"name\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\"Australia/Adelaide\", \"Australia/Broken_Hill\"]\n    }, {\n      \"name\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\"Australia/Darwin\"]\n    }, {\n      \"name\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\"Australia/Brisbane\", \"Australia/Lindeman\"]\n    }, {\n      \"name\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\"Australia/Melbourne\", \"Australia/Sydney\"]\n    }, {\n      \"name\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\"Antarctica/DumontDUrville\", \"Etc/GMT-10\", \"Pacific/Guam\", \"Pacific/Port_Moresby\", \"Pacific/Saipan\", \"Pacific/Truk\"]\n    }, {\n      \"name\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\"Australia/Currie\", \"Australia/Hobart\"]\n    }, {\n      \"name\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Yakutsk\",\n      \"utc\": [\"Asia/Chita\", \"Asia/Khandyga\", \"Asia/Yakutsk\"]\n    }, {\n      \"name\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\"Antarctica/Macquarie\", \"Etc/GMT-11\", \"Pacific/Efate\", \"Pacific/Guadalcanal\", \"Pacific/Kosrae\", \"Pacific/Noumea\", \"Pacific/Ponape\"]\n    }, {\n      \"name\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\"Asia/Sakhalin\", \"Asia/Ust-Nera\", \"Asia/Vladivostok\"]\n    }, {\n      \"name\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\"Antarctica/McMurdo\", \"Pacific/Auckland\"]\n    }, {\n      \"name\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\"Etc/GMT-12\", \"Pacific/Funafuti\", \"Pacific/Kwajalein\", \"Pacific/Majuro\", \"Pacific/Nauru\", \"Pacific/Tarawa\", \"Pacific/Wake\", \"Pacific/Wallis\"]\n    }, {\n      \"name\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\"Pacific/Fiji\"]\n    }, {\n      \"name\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\"Asia/Anadyr\", \"Asia/Kamchatka\", \"Asia/Magadan\", \"Asia/Srednekolymsk\"]\n    }, {\n      \"name\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\"\n    }, {\n      \"name\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\"Etc/GMT-13\", \"Pacific/Enderbury\", \"Pacific/Fakaofo\", \"Pacific/Tongatapu\"]\n    }, {\n      \"name\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\"Pacific/Apia\"]\n    }],\n    //List source: http://answers.google.com/answers/threadview/id/589312.html\n    profession: [\"Airline Pilot\", \"Academic Team\", \"Accountant\", \"Account Executive\", \"Actor\", \"Actuary\", \"Acquisition Analyst\", \"Administrative Asst.\", \"Administrative Analyst\", \"Administrator\", \"Advertising Director\", \"Aerospace Engineer\", \"Agent\", \"Agricultural Inspector\", \"Agricultural Scientist\", \"Air Traffic Controller\", \"Animal Trainer\", \"Anthropologist\", \"Appraiser\", \"Architect\", \"Art Director\", \"Artist\", \"Astronomer\", \"Athletic Coach\", \"Auditor\", \"Author\", \"Baker\", \"Banker\", \"Bankruptcy Attorney\", \"Benefits Manager\", \"Biologist\", \"Bio-feedback Specialist\", \"Biomedical Engineer\", \"Biotechnical Researcher\", \"Broadcaster\", \"Broker\", \"Building Manager\", \"Building Contractor\", \"Building Inspector\", \"Business Analyst\", \"Business Planner\", \"Business Manager\", \"Buyer\", \"Call Center Manager\", \"Career Counselor\", \"Cash Manager\", \"Ceramic Engineer\", \"Chief Executive Officer\", \"Chief Operation Officer\", \"Chef\", \"Chemical Engineer\", \"Chemist\", \"Child Care Manager\", \"Chief Medical Officer\", \"Chiropractor\", \"Cinematographer\", \"City Housing Manager\", \"City Manager\", \"Civil Engineer\", \"Claims Manager\", \"Clinical Research Assistant\", \"Collections Manager.\", \"Compliance Manager\", \"Comptroller\", \"Computer Manager\", \"Commercial Artist\", \"Communications Affairs Director\", \"Communications Director\", \"Communications Engineer\", \"Compensation Analyst\", \"Computer Programmer\", \"Computer Ops. Manager\", \"Computer Engineer\", \"Computer Operator\", \"Computer Graphics Specialist\", \"Construction Engineer\", \"Construction Manager\", \"Consultant\", \"Consumer Relations Manager\", \"Contract Administrator\", \"Copyright Attorney\", \"Copywriter\", \"Corporate Planner\", \"Corrections Officer\", \"Cosmetologist\", \"Credit Analyst\", \"Cruise Director\", \"Chief Information Officer\", \"Chief Technology Officer\", \"Customer Service Manager\", \"Cryptologist\", \"Dancer\", \"Data Security Manager\", \"Database Manager\", \"Day Care Instructor\", \"Dentist\", \"Designer\", \"Design Engineer\", \"Desktop Publisher\", \"Developer\", \"Development Officer\", \"Diamond Merchant\", \"Dietitian\", \"Direct Marketer\", \"Director\", \"Distribution Manager\", \"Diversity Manager\", \"Economist\", \"EEO Compliance Manager\", \"Editor\", \"Education Adminator\", \"Electrical Engineer\", \"Electro Optical Engineer\", \"Electronics Engineer\", \"Embassy Management\", \"Employment Agent\", \"Engineer Technician\", \"Entrepreneur\", \"Environmental Analyst\", \"Environmental Attorney\", \"Environmental Engineer\", \"Environmental Specialist\", \"Escrow Officer\", \"Estimator\", \"Executive Assistant\", \"Executive Director\", \"Executive Recruiter\", \"Facilities Manager\", \"Family Counselor\", \"Fashion Events Manager\", \"Fashion Merchandiser\", \"Fast Food Manager\", \"Film Producer\", \"Film Production Assistant\", \"Financial Analyst\", \"Financial Planner\", \"Financier\", \"Fine Artist\", \"Wildlife Specialist\", \"Fitness Consultant\", \"Flight Attendant\", \"Flight Engineer\", \"Floral Designer\", \"Food & Beverage Director\", \"Food Service Manager\", \"Forestry Technician\", \"Franchise Management\", \"Franchise Sales\", \"Fraud Investigator\", \"Freelance Writer\", \"Fund Raiser\", \"General Manager\", \"Geologist\", \"General Counsel\", \"Geriatric Specialist\", \"Gerontologist\", \"Glamour Photographer\", \"Golf Club Manager\", \"Gourmet Chef\", \"Graphic Designer\", \"Grounds Keeper\", \"Hazardous Waste Manager\", \"Health Care Manager\", \"Health Therapist\", \"Health Service Administrator\", \"Hearing Officer\", \"Home Economist\", \"Horticulturist\", \"Hospital Administrator\", \"Hotel Manager\", \"Human Resources Manager\", \"Importer\", \"Industrial Designer\", \"Industrial Engineer\", \"Information Director\", \"Inside Sales\", \"Insurance Adjuster\", \"Interior Decorator\", \"Internal Controls Director\", \"International Acct.\", \"International Courier\", \"International Lawyer\", \"Interpreter\", \"Investigator\", \"Investment Banker\", \"Investment Manager\", \"IT Architect\", \"IT Project Manager\", \"IT Systems Analyst\", \"Jeweler\", \"Joint Venture Manager\", \"Journalist\", \"Labor Negotiator\", \"Labor Organizer\", \"Labor Relations Manager\", \"Lab Services Director\", \"Lab Technician\", \"Land Developer\", \"Landscape Architect\", \"Law Enforcement Officer\", \"Lawyer\", \"Lead Software Engineer\", \"Lead Software Test Engineer\", \"Leasing Manager\", \"Legal Secretary\", \"Library Manager\", \"Litigation Attorney\", \"Loan Officer\", \"Lobbyist\", \"Logistics Manager\", \"Maintenance Manager\", \"Management Consultant\", \"Managed Care Director\", \"Managing Partner\", \"Manufacturing Director\", \"Manpower Planner\", \"Marine Biologist\", \"Market Res. Analyst\", \"Marketing Director\", \"Materials Manager\", \"Mathematician\", \"Membership Chairman\", \"Mechanic\", \"Mechanical Engineer\", \"Media Buyer\", \"Medical Investor\", \"Medical Secretary\", \"Medical Technician\", \"Mental Health Counselor\", \"Merchandiser\", \"Metallurgical Engineering\", \"Meteorologist\", \"Microbiologist\", \"MIS Manager\", \"Motion Picture Director\", \"Multimedia Director\", \"Musician\", \"Network Administrator\", \"Network Specialist\", \"Network Operator\", \"New Product Manager\", \"Novelist\", \"Nuclear Engineer\", \"Nuclear Specialist\", \"Nutritionist\", \"Nursing Administrator\", \"Occupational Therapist\", \"Oceanographer\", \"Office Manager\", \"Operations Manager\", \"Operations Research Director\", \"Optical Technician\", \"Optometrist\", \"Organizational Development Manager\", \"Outplacement Specialist\", \"Paralegal\", \"Park Ranger\", \"Patent Attorney\", \"Payroll Specialist\", \"Personnel Specialist\", \"Petroleum Engineer\", \"Pharmacist\", \"Photographer\", \"Physical Therapist\", \"Physician\", \"Physician Assistant\", \"Physicist\", \"Planning Director\", \"Podiatrist\", \"Political Analyst\", \"Political Scientist\", \"Politician\", \"Portfolio Manager\", \"Preschool Management\", \"Preschool Teacher\", \"Principal\", \"Private Banker\", \"Private Investigator\", \"Probation Officer\", \"Process Engineer\", \"Producer\", \"Product Manager\", \"Product Engineer\", \"Production Engineer\", \"Production Planner\", \"Professional Athlete\", \"Professional Coach\", \"Professor\", \"Project Engineer\", \"Project Manager\", \"Program Manager\", \"Property Manager\", \"Public Administrator\", \"Public Safety Director\", \"PR Specialist\", \"Publisher\", \"Purchasing Agent\", \"Publishing Director\", \"Quality Assurance Specialist\", \"Quality Control Engineer\", \"Quality Control Inspector\", \"Radiology Manager\", \"Railroad Engineer\", \"Real Estate Broker\", \"Recreational Director\", \"Recruiter\", \"Redevelopment Specialist\", \"Regulatory Affairs Manager\", \"Registered Nurse\", \"Rehabilitation Counselor\", \"Relocation Manager\", \"Reporter\", \"Research Specialist\", \"Restaurant Manager\", \"Retail Store Manager\", \"Risk Analyst\", \"Safety Engineer\", \"Sales Engineer\", \"Sales Trainer\", \"Sales Promotion Manager\", \"Sales Representative\", \"Sales Manager\", \"Service Manager\", \"Sanitation Engineer\", \"Scientific Programmer\", \"Scientific Writer\", \"Securities Analyst\", \"Security Consultant\", \"Security Director\", \"Seminar Presenter\", \"Ship's Officer\", \"Singer\", \"Social Director\", \"Social Program Planner\", \"Social Research\", \"Social Scientist\", \"Social Worker\", \"Sociologist\", \"Software Developer\", \"Software Engineer\", \"Software Test Engineer\", \"Soil Scientist\", \"Special Events Manager\", \"Special Education Teacher\", \"Special Projects Director\", \"Speech Pathologist\", \"Speech Writer\", \"Sports Event Manager\", \"Statistician\", \"Store Manager\", \"Strategic Alliance Director\", \"Strategic Planning Director\", \"Stress Reduction Specialist\", \"Stockbroker\", \"Surveyor\", \"Structural Engineer\", \"Superintendent\", \"Supply Chain Director\", \"System Engineer\", \"Systems Analyst\", \"Systems Programmer\", \"System Administrator\", \"Tax Specialist\", \"Teacher\", \"Technical Support Specialist\", \"Technical Illustrator\", \"Technical Writer\", \"Technology Director\", \"Telecom Analyst\", \"Telemarketer\", \"Theatrical Director\", \"Title Examiner\", \"Tour Escort\", \"Tour Guide Director\", \"Traffic Manager\", \"Trainer Translator\", \"Transportation Manager\", \"Travel Agent\", \"Treasurer\", \"TV Programmer\", \"Underwriter\", \"Union Representative\", \"University Administrator\", \"University Dean\", \"Urban Planner\", \"Veterinarian\", \"Vendor Relations Director\", \"Viticulturist\", \"Warehouse Manager\"],\n    animals: {\n      //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\n      \"ocean\": [\"Acantharea\", \"Anemone\", \"Angelfish King\", \"Ahi Tuna\", \"Albacore\", \"American Oyster\", \"Anchovy\", \"Armored Snail\", \"Arctic Char\", \"Atlantic Bluefin Tuna\", \"Atlantic Cod\", \"Atlantic Goliath Grouper\", \"Atlantic Trumpetfish\", \"Atlantic Wolffish\", \"Baleen Whale\", \"Banded Butterflyfish\", \"Banded Coral Shrimp\", \"Banded Sea Krait\", \"Barnacle\", \"Barndoor Skate\", \"Barracuda\", \"Basking Shark\", \"Bass\", \"Beluga Whale\", \"Bluebanded Goby\", \"Bluehead Wrasse\", \"Bluefish\", \"Bluestreak Cleaner-Wrasse\", \"Blue Marlin\", \"Blue Shark\", \"Blue Spiny Lobster\", \"Blue Tang\", \"Blue Whale\", \"Broadclub Cuttlefish\", \"Bull Shark\", \"Chambered Nautilus\", \"Chilean Basket Star\", \"Chilean Jack Mackerel\", \"Chinook Salmon\", \"Christmas Tree Worm\", \"Clam\", \"Clown Anemonefish\", \"Clown Triggerfish\", \"Cod\", \"Coelacanth\", \"Cockscomb Cup Coral\", \"Common Fangtooth\", \"Conch\", \"Cookiecutter Shark\", \"Copepod\", \"Coral\", \"Corydoras\", \"Cownose Ray\", \"Crab\", \"Crown-of-Thorns Starfish\", \"Cushion Star\", \"Cuttlefish\", \"California Sea Otters\", \"Dolphin\", \"Dolphinfish\", \"Dory\", \"Devil Fish\", \"Dugong\", \"Dumbo Octopus\", \"Dungeness Crab\", \"Eccentric Sand Dollar\", \"Edible Sea Cucumber\", \"Eel\", \"Elephant Seal\", \"Elkhorn Coral\", \"Emperor Shrimp\", \"Estuarine Crocodile\", \"Fathead Sculpin\", \"Fiddler Crab\", \"Fin Whale\", \"Flameback\", \"Flamingo Tongue Snail\", \"Flashlight Fish\", \"Flatback Turtle\", \"Flatfish\", \"Flying Fish\", \"Flounder\", \"Fluke\", \"French Angelfish\", \"Frilled Shark\", \"Fugu (also called Pufferfish)\", \"Gar\", \"Geoduck\", \"Giant Barrel Sponge\", \"Giant Caribbean Sea Anemone\", \"Giant Clam\", \"Giant Isopod\", \"Giant Kingfish\", \"Giant Oarfish\", \"Giant Pacific Octopus\", \"Giant Pyrosome\", \"Giant Sea Star\", \"Giant Squid\", \"Glowing Sucker Octopus\", \"Giant Tube Worm\", \"Goblin Shark\", \"Goosefish\", \"Great White Shark\", \"Greenland Shark\", \"Grey Atlantic Seal\", \"Grouper\", \"Grunion\", \"Guineafowl Puffer\", \"Haddock\", \"Hake\", \"Halibut\", \"Hammerhead Shark\", \"Hapuka\", \"Harbor Porpoise\", \"Harbor Seal\", \"Hatchetfish\", \"Hawaiian Monk Seal\", \"Hawksbill Turtle\", \"Hector's Dolphin\", \"Hermit Crab\", \"Herring\", \"Hoki\", \"Horn Shark\", \"Horseshoe Crab\", \"Humpback Anglerfish\", \"Humpback Whale\", \"Icefish\", \"Imperator Angelfish\", \"Irukandji Jellyfish\", \"Isopod\", \"Ivory Bush Coral\", \"Japanese Spider Crab\", \"Jellyfish\", \"John Dory\", \"Juan Fernandez Fur Seal\", \"Killer Whale\", \"Kiwa Hirsuta\", \"Krill\", \"Lagoon Triggerfish\", \"Lamprey\", \"Leafy Seadragon\", \"Leopard Seal\", \"Limpet\", \"Ling\", \"Lionfish\", \"Lions Mane Jellyfish\", \"Lobe Coral\", \"Lobster\", \"Loggerhead Turtle\", \"Longnose Sawshark\", \"Longsnout Seahorse\", \"Lophelia Coral\", \"Marrus Orthocanna\", \"Manatee\", \"Manta Ray\", \"Marlin\", \"Megamouth Shark\", \"Mexican Lookdown\", \"Mimic Octopus\", \"Moon Jelly\", \"Mollusk\", \"Monkfish\", \"Moray Eel\", \"Mullet\", \"Mussel\", \"Megaladon\", \"Napoleon Wrasse\", \"Nassau Grouper\", \"Narwhal\", \"Nautilus\", \"Needlefish\", \"Northern Seahorse\", \"North Atlantic Right Whale\", \"Northern Red Snapper\", \"Norway Lobster\", \"Nudibranch\", \"Nurse Shark\", \"Oarfish\", \"Ocean Sunfish\", \"Oceanic Whitetip Shark\", \"Octopus\", \"Olive Sea Snake\", \"Orange Roughy\", \"Ostracod\", \"Otter\", \"Oyster\", \"Pacific Angelshark\", \"Pacific Blackdragon\", \"Pacific Halibut\", \"Pacific Sardine\", \"Pacific Sea Nettle Jellyfish\", \"Pacific White Sided Dolphin\", \"Pantropical Spotted Dolphin\", \"Patagonian Toothfish\", \"Peacock Mantis Shrimp\", \"Pelagic Thresher Shark\", \"Penguin\", \"Peruvian Anchoveta\", \"Pilchard\", \"Pink Salmon\", \"Pinniped\", \"Plankton\", \"Porpoise\", \"Polar Bear\", \"Portuguese Man o' War\", \"Pycnogonid Sea Spider\", \"Quahog\", \"Queen Angelfish\", \"Queen Conch\", \"Queen Parrotfish\", \"Queensland Grouper\", \"Ragfish\", \"Ratfish\", \"Rattail Fish\", \"Ray\", \"Red Drum\", \"Red King Crab\", \"Ringed Seal\", \"Risso's Dolphin\", \"Ross Seals\", \"Sablefish\", \"Salmon\", \"Sand Dollar\", \"Sandbar Shark\", \"Sawfish\", \"Sarcastic Fringehead\", \"Scalloped Hammerhead Shark\", \"Seahorse\", \"Sea Cucumber\", \"Sea Lion\", \"Sea Urchin\", \"Seal\", \"Shark\", \"Shortfin Mako Shark\", \"Shovelnose Guitarfish\", \"Shrimp\", \"Silverside Fish\", \"Skipjack Tuna\", \"Slender Snipe Eel\", \"Smalltooth Sawfish\", \"Smelts\", \"Sockeye Salmon\", \"Southern Stingray\", \"Sponge\", \"Spotted Porcupinefish\", \"Spotted Dolphin\", \"Spotted Eagle Ray\", \"Spotted Moray\", \"Squid\", \"Squidworm\", \"Starfish\", \"Stickleback\", \"Stonefish\", \"Stoplight Loosejaw\", \"Sturgeon\", \"Swordfish\", \"Tan Bristlemouth\", \"Tasseled Wobbegong\", \"Terrible Claw Lobster\", \"Threespot Damselfish\", \"Tiger Prawn\", \"Tiger Shark\", \"Tilefish\", \"Toadfish\", \"Tropical Two-Wing Flyfish\", \"Tuna\", \"Umbrella Squid\", \"Velvet Crab\", \"Venus Flytrap Sea Anemone\", \"Vigtorniella Worm\", \"Viperfish\", \"Vampire Squid\", \"Vaquita\", \"Wahoo\", \"Walrus\", \"West Indian Manatee\", \"Whale\", \"Whale Shark\", \"Whiptail Gulper\", \"White-Beaked Dolphin\", \"White-Ring Garden Eel\", \"White Shrimp\", \"Wobbegong\", \"Wrasse\", \"Wreckfish\", \"Xiphosura\", \"Yellowtail Damselfish\", \"Yelloweye Rockfish\", \"Yellow Cup Black Coral\", \"Yellow Tube Sponge\", \"Yellowfin Tuna\", \"Zebrashark\", \"Zooplankton\"],\n      //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\n      \"desert\": [\"Aardwolf\", \"Addax\", \"African Wild Ass\", \"Ant\", \"Antelope\", \"Armadillo\", \"Baboon\", \"Badger\", \"Bat\", \"Bearded Dragon\", \"Beetle\", \"Bird\", \"Black-footed Cat\", \"Boa\", \"Brown Bear\", \"Bustard\", \"Butterfly\", \"Camel\", \"Caracal\", \"Caracara\", \"Caterpillar\", \"Centipede\", \"Cheetah\", \"Chipmunk\", \"Chuckwalla\", \"Climbing Mouse\", \"Coati\", \"Cobra\", \"Cotton Rat\", \"Cougar\", \"Courser\", \"Crane Fly\", \"Crow\", \"Dassie Rat\", \"Dove\", \"Dunnart\", \"Eagle\", \"Echidna\", \"Elephant\", \"Emu\", \"Falcon\", \"Fly\", \"Fox\", \"Frogmouth\", \"Gecko\", \"Geoffroy's Cat\", \"Gerbil\", \"Grasshopper\", \"Guanaco\", \"Gundi\", \"Hamster\", \"Hawk\", \"Hedgehog\", \"Hyena\", \"Hyrax\", \"Jackal\", \"Kangaroo\", \"Kangaroo Rat\", \"Kestrel\", \"Kowari\", \"Kultarr\", \"Leopard\", \"Lion\", \"Macaw\", \"Meerkat\", \"Mouse\", \"Oryx\", \"Ostrich\", \"Owl\", \"Pronghorn\", \"Python\", \"Rabbit\", \"Raccoon\", \"Rattlesnake\", \"Rhinoceros\", \"Sand Cat\", \"Spectacled Bear\", \"Spiny Mouse\", \"Starling\", \"Stick Bug\", \"Tarantula\", \"Tit\", \"Toad\", \"Tortoise\", \"Tyrant Flycatcher\", \"Viper\", \"Vulture\", \"Waxwing\", \"Xerus\", \"Zebra\"],\n      \"grassland\": [\"Aardvark\", \"Aardwolf\", \"Accentor\", \"African Buffalo\", \"African Wild Dog\", \"Alpaca\", \"Anaconda\", \"Ant\", \"Anteater\", \"Antelope\", \"Armadillo\", \"Baboon\", \"Badger\", \"Bandicoot\", \"Barbet\", \"Bat\", \"Bee\", \"Bee-eater\", \"Beetle\", \"Bird\", \"Bison\", \"Black-footed Cat\", \"Black-footed Ferret\", \"Bluebird\", \"Boa\", \"Bowerbird\", \"Brown Bear\", \"Bush Dog\", \"Bushshrike\", \"Bustard\", \"Butterfly\", \"Buzzard\", \"Caracal\", \"Caracara\", \"Cardinal\", \"Caterpillar\", \"Cheetah\", \"Chipmunk\", \"Civet\", \"Climbing Mouse\", \"Clouded Leopard\", \"Coati\", \"Cobra\", \"Cockatoo\", \"Cockroach\", \"Common Genet\", \"Cotton Rat\", \"Cougar\", \"Courser\", \"Coyote\", \"Crane\", \"Crane Fly\", \"Cricket\", \"Crow\", \"Culpeo\", \"Death Adder\", \"Deer\", \"Deer Mouse\", \"Dingo\", \"Dinosaur\", \"Dove\", \"Drongo\", \"Duck\", \"Duiker\", \"Dunnart\", \"Eagle\", \"Echidna\", \"Elephant\", \"Elk\", \"Emu\", \"Falcon\", \"Finch\", \"Flea\", \"Fly\", \"Flying Frog\", \"Fox\", \"Frog\", \"Frogmouth\", \"Garter Snake\", \"Gazelle\", \"Gecko\", \"Geoffroy's Cat\", \"Gerbil\", \"Giant Tortoise\", \"Giraffe\", \"Grasshopper\", \"Grison\", \"Groundhog\", \"Grouse\", \"Guanaco\", \"Guinea Pig\", \"Hamster\", \"Harrier\", \"Hartebeest\", \"Hawk\", \"Hedgehog\", \"Helmetshrike\", \"Hippopotamus\", \"Hornbill\", \"Hyena\", \"Hyrax\", \"Impala\", \"Jackal\", \"Jaguar\", \"Jaguarundi\", \"Kangaroo\", \"Kangaroo Rat\", \"Kestrel\", \"Kultarr\", \"Ladybug\", \"Leopard\", \"Lion\", \"Macaw\", \"Meerkat\", \"Mouse\", \"Newt\", \"Oryx\", \"Ostrich\", \"Owl\", \"Pangolin\", \"Pheasant\", \"Prairie Dog\", \"Pronghorn\", \"Przewalski's Horse\", \"Python\", \"Quoll\", \"Rabbit\", \"Raven\", \"Rhinoceros\", \"Shelduck\", \"Sloth Bear\", \"Spectacled Bear\", \"Squirrel\", \"Starling\", \"Stick Bug\", \"Tamandua\", \"Tasmanian Devil\", \"Thornbill\", \"Thrush\", \"Toad\", \"Tortoise\"],\n      \"forest\": [\"Agouti\", \"Anaconda\", \"Anoa\", \"Ant\", \"Anteater\", \"Antelope\", \"Armadillo\", \"Asian Black Bear\", \"Aye-aye\", \"Babirusa\", \"Baboon\", \"Badger\", \"Bandicoot\", \"Banteng\", \"Barbet\", \"Basilisk\", \"Bat\", \"Bearded Dragon\", \"Bee\", \"Bee-eater\", \"Beetle\", \"Bettong\", \"Binturong\", \"Bird-of-paradise\", \"Bongo\", \"Bowerbird\", \"Bulbul\", \"Bush Dog\", \"Bushbaby\", \"Bushshrike\", \"Butterfly\", \"Buzzard\", \"Caecilian\", \"Cardinal\", \"Cassowary\", \"Caterpillar\", \"Centipede\", \"Chameleon\", \"Chimpanzee\", \"Cicada\", \"Civet\", \"Clouded Leopard\", \"Coati\", \"Cobra\", \"Cockatoo\", \"Cockroach\", \"Colugo\", \"Cotinga\", \"Cotton Rat\", \"Cougar\", \"Crane Fly\", \"Cricket\", \"Crocodile\", \"Crow\", \"Cuckoo\", \"Cuscus\", \"Death Adder\", \"Deer\", \"Dhole\", \"Dingo\", \"Dinosaur\", \"Drongo\", \"Duck\", \"Duiker\", \"Eagle\", \"Echidna\", \"Elephant\", \"Finch\", \"Flat-headed Cat\", \"Flea\", \"Flowerpecker\", \"Fly\", \"Flying Frog\", \"Fossa\", \"Frog\", \"Frogmouth\", \"Gaur\", \"Gecko\", \"Gorilla\", \"Grison\", \"Hawaiian Honeycreeper\", \"Hawk\", \"Hedgehog\", \"Helmetshrike\", \"Hornbill\", \"Hyrax\", \"Iguana\", \"Jackal\", \"Jaguar\", \"Jaguarundi\", \"Kestrel\", \"Ladybug\", \"Lemur\", \"Leopard\", \"Lion\", \"Macaw\", \"Mandrill\", \"Margay\", \"Monkey\", \"Mouse\", \"Mouse Deer\", \"Newt\", \"Okapi\", \"Old World Flycatcher\", \"Orangutan\", \"Owl\", \"Pangolin\", \"Peafowl\", \"Pheasant\", \"Possum\", \"Python\", \"Quokka\", \"Rabbit\", \"Raccoon\", \"Red Panda\", \"Red River Hog\", \"Rhinoceros\", \"Sloth Bear\", \"Spectacled Bear\", \"Squirrel\", \"Starling\", \"Stick Bug\", \"Sun Bear\", \"Tamandua\", \"Tamarin\", \"Tapir\", \"Tarantula\", \"Thrush\", \"Tiger\", \"Tit\", \"Toad\", \"Tortoise\", \"Toucan\", \"Trogon\", \"Trumpeter\", \"Turaco\", \"Turtle\", \"Tyrant Flycatcher\", \"Viper\", \"Vulture\", \"Wallaby\", \"Warbler\", \"Wasp\", \"Waxwing\", \"Weaver\", \"Weaver-finch\", \"Whistler\", \"White-eye\", \"Whydah\", \"Woodswallow\", \"Worm\", \"Wren\", \"Xenops\", \"Yellowjacket\", \"Accentor\", \"African Buffalo\", \"American Black Bear\", \"Anole\", \"Bird\", \"Bison\", \"Boa\", \"Brown Bear\", \"Chipmunk\", \"Common Genet\", \"Copperhead\", \"Coyote\", \"Deer Mouse\", \"Dormouse\", \"Elk\", \"Emu\", \"Fisher\", \"Fox\", \"Garter Snake\", \"Giant Panda\", \"Giant Tortoise\", \"Groundhog\", \"Grouse\", \"Guanaco\", \"Himalayan Tahr\", \"Kangaroo\", \"Koala\", \"Numbat\", \"Quoll\", \"Raccoon dog\", \"Tasmanian Devil\", \"Thornbill\", \"Turkey\", \"Vole\", \"Weasel\", \"Wildcat\", \"Wolf\", \"Wombat\", \"Woodchuck\", \"Woodpecker\"],\n      //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\n      \"farm\": [\"Alpaca\", \"Buffalo\", \"Banteng\", \"Cow\", \"Cat\", \"Chicken\", \"Carp\", \"Camel\", \"Donkey\", \"Dog\", \"Duck\", \"Emu\", \"Goat\", \"Gayal\", \"Guinea\", \"Goose\", \"Horse\", \"Honey\", \"Llama\", \"Pig\", \"Pigeon\", \"Rhea\", \"Rabbit\", \"Sheep\", \"Silkworm\", \"Turkey\", \"Yak\", \"Zebu\"],\n      //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\n      \"pet\": [\"Bearded Dragon\", \"Birds\", \"Burro\", \"Cats\", \"Chameleons\", \"Chickens\", \"Chinchillas\", \"Chinese Water Dragon\", \"Cows\", \"Dogs\", \"Donkey\", \"Ducks\", \"Ferrets\", \"Fish\", \"Geckos\", \"Geese\", \"Gerbils\", \"Goats\", \"Guinea Fowl\", \"Guinea Pigs\", \"Hamsters\", \"Hedgehogs\", \"Horses\", \"Iguanas\", \"Llamas\", \"Lizards\", \"Mice\", \"Mule\", \"Peafowl\", \"Pigs and Hogs\", \"Pigeons\", \"Ponies\", \"Pot Bellied Pig\", \"Rabbits\", \"Rats\", \"Sheep\", \"Skinks\", \"Snakes\", \"Stick Insects\", \"Sugar Gliders\", \"Tarantula\", \"Turkeys\", \"Turtles\"],\n      //list of zoo animals comes from https://bronxzoo.com/animals\n      \"zoo\": [\"Aardvark\", \"African Wild Dog\", \"Aldabra Tortoise\", \"American Alligator\", \"American Bison\", \"Amur Tiger\", \"Anaconda\", \"Andean Condor\", \"Asian Elephant\", \"Baby Doll Sheep\", \"Bald Eagle\", \"Barred Owl\", \"Blue Iguana\", \"Boer Goat\", \"California Sea Lion\", \"Caribbean Flamingo\", \"Chinchilla\", \"Collared Lemur\", \"Coquerel's Sifaka\", \"Cuban Amazon Parrot\", \"Ebony Langur\", \"Fennec Fox\", \"Fossa\", \"Gelada\", \"Giant Anteater\", \"Giraffe\", \"Gorilla\", \"Grizzly Bear\", \"Henkel's Leaf-tailed Gecko\", \"Indian Gharial\", \"Indian Rhinoceros\", \"King Cobra\", \"King Vulture\", \"Komodo Dragon\", \"Linne's Two-toed Sloth\", \"Lion\", \"Little Penguin\", \"Madagascar Tree Boa\", \"Magellanic Penguin\", \"Malayan Tapir\", \"Malayan Tiger\", \"Matschies Tree Kangaroo\", \"Mini Donkey\", \"Monarch Butterfly\", \"Nile crocodile\", \"North American Porcupine\", \"Nubian Ibex\", \"Okapi\", \"Poison Dart Frog\", \"Polar Bear\", \"Pygmy Marmoset\", \"Radiated Tortoise\", \"Red Panda\", \"Red Ruffed Lemur\", \"Ring-tailed Lemur\", \"Ring-tailed Mongoose\", \"Rock Hyrax\", \"Small Clawed Asian Otter\", \"Snow Leopard\", \"Snowy Owl\", \"Southern White-faced Owl\", \"Southern White Rhinocerous\", \"Squirrel Monkey\", \"Tufted Puffin\", \"White Cheeked Gibbon\", \"White-throated Bee Eater\", \"Zebra\"]\n    },\n    primes: [// 1230 first primes, i.e. all primes up to the first one greater than 10000, inclusive.\nn  };\n  var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var o_keys = Object.keys || function (obj) {\n    var result = [];\n\n    for (var key in obj) {\n      if (o_hasOwnProperty.call(obj, key)) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  };\n\n  function _copyObject(source, target) {\n    var keys = o_keys(source);\n    var key;\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      target[key] = source[key] || target[key];\n    }\n  }\n\n  function _copyArray(source, target) {\n    for (var i = 0, l = source.length; i < l; i++) {\n      target[i] = source[i];\n    }\n  }\n\n  function copyObject(source, _target) {\n    var isArray = Array.isArray(source);\n    var target = _target || (isArray ? new Array(source.length) : {});\n\n    if (isArray) {\n      _copyArray(source, target);\n    } else {\n      _copyObject(source, target);\n    }\n\n    return target;\n  }\n  /** Get the data based on key**/\n\n\n  Chance.prototype.get = function (name) {\n    return copyObject(data[name]);\n  }; // Mac Address\n\n\n  Chance.prototype.mac_address = function (options) {\n    // typically mac addresses are separated by \":\"\n    // however they can also be separated by \"-\"\n    // the network variant uses a dot every fourth byte\n    options = initOptions(options);\n\n    if (!options.separator) {\n      options.separator = options.networkVersion ? \".\" : \":\";\n    }\n\n    var mac_pool = \"ABCDEF1234567890\",\n        mac = \"\";\n\n    if (!options.networkVersion) {\n      mac = this.n(this.string, 6, {\n        pool: mac_pool,\n        length: 2\n      }).join(options.separator);\n    } else {\n      mac = this.n(this.string, 3, {\n        pool: mac_pool,\n        length: 4\n      }).join(options.separator);\n    }\n\n    return mac;\n  };\n\n  Chance.prototype.normal = function (options) {\n    options = initOptions(options, {\n      mean: 0,\n      dev: 1,\n      pool: []\n    });\n    testRange(options.pool.constructor !== Array, \"Chance: The pool option must be a valid array.\");\n    testRange(typeof options.mean !== 'number', \"Chance: Mean (mean) must be a number\");\n    testRange(typeof options.dev !== 'number', \"Chance: Standard deviation (dev) must be a number\"); // If a pool has been passed, then we are returning an item from that pool,\n    // using the normal distribution settings that were passed in\n\n    if (options.pool.length > 0) {\n      return this.normal_pool(options);\n    } // The Marsaglia Polar method\n\n\n    var s,\n        u,\n        v,\n        norm,\n        mean = options.mean,\n        dev = options.dev;\n\n    do {\n      // U and V are from the uniform distribution on (-1, 1)\n      u = this.random() * 2 - 1;\n      v = this.random() * 2 - 1;\n      s = u * u + v * v;\n    } while (s >= 1); // Compute the standard normal variate\n\n\n    norm = u * Math.sqrt(-2 * Math.log(s) / s); // Shape and scale\n\n    return dev * norm + mean;\n  };\n\n  Chance.prototype.normal_pool = function (options) {\n    var performanceCounter = 0;\n\n    do {\n      var idx = Math.round(this.normal({\n        mean: options.mean,\n        dev: options.dev\n      }));\n\n      if (idx < options.pool.length && idx >= 0) {\n        return options.pool[idx];\n      } else {\n        performanceCounter++;\n      }\n    } while (performanceCounter < 100);\n\n    throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n  };\n\n  Chance.prototype.radio = function (options) {\n    // Initial Letter (Typically Designated by Side of Mississippi River)\n    options = initOptions(options, {\n      side: \"?\"\n    });\n    var fl = \"\";\n\n    switch (options.side.toLowerCase()) {\n      case \"east\":\n      case \"e\":\n        fl = \"W\";\n        break;\n\n      case \"west\":\n      case \"w\":\n        fl = \"K\";\n        break;\n\n      default:\n        fl = this.character({\n          pool: \"KW\"\n        });\n        break;\n    }\n\n    return fl + this.character({\n      alpha: true,\n      casing: \"upper\"\n    }) + this.character({\n      alpha: true,\n      casing: \"upper\"\n    }) + this.character({\n      alpha: true,\n      casing: \"upper\"\n    });\n  }; // Set the data as key and data or the data map\n\n\n  Chance.prototype.set = function (name, values) {\n    if (typeof name === \"string\") {\n      data[name] = values;\n    } else {\n      data = copyObject(name, data);\n    }\n  };\n\n  Chance.prototype.tv = function (options) {\n    return this.radio(options);\n  }; // ID number for Brazil companies\n\n\n  Chance.prototype.cnpj = function () {\n    var n = this.n(this.natural, 8, {\n      max: 9\n    });\n    var d1 = 2 + n[7] * 6 + n[6] * 7 + n[5] * 8 + n[4] * 9 + n[3] * 2 + n[2] * 3 + n[1] * 4 + n[0] * 5;\n    d1 = 11 - d1 % 11;\n\n    if (d1 >= 10) {\n      d1 = 0;\n    }\n\n    var d2 = d1 * 2 + 3 + n[7] * 7 + n[6] * 8 + n[5] * 9 + n[4] * 2 + n[3] * 3 + n[2] * 4 + n[1] * 5 + n[0] * 6;\n    d2 = 11 - d2 % 11;\n\n    if (d2 >= 10) {\n      d2 = 0;\n    }\n\n    return '' + n[0] + n[1] + '.' + n[2] + n[3] + n[4] + '.' + n[5] + n[6] + n[7] + '/0001-' + d1 + d2;\n  }; // -- End Miscellaneous --\n\n\n  Chance.prototype.mersenne_twister = function (seed) {\n    return new MersenneTwister(seed);\n  };\n\n  Chance.prototype.blueimp_md5 = function () {\n    return new BlueImpMD5();\n  }; // Mersenne Twister from https://gist.github.com/banksean/300494\n\n  /*\n     A C-program for MT19937, with initialization improved 2002/1/26.\n     Coded by Takuji Nishimura and Makoto Matsumoto.\n      Before using, initialize the state by using init_genrand(seed)\n     or init_by_array(init_key, key_length).\n      Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n     All rights reserved.\n      Redistribution and use in source and binary forms, with or without\n     modification, are permitted provided that the following conditions\n     are met:\n      1. Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n      2. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n      3. The names of its contributors may not be used to endorse or promote\n     products derived from this software without specific prior written\n     permission.\n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n     \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n     A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n     CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n     EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n     PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n     PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n     LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n       Any feedback is very welcome.\n     http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n     email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n   */\n\n\n  var MersenneTwister = function MersenneTwister(seed) {\n    if (seed === undefined) {\n      // kept random number same size as time used previously to ensure no unexpected results downstream\n      seed = Math.floor(Math.random() * Math.pow(10, 13));\n    }\n    /* Period parameters */\n\n\n    this.N = 624;\n    this.M = 397;\n    this.MATRIX_A = 0x9908b0df;\n    /* constant vector a */\n\n    this.UPPER_MASK = 0x80000000;\n    /* most significant w-r bits */\n\n    this.LOWER_MASK = 0x7fffffff;\n    /* least significant r bits */\n\n    this.mt = new Array(this.N);\n    /* the array for the state vector */\n\n    this.mti = this.N + 1;\n    /* mti==N + 1 means mt[N] is not initialized */\n\n    this.init_genrand(seed);\n  };\n  /* initializes mt[N] with a seed */\n\n\n  MersenneTwister.prototype.init_genrand = function (s) {\n    this.mt[0] = s >>> 0;\n\n    for (this.mti = 1; this.mti < this.N; this.mti++) {\n      s = this.mt[this.mti - 1] ^ this.mt[this.mti - 1] >>> 30;\n      this.mt[this.mti] = (((s & 0xffff0000) >>> 16) * 1812433253 << 16) + (s & 0x0000ffff) * 1812433253 + this.mti;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\n      /* In the previous versions, MSBs of the seed affect   */\n\n      /* only MSBs of the array mt[].                        */\n\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n\n      this.mt[this.mti] >>>= 0;\n      /* for >32 bit machines */\n    }\n  };\n  /* initialize by an array with array-length */\n\n  /* init_key is the array for initializing keys */\n\n  /* key_length is its length */\n\n  /* slight change for C++, 2004/2/26 */\n\n\n  MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n    var i = 1,\n        j = 0,\n        k,\n        s;\n    this.init_genrand(19650218);\n    k = this.N > key_length ? this.N : key_length;\n\n    for (; k; k--) {\n      s = this.mt[i - 1] ^ this.mt[i - 1] >>> 30;\n      this.mt[i] = (this.mt[i] ^ (((s & 0xffff0000) >>> 16) * 1664525 << 16) + (s & 0x0000ffff) * 1664525) + init_key[j] + j;\n      /* non linear */\n\n      this.mt[i] >>>= 0;\n      /* for WORDSIZE > 32 machines */\n\n      i++;\n      j++;\n\n      if (i >= this.N) {\n        this.mt[0] = this.mt[this.N - 1];\n        i = 1;\n      }\n\n      if (j >= key_length) {\n        j = 0;\n      }\n    }\n\n    for (k = this.N - 1; k; k--) {\n      s = this.mt[i - 1] ^ this.mt[i - 1] >>> 30;\n      this.mt[i] = (this.mt[i] ^ (((s & 0xffff0000) >>> 16) * 1566083941 << 16) + (s & 0x0000ffff) * 1566083941) - i;\n      /* non linear */\n\n      this.mt[i] >>>= 0;\n      /* for WORDSIZE > 32 machines */\n\n      i++;\n\n      if (i >= this.N) {\n        this.mt[0] = this.mt[this.N - 1];\n        i = 1;\n      }\n    }\n\n    this.mt[0] = 0x80000000;\n    /* MSB is 1; assuring non-zero initial array */\n  };\n  /* generates a random number on [0,0xffffffff]-interval */\n\n\n  MersenneTwister.prototype.genrand_int32 = function () {\n    var y;\n    var mag01 = new Array(0x0, this.MATRIX_A);\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n    if (this.mti >= this.N) {\n      /* generate N words at one time */\n      var kk;\n\n      if (this.mti === this.N + 1) {\n        /* if init_genrand() has not been called, */\n        this.init_genrand(5489);\n        /* a default initial seed is used */\n      }\n\n      for (kk = 0; kk < this.N - this.M; kk++) {\n        y = this.mt[kk] & this.UPPER_MASK | this.mt[kk + 1] & this.LOWER_MASK;\n        this.mt[kk] = this.mt[kk + this.M] ^ y >>> 1 ^ mag01[y & 0x1];\n      }\n\n      for (; kk < this.N - 1; kk++) {\n        y = this.mt[kk] & this.UPPER_MASK | this.mt[kk + 1] & this.LOWER_MASK;\n        this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ y >>> 1 ^ mag01[y & 0x1];\n      }\n\n      y = this.mt[this.N - 1] & this.UPPER_MASK | this.mt[0] & this.LOWER_MASK;\n      this.mt[this.N - 1] = this.mt[this.M - 1] ^ y >>> 1 ^ mag01[y & 0x1];\n      this.mti = 0;\n    }\n\n    y = this.mt[this.mti++];\n    /* Tempering */\n\n    y ^= y >>> 11;\n    y ^= y << 7 & 0x9d2c5680;\n    y ^= y << 15 & 0xefc60000;\n    y ^= y >>> 18;\n    return y >>> 0;\n  };\n  /* generates a random number on [0,0x7fffffff]-interval */\n\n\n  MersenneTwister.prototype.genrand_int31 = function () {\n    return this.genrand_int32() >>> 1;\n  };\n  /* generates a random number on [0,1]-real-interval */\n\n\n  MersenneTwister.prototype.genrand_real1 = function () {\n    return this.genrand_int32() * (1.0 / 4294967295.0);\n    /* divided by 2^32-1 */\n  };\n  /* generates a random number on [0,1)-real-interval */\n\n\n  MersenneTwister.prototype.random = function () {\n    return this.genrand_int32() * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  };\n  /* generates a random number on (0,1)-real-interval */\n\n\n  MersenneTwister.prototype.genrand_real3 = function () {\n    return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  };\n  /* generates a random number on [0,1) with 53-bit resolution*/\n\n\n  MersenneTwister.prototype.genrand_res53 = function () {\n    var a = this.genrand_int32() >>> 5,\n        b = this.genrand_int32() >>> 6;\n    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n  }; // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n\n\n  var BlueImpMD5 = function BlueImpMD5() {};\n\n  BlueImpMD5.prototype.VERSION = '1.0.1';\n  /*\n  * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n  * to work around bugs in some JS interpreters.\n  */\n\n  BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n        msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n  };\n  /*\n  * Bitwise rotate a 32-bit number to the left.\n  */\n\n\n  BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n    return num << cnt | num >>> 32 - cnt;\n  };\n  /*\n  * These functions implement the five basic operations the algorithm uses.\n  */\n\n\n  BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n    return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n  };\n\n  BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n    return this.md5_cmn(b & c | ~b & d, a, b, x, s, t);\n  };\n\n  BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n    return this.md5_cmn(b & d | c & ~d, a, b, x, s, t);\n  };\n\n  BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n    return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n  };\n\n  BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n    return this.md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n  };\n  /*\n  * Calculate the MD5 of an array of little-endian words, and a bit length.\n  */\n\n\n  BlueImpMD5.prototype.binl_md5 = function (x, len) {\n    /* append padding */\n    x[len >> 5] |= 0x80 << len % 32;\n    x[(len + 64 >>> 9 << 4) + 14] = len;\n    var i,\n        olda,\n        oldb,\n        oldc,\n        oldd,\n        a = 1732584193,\n        b = -271733879,\n        c = -1732584194,\n        d = 271733878;\n\n    for (i = 0; i < x.length; i += 16) {\n      olda = a;\n      oldb = b;\n      oldc = c;\n      oldd = d;\n      a = this.md5_ff(a, b, c, d, x[i], 7, -680876936);\n      d = this.md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n      c = this.md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n      b = this.md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n      a = this.md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n      d = this.md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n      c = this.md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n      b = this.md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n      a = this.md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n      d = this.md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n      c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n      b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n      a = this.md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n      d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n      c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n      b = this.md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n      a = this.md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n      d = this.md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n      c = this.md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n      b = this.md5_gg(b, c, d, a, x[i], 20, -373897302);\n      a = this.md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n      d = this.md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n      c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n      b = this.md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n      a = this.md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n      d = this.md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n      c = this.md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n      b = this.md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n      a = this.md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n      d = this.md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n      c = this.md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n      b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n      a = this.md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n      d = this.md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n      c = this.md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n      b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n      a = this.md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n      d = this.md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n      c = this.md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n      b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n      a = this.md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n      d = this.md5_hh(d, a, b, c, x[i], 11, -358537222);\n      c = this.md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n      b = this.md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n      a = this.md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n      d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n      c = this.md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n      b = this.md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n      a = this.md5_ii(a, b, c, d, x[i], 6, -198630844);\n      d = this.md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n      c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n      b = this.md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n      a = this.md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n      d = this.md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n      c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n      b = this.md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n      a = this.md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n      d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n      c = this.md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n      b = this.md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n      a = this.md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n      d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n      c = this.md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n      b = this.md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n      a = this.safe_add(a, olda);\n      b = this.safe_add(b, oldb);\n      c = this.safe_add(c, oldc);\n      d = this.safe_add(d, oldd);\n    }\n\n    return [a, b, c, d];\n  };\n  /*\n  * Convert an array of little-endian words to a string\n  */\n\n\n  BlueImpMD5.prototype.binl2rstr = function (input) {\n    var i,\n        output = '';\n\n    for (i = 0; i < input.length * 32; i += 8) {\n      output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xFF);\n    }\n\n    return output;\n  };\n  /*\n  * Convert a raw string to an array of little-endian words\n  * Characters >255 have their high-byte silently ignored.\n  */\n\n\n  BlueImpMD5.prototype.rstr2binl = function (input) {\n    var i,\n        output = [];\n    output[(input.length >> 2) - 1] = undefined;\n\n    for (i = 0; i < output.length; i += 1) {\n      output[i] = 0;\n    }\n\n    for (i = 0; i < input.length * 8; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << i % 32;\n    }\n\n    return output;\n  };\n  /*\n  * Calculate the MD5 of a raw string\n  */\n\n\n  BlueImpMD5.prototype.rstr_md5 = function (s) {\n    return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n  };\n  /*\n  * Calculate the HMAC-MD5, of a key and some data (raw strings)\n  */\n\n\n  BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n    var i,\n        bkey = this.rstr2binl(key),\n        ipad = [],\n        opad = [],\n        hash;\n    ipad[15] = opad[15] = undefined;\n\n    if (bkey.length > 16) {\n      bkey = this.binl_md5(bkey, key.length * 8);\n    }\n\n    for (i = 0; i < 16; i += 1) {\n      ipad[i] = bkey[i] ^ 0x36363636;\n      opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n    return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n  };\n  /*\n  * Convert a raw string to a hex string\n  */\n\n\n  BlueImpMD5.prototype.rstr2hex = function (input) {\n    var hex_tab = '0123456789abcdef',\n        output = '',\n        x,\n        i;\n\n    for (i = 0; i < input.length; i += 1) {\n      x = input.charCodeAt(i);\n      output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);\n    }\n\n    return output;\n  };\n  /*\n  * Encode a string as utf-8\n  */\n\n\n  BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n    return unescape(encodeURIComponent(input));\n  };\n  /*\n  * Take string arguments and return either raw or hex encoded strings\n  */\n\n\n  BlueImpMD5.prototype.raw_md5 = function (s) {\n    return this.rstr_md5(this.str2rstr_utf8(s));\n  };\n\n  BlueImpMD5.prototype.hex_md5 = function (s) {\n    return this.rstr2hex(this.raw_md5(s));\n  };\n\n  BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n    return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n  };\n\n  BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n    return this.rstr2hex(this.raw_hmac_md5(k, d));\n  };\n\n  BlueImpMD5.prototype.md5 = function (string, key, raw) {\n    if (!key) {\n      if (!raw) {\n        return this.hex_md5(string);\n      }\n\n      return this.raw_md5(string);\n    }\n\n    if (!raw) {\n      return this.hex_hmac_md5(key, string);\n    }\n\n    return this.raw_hmac_md5(key, string);\n  }; // CommonJS module\n\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = Chance;\n    }\n\n    exports.Chance = Chance;\n  } // Register as an anonymous AMD module\n\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return Chance;\n    });\n  } // if there is a importsScrips object define chance for worker\n  // allows worker to use full Chance functionality with seed\n\n\n  if (typeof importScripts !== 'undefined') {\n    chance = new Chance();\n    self.Chance = Chance;\n  } // If there is a window object, that at least has a document property,\n  // instantiate and define chance on the window\n\n\n  if (typeof window === \"object\" && typeof window.document === \"object\") {\n    window.Chance = Chance;\n    window.chance = new Chance();\n  }\n})();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable */\n\n\nvar defaultSelectInputComponent = function defaultSelectInputComponent(props) {\n  return _react2.default.createElement('input', {\n    type: props.selectType || 'checkbox',\n    checked: props.checked,\n    onClick: function onClick(e) {\n      var shiftKey = e.shiftKey;\n      e.stopPropagation();\n      props.onClick(props.id, shiftKey, props.row);\n    },\n    onChange: function onChange() {}\n  });\n};\n\nexports.default = function (Component) {\n  var wrapper = function (_React$Component) {\n    _inherits(RTSelectTable, _React$Component);\n\n    function RTSelectTable(props) {\n      _classCallCheck(this, RTSelectTable);\n\n      return _possibleConstructorReturn(this, (RTSelectTable.__proto__ || Object.getPrototypeOf(RTSelectTable)).call(this, props));\n    }\n\n    _createClass(RTSelectTable, [{\n      key: 'rowSelector',\n      value: function rowSelector(row) {\n        if (!row || !row.hasOwnProperty(this.props.keyField)) return null;\n        var _props = this.props,\n            toggleSelection = _props.toggleSelection,\n            selectType = _props.selectType,\n            keyField = _props.keyField;\n        var checked = this.props.isSelected(row[this.props.keyField]);\n        var inputProps = {\n          checked: checked,\n          onClick: toggleSelection,\n          selectType: selectType,\n          id: row[keyField],\n          row: row\n        };\n        return _react2.default.createElement(this.props.SelectInputComponent, inputProps);\n      }\n    }, {\n      key: 'headSelector',\n      value: function headSelector(row) {\n        var selectType = this.props.selectType;\n        if (selectType === 'radio') return null;\n        var _props2 = this.props,\n            toggleAll = _props2.toggleAll,\n            checked = _props2.selectAll,\n            SelectAllInputComponent = _props2.SelectAllInputComponent;\n        var inputProps = {\n          checked: checked,\n          onClick: toggleAll,\n          selectType: selectType\n        };\n        return _react2.default.createElement(SelectAllInputComponent, inputProps);\n      } // this is so we can expose the underlying ReactTable to get at the sortedData for selectAll\n\n    }, {\n      key: 'getWrappedInstance',\n      value: function getWrappedInstance() {\n        if (!this.wrappedInstance) console.warn('RTSelectTable - No wrapped instance');\n        if (this.wrappedInstance.getWrappedInstance) return this.wrappedInstance.getWrappedInstance();else return this.wrappedInstance;\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var _props3 = this.props,\n            originalCols = _props3.columns,\n            isSelected = _props3.isSelected,\n            toggleSelection = _props3.toggleSelection,\n            toggleAll = _props3.toggleAll,\n            keyField = _props3.keyField,\n            selectAll = _props3.selectAll,\n            selectType = _props3.selectType,\n            selectWidth = _props3.selectWidth,\n            SelectAllInputComponent = _props3.SelectAllInputComponent,\n            SelectInputComponent = _props3.SelectInputComponent,\n            rest = _objectWithoutProperties(_props3, ['columns', 'isSelected', 'toggleSelection', 'toggleAll', 'keyField', 'selectAll', 'selectType', 'selectWidth', 'SelectAllInputComponent', 'SelectInputComponent']);\n\n        var select = {\n          id: '_selector',\n          accessor: function accessor() {\n            return 'x';\n          },\n          // this value is not important\n          Header: this.headSelector.bind(this),\n          Cell: function Cell(ci) {\n            return _this2.rowSelector.bind(_this2)(ci.original);\n          },\n          width: selectWidth || 30,\n          filterable: false,\n          sortable: false,\n          resizable: false,\n          style: {\n            textAlign: 'center'\n          }\n        };\n        var columns = [select].concat(_toConsumableArray(originalCols));\n        var extra = {\n          columns: columns\n        };\n        return _react2.default.createElement(Component, _extends({}, rest, extra, {\n          ref: function ref(r) {\n            return _this2.wrappedInstance = r;\n          }\n        }));\n      }\n    }]);\n\n    return RTSelectTable;\n  }(_react2.default.Component);\n\n  wrapper.displayName = 'RTSelectTable';\n  wrapper.defaultProps = {\n    keyField: '_id',\n    isSelected: function isSelected(key) {\n      console.log('No isSelected handler provided:', {\n        key: key\n      });\n    },\n    selectAll: false,\n    toggleSelection: function toggleSelection(key, shift, row) {\n      console.log('No toggleSelection handler provided:', {\n        key: key,\n        shift: shift,\n        row: row\n      });\n    },\n    toggleAll: function toggleAll() {\n      console.log('No toggleAll handler provided.');\n    },\n    selectType: 'check',\n    SelectInputComponent: defaultSelectInputComponent,\n    SelectAllInputComponent: defaultSelectInputComponent\n  };\n  return wrapper;\n};"],"sourceRoot":""}