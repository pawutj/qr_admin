{"version":3,"sources":["components/contacts/Link.js","containers/contacts/contactsFilterLink.js","containers/contacts/addContact.js","components/contacts/contactsFilter.js","components/contacts/Search.js","containers/contacts/contactsFilterSearch.js","components/contacts/contactsSearch.js","components/contacts/contact.js","components/contacts/contacsList.js","containers/contacts/visibleContactsList.js","components/contacts/contactsDetails.js","containers/contacts/visibleContactsDetails.js","views/contacts/contacts.js"],"names":["Link","_ref","active","children","onClick","react_default","a","createElement","className","connect","state","ownProps","filter","contactApp","contactsVisibilityFilter","dispatch","setVisibilityFilter","id","contacts","length","firstname","lastname","department","company","phone","email","address","notes","Fragment","reactstrap_es","onSubmit","e","preventDefault","value","trim","addContact","md","src","alt","for","type","name","ref","node","required","color","ContactsFilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modal","toggle","bind","assertThisInitialized","setState","lib_default","dist","size","contactsFilterLink","contactVisiblityFilter","SHOW_ALL","FREQUENT_CONTACT","STARRED_CONTACT","ENGINEERING_DEPARTMENT_CONTACT","departmentValue","SALES_DEPARTMENT_CONTACT","SUPPORT_DEPARTMENT_CONTACT","isOpen","React","Component","Search","onChange","placeholder","target","defaultValue","contactsSearch","ContactSearch","contactsFilterSearch","Contact","onContactClick","onStarredClick","onDeleteClick","image","starred","xs","style","ContactsList","toggleStarredContact","deleteContact","contactDetails","map","contact","contacts_contact","assign","key","prototype","PropTypes","arrayOf","shape","number","isRequired","string","frequentlycontacted","bool","deleted","func","getVisibleContacts","c","toLocaleLowerCase","concat","includes","DELETED_CONTACT","Error","contactsDetails","contacsList","ContactsDetails","selectedContacts","onEditClick","editContactFlag","react","left","href","object","body","heading","responsive","borderless","editContact","setEditContactFlag","field","updateContact","Contacts","contactsFilter","contacts_contactsSearch","visibleContactsList","visibleContactsDetails"],"mappings":"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","file":"static/js/19.8f386ed6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Link = ({ active, children, onClick }) => (\n   <li className={\"list-group-item list-group-item-action \" + (active ? \"active\" : \"\") + \" no-border-top-radius no-border-bottom-radius no-border px-2 py-1\"} onClick={onClick}>\n      {children} \n   </li>\n);\n\nLink.propTypes = {\n   active: PropTypes.bool.isRequired,\n   children: PropTypes.node.isRequired,\n   onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../../redux/actions/contacts'\nimport Link from '../../components/contacts/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.contactApp.contactsVisibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)","import React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions/contacts\";\n\nconst mapStateToProps = state => ({\n   id: state.contactApp.contacts.length\n});\n\nconst AddContact = ({ id, dispatch }) => {\n   let firstname, lastname, department, company, phone, email, address, notes;\n\n   return (\n      <React.Fragment>\n         <Form\n            onSubmit={e => {\n               e.preventDefault();\n               if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\n                  return;\n               }\n               dispatch(\n                  addContact(\n                     id,\n                     firstname.value,\n                     lastname.value,\n                     company.value,\n                     department.value,\n                     email.value,\n                     phone.value,\n                     address.value,\n                     notes.value\n                  )\n               );\n               firstname.value = \"\";\n               lastname.value = \"\";\n               company.value = \"\";\n               department.value = \"\";\n               email.value = \"\";\n               phone.value = \"\";\n               address.value = \"\";\n               notes.value = \"\";\n            }}\n         >\n            <ModalBody>\n               <Row>\n                  <Col md={6}>\n                     <img\n                        src={\"https://randomuser.me/api/portraits/men/\" + id + \".jpg\"}\n                        className=\"rounded-circle\"\n                        alt={id}\n                     />\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"firstName\">First Name</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"firstname\"\n                           id=\"firstName\"\n                           ref={node => (firstname = node)}\n                           required\n                        />\n                     </FormGroup>\n                     <FormGroup>\n                        <Label for=\"lastName\">Last Name</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"lastname\"\n                           id=\"lastName\"\n                           ref={node => (lastname = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"department\">Department</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"department\"\n                           id=\"department\"\n                           ref={node => (department = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"company\">Company</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"company\"\n                           id=\"company\"\n                           ref={node => (company = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"phone\">Phone</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"phone\"\n                           name=\"phone\"\n                           id=\"phone\"\n                           ref={node => (phone = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"email\"\n                           name=\"email\"\n                           id=\"email\"\n                           ref={node => (email = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"address\">Address</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"address\"\n                           id=\"address\"\n                           ref={node => (address = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"notes\">Notes</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"textarea\"\n                           name=\"notes\"\n                           id=\"notes\"\n                           ref={node => (notes = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" type=\"submit\">\n                  Add Contact\n               </Button>\n            </ModalFooter>\n         </Form>\n      </React.Fragment>\n   );\n};\n\nexport default connect(mapStateToProps)(AddContact);\n","import React from \"react\";\nimport { Modal, ModalHeader } from \"reactstrap\";\nimport FilterLink from \"../../containers/contacts/contactsFilterLink\";\nimport { contactVisiblityFilter } from \"../../redux/actions/contacts\";\nimport AddContact from \"../../containers/contacts/addContact\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport * as Icon from \"react-feather\";\n\nclass ContactsFilter extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         modal: false\n      };\n\n      this.toggle = this.toggle.bind(this);\n   }\n\n   toggle() {\n      this.setState({\n         modal: !this.state.modal\n      });\n   }\n   render() {\n      return (\n         <div className=\"contact-app-sidebar float-left d-none d-xl-block\">\n            <PerfectScrollbar>\n               <div className=\"contact-app-sidebar-content\">\n                  <div className=\"contact-app-menu\">\n                     <div className=\"form-group form-group-compose text-center\">\n                        <button\n                           type=\"button\"\n                           className=\"btn btn-raised btn-danger btn-block my-2 shadow-z-2\"\n                           onClick={this.toggle}\n                        >\n                           <Icon.UserPlus size={18} className=\"mr-1\" /> New Contact\n                        </button>\n                     </div>\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Filters</h6>\n                     <ul className=\"list-group list-group-messages\">\n                        <FilterLink filter={contactVisiblityFilter.SHOW_ALL}>\n                           <Icon.Users size={18} className=\"mr-1\" /> All Contacts\n                        </FilterLink>\n                        <FilterLink filter={contactVisiblityFilter.FREQUENT_CONTACT}>\n                           <Icon.RefreshCw size={18} className=\"mr-1\" /> Frequent\n                        </FilterLink>\n                        <FilterLink filter={contactVisiblityFilter.STARRED_CONTACT}>\n                           <Icon.Star size={18} className=\"mr-1\" /> Starred contacts\n                        </FilterLink>\n                     </ul>\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Department</h6>\n                     <ul className=\"list-group list-group-messages\">\n                        <FilterLink\n                           filter={contactVisiblityFilter.ENGINEERING_DEPARTMENT_CONTACT}\n                           departmentValue=\"Engineering\"\n                        >\n                           <Icon.Circle size={18} className=\"mr-1 danger\" />\n                           Engineering\n                        </FilterLink>\n                        <FilterLink filter={contactVisiblityFilter.SALES_DEPARTMENT_CONTACT} departmentValue=\"Sales\">\n                           <Icon.Circle size={18} className=\"mr-1 warning\" />\n                           Sales\n                        </FilterLink>\n                        <FilterLink filter={contactVisiblityFilter.SUPPORT_DEPARTMENT_CONTACT} departmentValue=\"Support\">\n                           <Icon.Circle size={18} className=\"mr-1 success\" />\n                           Support\n                        </FilterLink>\n                     </ul>\n                  </div>\n               </div>\n               <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} size=\"md\">\n                  <ModalHeader toggle={this.toggle}>Add Contact</ModalHeader>\n                  <AddContact />\n               </Modal>\n            </PerfectScrollbar>\n         </div>\n      );\n   }\n}\n\nexport default ContactsFilter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Search = ({ value, onChange }) => (   \n   <input type=\"text\" className=\"form-control round\" placeholder=\"Search contacts\" onChange={(e) => onChange(e.target.value)} defaultValue={value}/>\n);\n\nSearch.propTypes = {\n   onChange: PropTypes.func.isRequired\n};\n\nexport default Search;\n","import { connect } from \"react-redux\";\nimport { contactsSearch } from \"../../redux/actions/contacts\";\nimport Search from \"../../components/contacts/Search\";\n\nconst mapStateToProps = (state) => ({\n   value: state.contactApp.contactsSearch\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onChange:  value => dispatch(contactsSearch(value)),\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Search);\n","import React from \"react\";\nimport FilterSearch from \"../../containers/contacts/contactsFilterSearch\";\n\nclass ContactSearch extends React.Component {\n   render() {\n      return (\n         <div className=\"contact-search-box w-100 bg-white pt-4 px-2 pb-2\">\n            <div className=\"media\">\n               <span className=\"contact-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-xl-none\" />\n               <div className=\"media-body\">\n                  <FilterSearch />\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default ContactSearch;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Star, Trash } from \"react-feather\";\n\nconst Contact = ({\n   onContactClick,\n   onStarredClick,\n   onDeleteClick,\n   id,\n   firstname,\n   lastname,\n   image,\n   department,\n   starred,\n   active\n}) => (\n   <li className={\"list-group-item list-group-item-action no-border \" + ((active === id) ? \"bg-grey bg-lighten-4\" : \"\")}>\n      <Row>\n         <Col xs={3} onClick={onContactClick}>\n            <img src={image} className=\"rounded-circle width-50\" alt={image} />\n         </Col>\n         <Col xs={7} onClick={onContactClick}>\n            <p className=\"mb-0 text-truncate\">\n            {firstname} {lastname}\n            </p>\n            <p className=\"mb-0 text-muted font-small-3\">{department}</p>\n         </Col>\n         <Col xs={2}>\n            <Trash size={18} onClick={onDeleteClick} className=\"float-right mt-1 mb-2 width-25 d-block\" style={{ color: \"#FF586B\" }} />\n            <Star\n               size={18}\n               onClick={onStarredClick}\n               className=\"float-right width-25 d-block\"\n               style={{ color: starred ? \"#FFC107\" : \"#495057\" }}\n            />\n         </Col>\n      </Row>\n   </li>\n);\n\nContact.propTypes = {\n   firstname: PropTypes.string.isRequired,\n   lastname: PropTypes.string.isRequired,\n   image: PropTypes.string.isRequired,\n   department: PropTypes.string.isRequired,\n   starred: PropTypes.bool.isRequired,\n   onStarredClick: PropTypes.func.isRequired,\n   onDeleteClick: PropTypes.func.isRequired,\n   onContactClick: PropTypes.func.isRequired\n};\n\nexport default Contact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contact from \"./contact\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nconst ContactsList = ({ active,contacts, toggleStarredContact, deleteContact, contactDetails }) => (\n   <div className=\"contact-app-list\">\n      <PerfectScrollbar>\n         <div id=\"users-list\">\n            <ul className=\"list-group\">\n               {contacts.map(contact => (\n                  <Contact\n                     key={contact.id}\n                     active = {active}\n                     {...contact}\n                     onStarredClick={() => toggleStarredContact(contact.id)}\n                     onDeleteClick={() => deleteContact(contact.id)}\n                     onContactClick={() => contactDetails(contact.id)}\n                  />\n               ))}\n            </ul>\n         </div>\n      </PerfectScrollbar>\n   </div>\n);\n\nContactsList.prototype = {\n   contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         firstname: PropTypes.string.isRequired,\n         lastname: PropTypes.string,\n         image: PropTypes.string,\n         department: PropTypes.string,\n         company: PropTypes.string,\n         phone: PropTypes.number.isRequired,\n         email: PropTypes.string.isRequired,\n         address: PropTypes.string,\n         notes: PropTypes.string,\n         frequentlycontacted: PropTypes.bool.isRequired,\n         starred: PropTypes.bool.isRequired,\n         deleted: PropTypes.bool.isRequired\n      }).isRequired\n   ).isRequired,\n   toggleStarredContact: PropTypes.func.isRequired,\n   deleteContact: PropTypes.func.isRequired,\n   contactDetails: PropTypes.func.isRequired\n};\nexport default ContactsList;\n","import { connect } from \"react-redux\";\nimport { toggleStarredContact, deleteContact, contactVisiblityFilter, contactDetails } from \"../../redux/actions/contacts\";\nimport contacsList from \"../../components/contacts/contacsList\";\n\nconst getVisibleContacts = (contacts, filter, contactsSearch) => {\n   switch (filter) {\n      case contactVisiblityFilter.SHOW_ALL:\n         return contacts.filter(\n            c =>\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.FREQUENT_CONTACT:\n         return contacts.filter(\n            c =>\n               c.frequentlycontacted &&\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.STARRED_CONTACT:\n         return contacts.filter(\n            c =>\n               c.starred &&\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.ENGINEERING_DEPARTMENT_CONTACT:\n         return contacts.filter(\n            c =>\n               c.department === \"Engineering\" &&\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.SUPPORT_DEPARTMENT_CONTACT:\n         return contacts.filter(\n            c =>\n               c.department === \"Support\" &&\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.SALES_DEPARTMENT_CONTACT:\n         return contacts.filter(\n            c =>\n               c.department === \"Sales\" &&\n               !c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      case contactVisiblityFilter.DELETED_CONTACT:\n         return contacts.filter(\n            c =>\n               c.deleted &&\n               c.firstname\n                  .toLocaleLowerCase()\n                  .concat(\" \")\n                  .concat(c.lastname.toLocaleLowerCase())\n                  .includes(contactsSearch.toLocaleLowerCase())\n         );\n      default:\n         throw new Error(\"Unknown filter: \" + filter);\n   }\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n   // Mapping contacts object and Visiblityfilter state to Object\n   contacts: getVisibleContacts(\n      state.contactApp.contacts,\n      state.contactApp.contactsVisibilityFilter,\n      state.contactApp.contactsSearch\n   ),\n\n   active: state.contactApp.contactsDetails\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n   toggleStarredContact: id => dispatch(toggleStarredContact(id)),\n   deleteContact: id => dispatch(deleteContact(id)),\n   contactDetails: id => dispatch(contactDetails(id))\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(contacsList);\n","\nimport React, { Fragment } from \"react\";\nimport { Row, Col, Media, Table, Button, Input } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport * as Icon from \"react-feather\";\n\nconst ContactsDetails = ({ selectedContacts, onEditClick, editContactFlag, onChange }) => (\n   <Fragment>\n      {selectedContacts ? (\n         <div className=\"contact-app-content-detail\">\n            <Row>\n               <Col className=\"text-right\">\n                  <Button className=\"btn-outline-success mr-1 mt-1\" size=\"sm\" onClick={onEditClick}>\n                     {editContactFlag ? <Icon.Check size={16} /> : <Icon.Edit2 size={16} />}\n                  </Button>\n               </Col>\n            </Row>\n            <PerfectScrollbar>\n               <Media>\n                  <Media left href=\"#\">\n                     <Media\n                        object\n                        src={selectedContacts.image}\n                        alt=\"Generic placeholder image\"\n                        className=\"img-fluid rounded-circle\"\n                     />\n                  </Media>\n                  <Media body>\n                     <Media heading>\n                        {selectedContacts.firstname} {selectedContacts.lastname}\n                     </Media>\n                     {selectedContacts.department}\n                  </Media>\n               </Media>\n               <Table responsive borderless size=\"sm\" className=\"mt-4\">\n                  <tbody>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">First Name</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"firstName\"\n                                 id=\"firstName\"\n                                 defaultValue={selectedContacts.firstname}\n                                 onChange={e => onChange(selectedContacts.id, \"firstname\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.firstname\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Last Name</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"lastName\"\n                                 id=\"lastName\"\n                                 defaultValue={selectedContacts.lastname}\n                                 onChange={e => onChange(selectedContacts.id, \"lastname\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.lastname\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Company</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"company\"\n                                 id=\"company\"\n                                 defaultValue={selectedContacts.company}\n                                 onChange={e => onChange(selectedContacts.id, \"company\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.company\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Department:</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"department\"\n                                 id=\"department\"\n                                 defaultValue={selectedContacts.department}\n                                 onChange={e => onChange(selectedContacts.id, \"department\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.department\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Email</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"email\"\n                                 id=\"email\"\n                                 defaultValue={selectedContacts.email}\n                                 onChange={e => onChange(selectedContacts.id, \"email\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.email\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Phone</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 id=\"phone\"\n                                 defaultValue={selectedContacts.phone}\n                                 onChange={e => onChange(selectedContacts.id, \"phone\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.phone\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Address</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"address\"\n                                 id=\"address\"\n                                 defaultValue={selectedContacts.address}\n                                 onChange={e => onChange(selectedContacts.id, \"address\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.address\n                           )}\n                        </td>\n                     </tr>\n                     <tr className=\"d-flex\">\n                        <td className=\"col-3 text-bold-400\">Note</td>\n                        <td className=\"col-9\">\n                           {editContactFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 name=\"notes\"\n                                 id=\"notes\"\n                                 defaultValue={selectedContacts.notes}\n                                 onChange={e => onChange(selectedContacts.id, \"notes\", e.target.value)}\n                              />\n                           ) : (\n                              \": \" + selectedContacts.notes\n                           )}\n                        </td>\n                     </tr>\n                  </tbody>\n               </Table>\n            </PerfectScrollbar>\n         </div>\n      ) : (\n         <div className=\"row h-100\">\n            <div className=\"col-sm-12 my-auto\">\n               <div className=\"text-center\">\n                  <Icon.MessageSquare size={84} color=\"#ccc\" className=\"pb-3\"/>\n                  <h4>Please select a contact to show details.</h4>\n               </div>\n            </div>\n         </div>\n      )}\n   </Fragment>\n);\n\nContactsDetails.prototype = {\n   selectedContacts: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         firstname: PropTypes.string.isRequired,\n         lastname: PropTypes.string,\n         image: PropTypes.string,\n         department: PropTypes.string,\n         company: PropTypes.string,\n         phone: PropTypes.number.isRequired,\n         email: PropTypes.string.isRequired,\n         address: PropTypes.string,\n         notes: PropTypes.string,\n         frequentlycontacted: PropTypes.bool.isRequired,\n         starred: PropTypes.bool.isRequired,\n         deleted: PropTypes.bool.isRequired\n      }).isRequired\n   ).isRequired\n};\nexport default ContactsDetails;\n","import { connect } from \"react-redux\";\nimport { setEditContactFlag,updateContact } from \"../../redux/actions/contacts\";\nimport contactsDetails from \"../../components/contacts/contactsDetails\";\n\nconst mapStateToProps = (state, ownProps) => ({\n   selectedContacts: state.contactApp.contacts[state.contactApp.contactsDetails],\n   editContactFlag: state.contactApp.editContact\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onEditClick: () => dispatch(setEditContactFlag()),\n   onChange:(id, field, value) => dispatch(updateContact(id , field, value))\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(contactsDetails);\n","import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\n\nimport ContactsFilter from \"../../components/contacts/contactsFilter\";\nimport ContactsSearch from \"../../components/contacts/contactsSearch\";\n\n// import ContactsList from \"../../components/contacts/contacsList\";\nimport ContactsList from \"../../containers/contacts/visibleContactsList\";\nimport ContactsDetails from \"../../containers/contacts/visibleContactsDetails\";\n\nclass Contacts extends Component {\n   render() {\n      return (\n         <Fragment>\n            <div className=\"contact-application\">\n               <div className=\"content-overlay\" />\n               <ContactsFilter />\n               <Row className=\"contact-app-content\">\n                  <div className=\"contact-app-content-area w-100\">\n                     <div className=\"contact-app-list-mails p-0\">\n                        <ContactsSearch />\n                        <ContactsList />\n                     </div>\n                     <div className=\"contact-app-mail-content d-none d-md-block\">\n                        <ContactsDetails />\n                     </div>\n                  </div>\n               </Row>\n            </div>\n         </Fragment>\n      );\n   }\n}\n\nexport default Contacts;\n"],"sourceRoot":""}