{"version":3,"sources":["views/calender/calender.js","redux/actions/calenderAction/calenderAction.js"],"names":["ReactBigCalender","momentLocalizer","moment","allViews","Object","keys","Views","map","k","Calender","state","modal","start","Date","end","eventTitle","events","toggleModal","_this","setState","prevState","handleChange","e","target","value","handleStartDateTimeChange","date","_d","handleEndDateTimeChange","handleSubmit","handleAddEvent","props","_this$state","concat","toConsumableArray","title","allDay","_this$state2","handleSlotSelect","slotInfo","calender","this","_this$state3","react_default","a","createElement","react","reactstrap_es","isOpen","toggle","onChange","DateTime_default","defaultValue","startDate","color","onClick","xs","className","href","rel","src","alt","style","height","lib_default","views","step","defaultDate","selectable","onSelectSlot","Component","connect","_ref","type","payload"],"mappings":"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","file":"static/js/21.c1909196.chunk.js","sourcesContent":["// import external modules\nimport React, { Fragment, Component } from \"react\";\nimport {\n   Row,\n   Col,\n   Modal,\n   ModalBody,\n   ModalFooter,\n   Button,\n   Input,\n   Card,\n   CardBody\n} from \"reactstrap\";\nimport ReactBigCalender from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport DateTimePicker from \"react-datetime\";\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { handleAddEvent } from \"../../redux/actions/calenderAction/calenderAction\";\n\nReactBigCalender.momentLocalizer(moment);\nconst allViews = Object.keys(ReactBigCalender.Views).map(\n   k => ReactBigCalender.Views[k]\n);\n\nclass Calender extends Component {\n   state = {\n      modal: false,\n      start: new Date(),\n      end: new Date(),\n      eventTitle: \"Enter Your Title\",\n      events: []\n   };\n\n   toggleModal = () => {\n      this.setState(prevState => ({\n         modal: !prevState.modal\n      }));\n   };\n\n   handleChange = e => {\n      this.setState({\n         eventTitle: e.target.value\n      });\n   };\n\n   handleStartDateTimeChange = date => {\n      this.setState(prevState => ({\n         start: date._d\n      }));\n   };\n\n   handleEndDateTimeChange = date => {\n      this.setState(prevState => ({\n         end: date._d\n      }));\n   };\n\n   handleSubmit = () => {\n      const { handleAddEvent } = this.props;\n\n      this.setState(\n         prevState => {\n            const { start, eventTitle, end, events } = this.state;\n            return {\n               events: [\n                  ...events,\n                  {\n                     title: eventTitle,\n                     allDay: true,\n                     start: start,\n                     end: end\n                  }\n               ]\n            };\n         },\n         () => {\n            const { start, end, eventTitle, events } = this.state;\n            let param = {\n               start,\n               eventTitle,\n               end\n            };\n            handleAddEvent(param, events);\n         }\n      );\n      this.toggleModal();\n   };\n\n   handleSlotSelect = slotInfo => {\n      this.toggleModal();\n      this.setState(prevState => ({\n         start: slotInfo.start,\n         end: slotInfo.end,\n         eventTitle: \"Enter Your Title\"\n      }));\n   };\n\n   render() {\n      const { calender } = this.props;\n      const { modal, eventTitle, start, end } = this.state;\n      return (\n         <Fragment>\n            <Modal isOpen={modal} toggle={this.toggleModal}>\n               <ModalBody>\n                  <label>Event Title</label>\n                  <Input value={eventTitle} onChange={this.handleChange} />\n                  <Fragment>\n                     <div>\n                        <label>Start Date</label>\n                        <DateTimePicker\n                           onChange={this.handleStartDateTimeChange}\n                           defaultValue={calender.startDate}\n                           value={start}\n                        />\n                     </div>\n                     <div>\n                        <label>End Date</label>\n                        <DateTimePicker\n                           onChange={this.handleEndDateTimeChange}\n                           defaultValue={calender.startDate}\n                           value={end}\n                        />\n                     </div>\n                  </Fragment>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleModal}>\n                     Cancel\n                  </Button>\n                  <Button color=\"success\" onClick={this.handleSubmit}>\n                     Submit\n                  </Button>\n               </ModalFooter>\n            </Modal>\n            <Row>\n               <Col xs=\"12\">\n                  <div className=\"content-header\">Calendar</div>\n                  <p className=\"content-sub-header\">\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">React Big Calendar</a> is gcal/outlook like calendar component. This is the most advanced example having various features.\n                     This example lists all the events on the calendar with Add new event functionality.\n                     <a href=\"https://github.com/intljusticemission/react-big-calendar\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src=\"https://img.shields.io/github/stars/intljusticemission/react-big-calendar.svg?style=social\" alt=\"Stars\" />\n                        <img src=\"https://img.shields.io/npm/dm/react-big-calendar.svg\" alt=\"Downloads\"/>\n                     </a>\n                  </p>\n               </Col>\n            </Row>\n\n            <Card>\n               <CardBody>\n                  <div style={{ height: 700 }}>\n                     <ReactBigCalender\n                        events={calender.events}\n                        views={allViews}\n                        step={60}\n                        defaultDate={new Date()}\n                        selectable={true}\n                        onSelectSlot={this.handleSlotSelect}\n                     />\n                  </div>\n               </CardBody>\n            </Card>\n         </Fragment>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   calender: state.calender\n});\n\nexport default connect(\n   mapStateToProps,\n   { handleAddEvent }\n)(Calender);\n","const handleAddEvent = ({ start, end, eventTitle }, events) => {\n   return {\n      type: 'ADD_EVENT',\n      payload: { start, end, eventTitle, events }\n   };\n};\n\nexport { handleAddEvent };\n"],"sourceRoot":""}