{"version":3,"sources":["components/chat/chatListItem.js","components/chat/chatList.js","containers/chat/chatList.js","redux/actions/chat/chatActions.js","components/chat/chatSearch.js","containers/chat/chatSearch.js","components/chat/chatContent.js","containers/chat/chatContent.js","components/chat/chatMsgForm.js","containers/chat/chatMsgSend.js","views/chat/chat.js"],"names":["ChatListItem","_ref","onClick","contactName","chatExcerpt","time","thumb","react_default","a","createElement","Link","to","className","reactstrap_es","left","object","src","alt","body","ChatList","chats","openChat","id","map","chat","chatListItem","Object","assign","key","name","excerpt","connect","state","chatApp","chatSearch","filter","t","toLocaleLowerCase","includes","dispatch","type","chatList","ChatSearch","onChange","searchTerm","e","target","value","dist","size","Search","ChatContent","_this","this","chatDetails","props","width","lib_default","containerRef","ref","chatScrollHandler","keys","chatHistory","k","v","UserImg","Component","chatContent","ChatMsgForm","msg","handleChatMsgChange","setState","onChatMsgSubmit","preventDefault","stopPropagation","_this2","onSubmit","placeholder","chatMsg","sendMsg","chatMsgForm","Chat","react","containers_chat_chatSearch","chat_chatList","chat_chatContent","chatMsgSend"],"mappings":"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","file":"static/js/19.f331b53f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Media } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\n// import { Star, Pocket } from \"react-feather\";\nimport PropTypes from 'prop-types';\n\nconst ChatListItem = ({ onClick, contactName, chatExcerpt, time, thumb }) => (\n    <Link to=\"/chat\" className=\"list-group-item no-border\" onClick={onClick}>\n        <Media>\n            <Media left>\n                <Media object src={thumb} alt=\"Generic placeholder image\" className=\"media-object d-flex mr-3 bg-primary height-50 rounded-circle\" />\n            </Media>\n            <Media body>\n                <h6 className=\"list-group-item-heading\">{contactName}\n                  <span className=\"font-small-3 float-right primary\">{time}</span>\n                </h6>\n                <p className=\"list-group-item-text text-muted\"><i className=\"ft-check primary font-small-2\"></i> {chatExcerpt} <span className=\"float-right primary\"><i className=\"font-medium-1 icon-pin blue-grey lighten-3\"></i></span></p>\n            </Media>\n        </Media>\n    </Link>\n);\n\nChatListItem.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    contactName: PropTypes.string.isRequired,\n    chatExcerpt: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n}\n\nexport default ChatListItem;\n","import React from \"react\";\n// import PropTypes from 'prop-types'\nimport Chat from \"./chatListItem\";\n\nimport PropTypes from 'prop-types';\n\nconst ChatList = ({ chats, openChat }) => (\n    <div className=\"list-group position-relative\" id=\"users-list\">\n        <div className=\"users-list-padding\">\n            {chats.map(chat => (\n                <Chat\n                    key={chat.id}\n                    {...chat}\n                    onClick={() => openChat(chat.id)}\n                    thumb={chat.thumb}\n                    contactName={chat.name}\n                    chatExcerpt={chat.excerpt}\n                />\n            ))}\n        </div>\n    </div>\n);\n\nChatList.propTypes = {\n    chats: PropTypes.array.isRequired,\n    openChat: PropTypes.func.isRequired\n}\nexport default ChatList;\n","import { connect } from 'react-redux'\nimport chatList from '../../components/chat/chatList'\nimport { openChat } from '../../redux/actions/chat/chatActions'\n\nconst filterChats = (chats, chatSearch) => {\n    if(chatSearch !== '')\n        return chats.filter(t => t.name.toLocaleLowerCase().includes(chatSearch.toLocaleLowerCase()))\n    else\n        return chats\n}\n\nconst mapStateToProps = state => ({\n    chats: filterChats(state.chatApp.chats, state.chatApp.chatSearch)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    openChat: id => dispatch(openChat(id)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(chatList)","// import {\n//    HANDLE_FILTER_USER,\n//    HANDLE_SEND_MESSAGE,\n//    HANDLE_SELECT_USER\n// } from \"../types/types\";\n\n// const filterUser = searchTerm => ({\n//    type: HANDLE_FILTER_USER,\n//    payload: searchTerm\n// });\n\n// const sendMsg = ({ chatMsg, currentUser, users: Users }) => ({\n//    type: HANDLE_SEND_MESSAGE,\n//    payload: { chatMsg, currentUser, Users }\n// });\n\n// const selectCurrentUser = ({ users, id }) => ({\n//    type: HANDLE_SELECT_USER,\n//    payload: { users, id }\n// });\n\n// export { filterUser, sendMsg, selectCurrentUser };\n\nexport const openChat = id => ({\n    type: 'OPEN_CHAT',\n    id\n})\n\nexport const chatSearch = (searchTerm) => ({\n    type: 'FILTER_CHAT',\n    searchTerm\n})\n\nexport const sendMsg = (id, chatMsg) => ({\n    type: 'SEND_MSG',\n    id,\n    chatMsg\n})","import React from \"react\";\nimport { Form, Input } from \"reactstrap\";\nimport { User } from \"react-feather\";\nimport PropTypes from 'prop-types';\n\nconst ChatSearch = ({onChange, searchTerm}) => (\n    <div className=\"chat-fixed-search p-2\">\n        <Form>\n            <div className=\"position-relative has-icon-left\">\n                <Input \n                    className=\"form-control\"\n                    id=\"searchUser\"\n                    name=\"searchUser\"\n                    type=\"text\"\n                    onChange={e => onChange(e.target.value)}\n                    value= {searchTerm}\n                />\n                <div className=\"form-control-position\">\n                    <User size={16} />\n                </div>\n            </div>\n        </Form>\n    </div>\n);\n\nChatSearch.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string.isRequired,\n}\n\nexport default ChatSearch;","import { connect } from \"react-redux\";\nimport { chatSearch } from \"../../redux/actions/chat/chatActions\";\nimport Search from \"../../components/chat/chatSearch\";\n\nconst mapStateToProps = (state) => ({\n   searchTerm: state.chatApp.chatSearch\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onChange:  searchTerm => dispatch(chatSearch(searchTerm)),\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Search);\n","import React, {Component} from \"react\";\n// import { Button } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from 'prop-types';\nimport { MoreVertical } from 'react-feather';\n\nimport UserImg from \"../../assets/img/portrait/small/avatar-s-1.png\";\n\n// import PropTypes from 'prop-types'\n// import { AlertOctagon, Trash2 } from \"react-feather\";\n\nclass ChatContent extends Component {\n    \n    render() {\n    let chatDetails = this.props.chatDetails;\n     return <div>\n        <div className=\"chat-name p-2 bg-white\">\n            <div className=\"media\">\n                <span className=\"chat-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-none d-block d-sm-block d-md-none\"></span>\n                <div className=\"media-body\">\n                <img src={ chatDetails.thumb } width=\"37\" className=\"rounded-circle mr-1\" alt=\"avatar\" />\n                <span>{ chatDetails.name }</span>\n                <MoreVertical size={18} className=\"ft-more-vertical float-right mt-1\" />\n                </div>\n            </div>\n        </div>\n\n        <PerfectScrollbar \n            containerRef={(ref) => {\n                this.chatScrollHandler = ref;\n            }}\n        >\n            <section className=\"chat-app-window\">\n                <div className=\"badge badge-dark mb-1\">Chat History</div>\n                    <div className=\"chats\">\n                        {Object.keys(chatDetails.chatHistory).map((chat) =>\n                            (Object.keys(chatDetails.chatHistory[chat]).map((key) =>\n                                (Object.keys(chatDetails.chatHistory[chat][key]).map((k) => \n                                    ( k === 'from') ?\n                                        <div className=\"chat chat-left\" key={k}>\n                                            <div className=\"chat-avatar\">\n                                                <img src={chatDetails.thumb } className=\"width-50 rounded-circle\" alt=\"avatar\" />\n                                            </div>\n                                            <div className=\"chat-body\">\n                                                {(chatDetails.chatHistory[chat][key][k]).map((v) =>    \n                                                    <div className=\"chat-content\" key={v}>\n                                                        <p>{v}</p>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    :\n                                        <div className=\"chat\" key={k}>\n                                            <div className=\"chat-avatar\">\n                                                <img src={UserImg} className=\"width-50 rounded-circle\" alt=\"avatar\" />\n                                            </div>\n                                            <div className=\"chat-body\">\n                                                    {(chatDetails.chatHistory[chat][key][k]).map((v) =>\n                                                        <div className=\"chat-content\" key={v}> \n                                                            <p>{v}</p>\n                                                        </div>\n                                                    )}\n                                            </div>\n                                        </div>\n                                ))\n                            ))\n                        )}\n                    </div>\n            </section>\n        </PerfectScrollbar>\n    </div>\n}\n}\n\nexport default ChatContent;\n\nChatContent.propTypes = {\n    chatDetails: PropTypes.object.isRequired\n}","import { connect } from 'react-redux'\nimport chatContent from '../../components/chat/chatContent'\n\nconst mapStateToProps = state => ({\n    chatDetails: state.chatApp.chats[state.chatApp.chatContent - 1]\n})\n\nexport default connect(\n    mapStateToProps\n)(chatContent)","import React, {Component} from \"react\";\nimport { Form, Input } from 'reactstrap';\nimport { Image } from 'react-feather';\n\n// import PropTypes from 'prop-types'\nimport PropTypes from 'prop-types';\n\nclass ChatMsgForm extends Component {\n    state = {\n        msg: \"\"\n    };\n    handleChatMsgChange = e => {\n        this.setState({\n           msg: e.target.value\n        });\n    };\n\n    onChatMsgSubmit = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onClick(this.props.id, this.state.msg)\n        this.setState({msg: \"\"})\n    }\n\n    render() {\n        return (\n            <section className=\"chat-app-form bg-blue-grey bg-lighten-5\">\n                <Form className=\"chat-app-input row\" onSubmit={this.onChatMsgSubmit}>\n                    <fieldset className=\"col-lg-10 col-8 m-0\"> \n                        <Input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"iconLeft4\" \n                            placeholder=\"Type your message\" \n                            onChange={this.handleChatMsgChange}\n                            value={this.state.msg} \n                        />\n                        <div className=\"form-control-position control-position-right\">\n                            <Image size={18} />\n                        </div>\n                    </fieldset>\n                    <fieldset className=\"form-group position-relative has-icon-left col-lg-2 col-4 m-0\">\n                        <button type=\"button\" className=\"btn btn-raised btn-primary\" onClick={() => {\n                            this.props.onClick(this.props.id, this.state.msg)\n                            this.setState({msg: \"\"})\n                            } }>\n                            <i className=\"fa fa-paper-plane-o hidden-lg-up\"></i> Send\n                        </button>\n                    </fieldset>\n                </Form>\n            </section>\n        );\n    }\n}\n\nChatMsgForm.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default ChatMsgForm;\n","import { connect } from \"react-redux\";\nimport { sendMsg } from \"../../redux/actions/chat/chatActions\";\nimport chatMsgForm from \"../../components/chat/chatMsgForm\";\n\nconst mapStateToProps = state => ({\n    id: state.chatApp.chatContent\n})\n\nconst mapDispatchToProps = dispatch => ({\n   onClick: (id, chatMsg) => dispatch(sendMsg(id, chatMsg)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(chatMsgForm);","import React, { Component, Fragment } from \"react\";\r\nimport ChatList from \"../../containers/chat/chatList\";\r\nimport ChatSearch from \"../../containers/chat/chatSearch\";\r\nimport ChatContent from \"../../containers/chat/chatContent\";\r\nimport ChatMsgSend from \"../../containers/chat/chatMsgSend\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nclass Chat extends Component {\r\n    \r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <div className=\"chat-application\">\r\n                <div className=\"content-overlay\"></div>\r\n                <div className=\"chat-sidebar float-left d-none d-sm-none d-md-block d-lg-block\">\r\n                    <PerfectScrollbar>\r\n                        <div className=\"chat-sidebar-content\">\r\n                            <ChatSearch />\r\n                            <ChatList />\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </div>\r\n\r\n                <ChatContent />\r\n\r\n                <ChatMsgSend />\r\n            </div>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Chat;\r\n"],"sourceRoot":""}