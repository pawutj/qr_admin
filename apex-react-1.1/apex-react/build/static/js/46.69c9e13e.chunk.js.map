{"version":3,"sources":["views/components/extra/examples/dropzoneProgramaticDialog.js","views/components/extra/examples/dropzoneBasic.js","views/components/extra/examples/dropzoneFileType.js","views/components/extra/examples/dropzoneDisabled.js","views/components/extra/upload.js","views/components/extra/exampleSource/dropzoneBasic.js","views/components/extra/exampleSource/dropzoneFileType.js","views/components/extra/exampleSource/dropzoneProgramaticDialog.js","views/components/extra/exampleSource/dropzoneDisabled.js","components/contentHead/contentHeader.js","components/contentHead/contentSubHeader.js","components/tabs/customTabs.js"],"names":["dropzoneRef","BasicDropzone","state","files","onDrop","_this","setState","react_default","a","createElement","className","es","this","bind","map","f","key","name","size","Component","FileTypeDropzone","accepted","rejected","_this2","accept","ProgramaticDialogDropzone","ref","node","alert","type","onClick","open","DisabledDropzone","disabled","Upload","react","contentHeader","contentSubHeader","href","target","rel","src","alt","reactstrap_es","sm","customTabs","TabContent1","dropzoneBasic","TabContent2","lib","component","dropzoneFileType","dropzoneProgramaticDialog","dropzoneDisabled","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentHeader","props","concat","undefined","children","ContentSubHeader","Example","Object","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggle","C_Users_USER_Desktop_yourqr_admin_apex_react_1_1_apex_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","activeTab","tab","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","tabs","classnames","active","react_feather__WEBPACK_IMPORTED_MODULE_7__","tabId","React"],"mappings":"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","file":"static/js/46.69c9e13e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nlet dropzoneRef;\n\nclass ProgramaticDialogDropzone extends Component {\n   state = {\n      files: [],\n      accepted: [],\n      rejected: [],\n   };\n\n   render() {\n      return (\n         <div className=\"dropzone\">\n            <Dropzone\n               ref={node => {\n                  dropzoneRef = node;\n               }}\n               onDrop={(accepted, rejected) => {\n                  alert(accepted);\n               }}\n            >\n               <p>Drop files here.</p>\n            </Dropzone>\n            <button\n               type=\"button\"\n               className=\"mt-2 btn btn-primary\"\n               onClick={() => {\n                  dropzoneRef.open();\n               }}\n            >\n               Open File Dialog\n            </button>\n         </div>\n      );\n   }\n}\n\nexport default ProgramaticDialogDropzone;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass BasicDropzone extends Component {\n   state = {\n      files: []\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <div className=\"dropzone mb-2\">\n               <Dropzone onDrop={this.onDrop.bind(this)}>\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h4>Dropped files</h4>\n               <ul>\n                  {this.state.files.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\n\nexport default BasicDropzone;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass FileTypeDropzone extends Component {\n   state = {\n      files: [],\n      accepted: [],\n      rejected: [],\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <div className=\"dropzone mb-2\">\n               <Dropzone\n                  accept=\"image/jpeg, image/png\"\n                  onDrop={(accepted, rejected) => {\n                     this.setState({ accepted, rejected });\n                  }}\n               >\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n                  <p>Only *.jpeg and *.png images will be accepted</p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h4>Accepted files</h4>\n               <ul>\n                  {this.state.accepted.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n               <h4>Rejected files</h4>\n               <ul>\n                  {this.state.rejected.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\n\nexport default FileTypeDropzone;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass DisabledDropzone extends Component {\n   state = {\n      files: [],\n      disabled: true\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <aside>\n               <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() =>\n                     this.setState({\n                        disabled: !this.state.disabled\n                     })\n                  }\n               >\n                  Toggle disabled\n               </button>\n            </aside>\n            <div className=\"dropzone my-2\">\n               <Dropzone\n                  onDrop={this.onDrop.bind(this)}\n                  disabled={this.state.disabled}\n               >\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h4>Dropped files</h4>\n               <ul>\n                  {this.state.files.map(f => (\n                     <li>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\n\nexport default DisabledDropzone;\n","import React, { Component, Fragment } from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\n//Prism\n// eslint-disable-next-line\nimport Prism from \"prismjs\";  //Include JS\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\nimport { PrismCode } from \"react-prism\"; //Prism Component\n\nimport \"../../../assets/scss/views/components/extra/upload.scss\";\n\nimport CustomTabs from \"../../../components/tabs/customTabs\";\nimport ContentHeader from \"../../../components/contentHead/contentHeader\";\nimport ContentSubHeader from \"../../../components/contentHead/contentSubHeader\";\n\n// Import examples\nimport BasicDropzone from \"./examples/dropzoneBasic\";\nimport FileTypeDropzone from \"./examples/dropzoneFileType\";\nimport ProgramaticDialogDropzone from \"./examples/dropzoneProgramaticDialog\";\nimport DisabledDropzone from \"./examples/dropzoneDisabled\";\n\n// Import Example Source Code\nimport BasicDropzoneSource from \"./exampleSource/dropzoneBasic\";\nimport FileTypeDropzoneSource from \"./exampleSource/dropzoneFileType\";\nimport ProgramaticDialogDropzoneSource from \"./exampleSource/dropzoneProgramaticDialog\";\nimport DisabledDropzoneSource from \"./exampleSource/dropzoneDisabled\";\n\n\nclass Upload extends Component {\n\n   render() {\n      return (\n         <Fragment>\n            <ContentHeader>Dropzone</ContentHeader>\n            <ContentSubHeader>\n               <p>Simple HTML5 drag-drop zone with React.js.</p>\n               <a href=\"https://github.com/react-dropzone/react-dropzone\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src=\"https://img.shields.io/github/stars/react-dropzone/react-dropzone.svg?style=social\" alt=\"Stars\" />\n                  <img src=\"https://img.shields.io/npm/dm/react-dropzone.svg\" alt=\"Downloads\"/>\n               </a>\n            </ContentSubHeader>\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Basic Dropzone</CardTitle>\n                        <p>\n                           Dropzone with default properties and displays list of\n                           the dropped files.\n                        </p>\n                        <CustomTabs\n                           TabContent1={<BasicDropzone />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {BasicDropzoneSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Specific file types</CardTitle>\n                        <p>\n                           By providing accept prop you can make Dropzone to\n                           accept specific file types and reject the others. The\n                           value must be a comma-separated list of unique\n                           content type specifiers.\n                        </p>\n                        <CustomTabs\n                           TabContent1={<FileTypeDropzone />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {FileTypeDropzoneSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>\n                           Opening File Dialog Programmatically\n                        </CardTitle>\n                        <p>\n                           You can programmatically invoke default OS file\n                           prompt. In order to do that you'll have to set the\n                           ref on your Dropzone instance and call the instance\n                           open method.\n                        </p>\n                        <CustomTabs\n                           TabContent1={<ProgramaticDialogDropzone />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {ProgramaticDialogDropzoneSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Dropzone with disabled property</CardTitle>\n                        <p>\n                           You can programmatically invoke default OS file\n                           prompt. In order to do that you'll have to set the\n                           ref on your Dropzone instance and call the instance\n                           open method.\n                        </p>\n                        <CustomTabs\n                           TabContent1={<DisabledDropzone />}\n                           TabContent2={\n                              <PrismCode\n                                 component=\"pre\"\n                                 className=\"language-javascript\"\n                              >\n                                 {DisabledDropzoneSource}\n                              </PrismCode>\n                           }\n                        />\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </Fragment>\n      );\n   }\n}\n\nexport default Upload;\n","const BasicDropzoneSource = `import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass BasicDropzone extends Component {\n   state = {\n      files: []\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <div className=\"dropzone\">\n               <Dropzone onDrop={this.onDrop.bind(this)}>\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h2>Dropped files</h2>\n               <ul>\n                  {this.state.files.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\nexport default BasicDropzone;\n`;\n\nexport default BasicDropzoneSource;\n","const FileTypeDropzoneSource = `import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass FileTypeDropzone extends Component {\n   state = {\n      files: [],\n      accepted: [],\n      rejected: [],\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <div className=\"dropzone\">\n               <Dropzone\n                  accept=\"image/jpeg, image/png\"\n                  onDrop={(accepted, rejected) => {\n                     this.setState({ accepted, rejected });\n                  }}\n               >\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n                  <p>Only *.jpeg and *.png images will be accepted</p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h2>Accepted files</h2>\n               <ul>\n                  {this.state.accepted.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n               <h2>Rejected files</h2>\n               <ul>\n                  {this.state.rejected.map(f => (\n                     <li key={f.name}>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\nexport default FileTypeDropzone;\n`;\n\nexport default FileTypeDropzoneSource;\n","const ProgramaticDialogDropzoneSource = `import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nlet dropzoneRef;\n\nclass ProgramaticDialogDropzone extends Component {\n   state = {\n      files: [],\n      accepted: [],\n      rejected: [],\n   };\n\n   render() {\n      return (\n         <div>\n            <Dropzone\n               ref={node => {\n                  dropzoneRef = node;\n               }}\n               onDrop={(accepted, rejected) => {\n                  alert(accepted);\n               }}\n            >\n               <p>Drop files here.</p>\n            </Dropzone>\n            <button\n               type=\"button\"\n               onClick={() => {\n                  dropzoneRef.open();\n               }}\n            >\n               Open File Dialog\n            </button>\n         </div>\n      );\n   }\n}\nexport default ProgramaticDialogDropzone;\n`;\n\nexport default ProgramaticDialogDropzoneSource;\n","const DisabledDropzoneSource = `import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nclass DisabledDropzone extends Component {\n   state = {\n      files: [],\n      disabled: true\n   };\n\n   onDrop = files => {\n      this.setState({\n         files\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <aside>\n               <button\n                  type=\"button\"\n                  onClick={() =>\n                     this.setState({\n                        disabled: !this.state.disabled\n                     })\n                  }\n               >\n                  Toggle disabled\n               </button>\n            </aside>\n            <div className=\"dropzone\">\n               <Dropzone\n                  onDrop={this.onDrop.bind(this)}\n                  disabled={this.state.disabled}\n               >\n                  <p>\n                     Try dropping some files here, or click to select files to\n                     upload.\n                  </p>\n               </Dropzone>\n            </div>\n            <aside>\n               <h2>Dropped files</h2>\n               <ul>\n                  {this.state.files.map(f => (\n                     <li>\n                        {f.name} - {f.size} bytes\n                     </li>\n                  ))}\n               </ul>\n            </aside>\n         </div>\n      );\n   }\n}\nexport default DisabledDropzone;\n`;\n\nexport default DisabledDropzoneSource;\n","import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","import React from \"react\";\n\nconst ContentSubHeader = props => {\n   const { className } = props;\n   return (\n      <div\n         className={`content-sub-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentSubHeader;\n","import React from \"react\";\nimport { Eye, Code } from 'react-feather';\nimport {\n   TabContent,\n   TabPane,\n   Nav,\n   NavItem,\n   NavLink,   \n   Row,\n   Col\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nexport default class Example extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n         activeTab: \"1\"\n      };\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"nav-tabs-vc\">\n            <Nav tabs>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"1\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"1\");\n                     }}\n                  >\n                     <Eye size={18} />\n                  </NavLink>\n               </NavItem>\n               <NavItem>\n                  <NavLink\n                     className={classnames({\n                        active: this.state.activeTab === \"2\"\n                     })}\n                     onClick={() => {\n                        this.toggle(\"2\");\n                     }}\n                  >\n                     <Code size={18} />\n                  </NavLink>\n               </NavItem>\n            </Nav>\n            \n            <TabContent activeTab={this.state.activeTab} className=\"px-0\">\n               <TabPane tabId=\"1\">\n                  <Row>\n                     <Col sm=\"12\">\n                        {this.props.TabContent1}\n                     </Col>\n                  </Row>\n               </TabPane>\n               <TabPane tabId=\"2\">\n                  <Row>\n                     <Col sm=\"12\">\n                        {this.props.TabContent2}\n                     </Col>\n                  </Row>\n               </TabPane>\n            </TabContent>\n         </div>\n      );\n   }\n}\n"],"sourceRoot":""}