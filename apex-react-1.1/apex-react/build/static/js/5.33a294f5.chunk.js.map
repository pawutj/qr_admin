{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__webpack_require__","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","Scatter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","Object","assign","target","source","key","hasOwnProperty","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","_this21","_ref9","defaults","baseForOwn","baseEach","createBaseEach","isArrayLike","eachFunc","fromRight","collection","iteratee","index","iterable","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","uid","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","baseIsEqual","other","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","accumulator"],"mappings":"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","file":"static/js/5.33a294f5.chunk.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}