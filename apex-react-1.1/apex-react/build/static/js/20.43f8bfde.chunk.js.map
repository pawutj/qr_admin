{"version":3,"sources":["components/todo/Link.js","containers/todo/todoFilterLink.js","containers/todo/addTodo.js","components/todo/todoFilter.js","components/todo/Search.js","containers/todo/todoFilterSearch.js","components/todo/todoSearch.js","components/todo/todo.js","components/todo/todoList.js","containers/todo/visibleTodoList.js","components/todo/todoDetails.js","containers/todo/visibleTodoDetails.js","views/todo/todo.js"],"names":["Link","_ref","active","children","onClick","react_default","a","createElement","className","connect","state","ownProps","filter","todoApp","todoVisibilityFilter","dispatch","setTodoVisibilityFilter","id","todo","length","full_name","task","start_date","due_date","project","priority","tag","comments","Fragment","reactstrap_es","onSubmit","e","preventDefault","value","trim","addTodo","md","for","type","name","ref","node","required","color","TodoFilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modal","toggle","bind","assertThisInitialized","setState","lib_default","dist","size","todoFilterLink","todoVisiblityFilter","SHOW_ALL","PROJECT_A_TODO","PROJECT_B_TODO","STARRED_TODO","PRIORITY_TODO","COMPLETED_TODO","UIUX_TODO","departmentValue","FRONTEND_TODO","BACKEND_TODO","isOpen","React","Component","Search","onChange","placeholder","target","defaultValue","todoSearch","TodoSearch","todoFilterSearch","Todo","onCheckboxChange","onTodoClick","onStarredClick","onPriorityClick","completed","image","starred","xl","xs","check","defaultChecked","style","src","alt","TodoList","toggleTodo","toggleStarredTodo","togglePriorityTodo","deleteTodo","todoDetails","map","todo_todo","assign","key","onDeleteClick","prototype","PropTypes","arrayOf","shape","number","isRequired","string","bool","deleted","func","getVisibleTodo","c","toLocaleLowerCase","includes","Error","todoList","TodoDetails","selectedTodo","onEditClick","editTodoFlag","react","sm","object","border","rows","editTodo","setEditTodoFlag","field","updateTodo","todoFilter","todo_todoSearch","visibleTodoList","visibleTodoDetails"],"mappings":"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","file":"static/js/20.43f8bfde.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Link = ({ active, children, onClick }) => (\n   <li className={\"list-group-item list-group-item-action \" + (active ? \"active\" : \"\") + \" no-border-top-radius no-border-bottom-radius no-border px-2 py-1\"} onClick={onClick}>\n      {children} \n   </li>\n);\n\nLink.propTypes = {\n   active: PropTypes.bool.isRequired,\n   children: PropTypes.node.isRequired,\n   onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from \"react-redux\";\nimport { setTodoVisibilityFilter } from \"../../redux/actions/todo/todoActions\";\nimport Link from \"../../components/todo/Link\";\n\nconst mapStateToProps = (state, ownProps) => ({\n   active: ownProps.filter === state.todoApp.todoVisibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n   onClick: () => dispatch(setTodoVisibilityFilter(ownProps.filter))\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Link);\n","import React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../redux/actions/todo/todoActions\";\n\nconst mapStateToProps = state => ({\n   id: state.todoApp.todo.length\n});\n\nconst AddTodo = ({ id, dispatch }) => {\n   let full_name, task, start_date, due_date, project, priority, tag, comments;\n\n   return (\n      <React.Fragment>\n         <Form\n            onSubmit={e => {\n               e.preventDefault();\n               if (!full_name.value.trim() || !task.value.trim() || !project.value.trim()) {\n                  return;\n               }\n               dispatch(\n                  addTodo(\n                     id,\n                     full_name.value,\n                     task.value,\n                     start_date.value,\n                     due_date.value,\n                     project.value,\n                     priority.value,\n                     tag.value,\n                     comments.value\n                  )\n               );\n               full_name.value = \"\";\n               project.value = \"\";\n               task.value = \"\";\n               start_date.value = \"\";\n               due_date.value = \"\";\n               project.value = \"\";\n               priority.value = false;\n               tag.value = \"\";\n               comments.value = \"\";\n            }}\n         >\n            <ModalBody>\n               <Row>\n                  <Col md={12}>\n                     <FormGroup>\n                        <Label for=\"firstName\">Title</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"task\"\n                           id=\"task\"\n                           ref={node => (task = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"fullName\">Owner</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"full_name\"\n                           id=\"fullName\"\n                           ref={node => (full_name = node)}\n                           required\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"lastName\">Project</Label>\n                        <select\n                           className=\"form-control\"\n                           type=\"select\"\n                           name=\"project\"\n                           id=\"project\"\n                           ref={node => (project = node)}\n                           required\n                        >\n                           <option value=\"Project A\">Project A</option>\n                           <option value=\"Project B\">Project B</option>\n                        </select>\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"start-date\">Start Date</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"start-date\"\n                           id=\"start-date\"\n                           ref={node => (start_date = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"due-date\">Due Date</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"text\"\n                           name=\"due-date\"\n                           id=\"due-date\"\n                           ref={node => (due_date = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"priority\">Priority</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"checkbox\"\n                           name=\"priority\"\n                           id=\"priority\"\n                           ref={node => (priority = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                     <FormGroup>\n                        <Label for=\"tag\">Tag</Label>\n                        <select\n                           className=\"form-control\"\n                           type=\"select\"\n                           name=\"tag\"\n                           id=\"tag\"\n                           ref={node => (tag = node)}\n                           required\n                        >\n                           <option value=\"uiux\">UI/UX</option>\n                           <option value=\"frontend\">Frontend</option>\n                           <option value=\"backend\">Backend</option>\n                        </select>\n                     </FormGroup>\n                  </Col>\n                  <Col md={12}>\n                     <FormGroup>\n                        <Label for=\"comments\">Comments</Label>\n                        <input\n                           className=\"form-control\"\n                           type=\"comments\"\n                           name=\"comments\"\n                           id=\"comments\"\n                           ref={node => (comments = node)}\n                        />\n                     </FormGroup>\n                  </Col>\n               </Row>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" type=\"submit\">\n                  Add Task\n               </Button>\n            </ModalFooter>\n         </Form>\n      </React.Fragment>\n   );\n};\n\nexport default connect(mapStateToProps)(AddTodo);\n","import React from \"react\";\nimport { Modal, ModalHeader } from \"reactstrap\";\nimport FilterLink from \"../../containers/todo/todoFilterLink\";\nimport { todoVisiblityFilter } from \"../../redux/actions/todo/todoActions\";\nimport AddTodo from \"../../containers/todo/addTodo\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport * as Icon from \"react-feather\";\n\nclass TodoFilter extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         modal: false\n      };\n\n      this.toggle = this.toggle.bind(this);\n   }\n\n   toggle() {\n      this.setState({\n         modal: !this.state.modal\n      });\n   }\n   render() {\n      return (\n         <div className=\"todo-app-sidebar float-left d-none d-xl-block\">\n            <PerfectScrollbar>\n               <div className=\"todo-app-sidebar-content\">\n                  <div className=\"todo-app-menu\">\n                     <div className=\"form-group form-group-compose text-center\">\n                        <button\n                           type=\"button\"\n                           className=\"btn btn-raised btn-danger btn-block my-2 shadow-z-2\"\n                           onClick={this.toggle}\n                        >\n                           <Icon.Plus size={18} className=\"mr-1\" /> Add Task\n                        </button>\n                     </div>\n                     <ul className=\"list-group list-group-messages\">\n                     <FilterLink filter={todoVisiblityFilter.SHOW_ALL}>\n                        <Icon.Users size={18} className=\"mr-1\" /> All\n                     </FilterLink>\n                     </ul>\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Projects</h6>\n                     <ul className=\"list-group list-group-messages\">\n                        <FilterLink filter={todoVisiblityFilter.PROJECT_A_TODO}>\n                           <Icon.Briefcase size={18} className=\"mr-1\" /> Project A\n                        </FilterLink>\n                        <FilterLink filter={todoVisiblityFilter.PROJECT_B_TODO}>\n                           <Icon.Briefcase size={18} className=\"mr-1\" /> Project B\n                        </FilterLink>\n                     </ul>\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Filters</h6>\n                     <ul className=\"list-group list-group-messages\">\n                        <FilterLink filter={todoVisiblityFilter.STARRED_TODO}>\n                           <Icon.Star size={18} className=\"mr-1\" /> Starred\n                        </FilterLink>\n                        <FilterLink filter={todoVisiblityFilter.PRIORITY_TODO}>\n                           <Icon.AlertCircle size={18} className=\"mr-1\" /> Priority\n                        </FilterLink>\n                        <FilterLink filter={todoVisiblityFilter.COMPLETED_TODO}>\n                           <Icon.Check size={18} className=\"mr-1\" /> Done\n                        </FilterLink>\n                     </ul>\n                     <h6 className=\"text-muted font-small-3 text-bold-600 text-uppercase my-3\">Tags</h6>\n                     <ul className=\"list-group list-group-messages\">\n                        <FilterLink filter={todoVisiblityFilter.UIUX_TODO} departmentValue=\"UIUX\">\n                           <Icon.Tag size={18} className=\"mr-1 info\" />\n                           UI/UX\n                        </FilterLink>\n                        <FilterLink filter={todoVisiblityFilter.FRONTEND_TODO} departmentValue=\"Frontend\">\n                           <Icon.Tag size={18} className=\"mr-1 warning\" />\n                           Frontend\n                        </FilterLink>\n                        <FilterLink filter={todoVisiblityFilter.BACKEND_TODO} departmentValue=\"Backend\">\n                           <Icon.Tag size={18} className=\"mr-1 success\" />\n                           Backend\n                        </FilterLink>\n                     </ul>\n                  </div>\n               </div>\n               <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} size=\"md\">\n                  <ModalHeader toggle={this.toggle}>Add Task</ModalHeader>\n                  <AddTodo />\n               </Modal>\n            </PerfectScrollbar>\n         </div>\n      );\n   }\n}\n\nexport default TodoFilter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Search = ({ value, onChange }) => (   \n   <input type=\"text\" className=\"form-control round\" placeholder=\"Search todo\" onChange={(e) => onChange(e.target.value)} defaultValue={value}/>\n);\n\nSearch.propTypes = {\n   onChange: PropTypes.func.isRequired\n};\n\nexport default Search;\n","import { connect } from \"react-redux\";\nimport { todoSearch } from \"../../redux/actions/todo/todoActions\";\nimport Search from \"../../components/todo/Search\";\n\nconst mapStateToProps = (state) => ({\n   value: state.todoApp.todoSearch\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onChange:  value => dispatch(todoSearch(value)),\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Search);\n","import React from \"react\";\nimport FilterSearch from \"../../containers/todo/todoFilterSearch\";\n\nclass TodoSearch extends React.Component {\n   render() {\n      return (\n         <div className=\"todo-search-box w-100 bg-white pt-4 px-2 pb-2\">\n            <div className=\"media\">\n               <span className=\"todo-app-sidebar-toggle ft-align-justify font-large-1 mr-2 d-xl-none\" />\n               <div className=\"media-body\">\n                  <FilterSearch />\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default TodoSearch;\n","import React from \"react\";\nimport { Label, Row, Col, CustomInput } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Star, AlertCircle } from \"react-feather\";\n\nconst Todo = ({\n   onCheckboxChange,\n   onTodoClick,\n   onStarredClick,\n   onPriorityClick,\n   id,\n   task,\n   completed,\n   image,\n   project,\n   starred,\n   priority,\n   tag,\n   active\n}) => (   \n   <li className={\"list-group-item list-group-item-action no-border \" + ((active === id) ? \"bg-grey bg-lighten-4\" : \"\")}>\n      <Row className=\"todo-list-group-item\">\n         <Col xl={1} xs={1}>\n            <Label check>\n               <CustomInput type=\"checkbox\" onChange={onCheckboxChange} id={\"exampleCustomCheckbox-\"+id} defaultChecked={completed} />\n            </Label>\n         </Col>\n         <Col xl={1} xs={1}>\n            <Star size={20} onClick={onStarredClick} style={{ color: starred ? \"#FFC107\" : \"#495057\" }} />            \n            <AlertCircle size={20} onClick={onPriorityClick} style={{ color: priority ? \"#FF586B\" : \"#495057\" }} />\n         </Col>\n         <Col xl={10} xs={9} onClick={onTodoClick}>\n            <p className=\"mb-0 text-truncate\">\n               {completed ? <s>{task}</s> : task}\n               <img src={image} className=\"rounded-circle width-25 float-right d-none d-xl-block\" alt={image} />\n            </p>\n            <p className=\"mb-0 font-small-3\">\n               {project}{\" \"}\n               <span\n                  className={\n                     \"float-right badge \" +\n                     (tag === \"uiux\" ? \"badge-info\" : \"\") +\n                     (tag === \"frontend\" ? \"badge-warning\" : \"\") +\n                     (tag === \"backend\" ? \"badge-success\" : \"\") +\n                     \" mr-1\"\n                  }\n               >\n                  {tag}\n               </span>\n            </p>\n         </Col>\n      </Row>\n   </li>\n);\n\nTodo.propTypes = {\n   task: PropTypes.string.isRequired,\n   image: PropTypes.string.isRequired,\n   project: PropTypes.string.isRequired,\n   starred: PropTypes.bool.isRequired,\n   onCheckboxChange: PropTypes.func.isRequired,\n   onStarredClick: PropTypes.func.isRequired,\n   onPriorityClick: PropTypes.func.isRequired,\n   onTodoClick: PropTypes.func.isRequired\n};\n\nexport default Todo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./todo\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nconst TodoList = ({ todo, active, toggleTodo, toggleStarredTodo, togglePriorityTodo, deleteTodo, todoDetails }) => (\n   <div className=\"todo-app-list\">\n      <PerfectScrollbar>\n         <div id=\"users-list\">\n            <ul className=\"list-group\">\n               {todo.map(todo => (\n                  <Todo\n                     key={todo.id}\n                     active={active}\n                     {...todo}\n                     onCheckboxChange={() => toggleTodo(todo.id)}\n                     onStarredClick={() => toggleStarredTodo(todo.id)}\n                     onPriorityClick={() => togglePriorityTodo(todo.id)}\n                     onDeleteClick={() => deleteTodo(todo.id)}\n                     onTodoClick={() => todoDetails(todo.id)}\n                  />\n               ))}\n            </ul>\n         </div>\n      </PerfectScrollbar>\n   </div>\n);\n\nTodoList.prototype = {\n   todo: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         full_name: PropTypes.string.isRequired,\n         image: PropTypes.string,\n         task: PropTypes.string,\n         start_date: PropTypes.number.isRequired,\n         due_date: PropTypes.number.isRequired,\n         project: PropTypes.string,\n         priority: PropTypes.bool.isRequired,\n         tag: PropTypes.bool.isRequired,\n         comments: PropTypes.string,\n         completed: PropTypes.bool.isRequired,\n         starred: PropTypes.bool.isRequired,\n         deleted: PropTypes.bool.isRequired\n      }).isRequired\n   ).isRequired,\n   toggleStarredTodo: PropTypes.func.isRequired,\n   deleteTodo: PropTypes.func.isRequired,\n   todoDetails: PropTypes.func.isRequired\n};\nexport default TodoList;\n","import { connect } from \"react-redux\";\nimport {\n   toggleTodo,\n   toggleStarredTodo,\n   togglePriorityTodo,\n   deleteTodo,\n   todoVisiblityFilter,\n   todoDetails\n} from \"../../redux/actions/todo/todoActions\";\nimport todoList from \"../../components/todo/todoList\";\n\nconst getVisibleTodo = (todo, filter, todoSearch) => {\n   switch (filter) {\n      case todoVisiblityFilter.SHOW_ALL:\n         return todo.filter(c => !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase()));\n\n      // Project Filter\n      case todoVisiblityFilter.PROJECT_A_TODO:\n         return todo.filter(\n            c =>\n               c.project === \"Project A\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.PROJECT_B_TODO:\n         return todo.filter(\n            c =>\n               c.project === \"Project B\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n\n      // Filters\n      case todoVisiblityFilter.STARRED_TODO:\n         return todo.filter(\n            c => c.starred && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.PRIORITY_TODO:\n         return todo.filter(\n            c => c.priority && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.COMPLETED_TODO:\n         return todo.filter(\n            c => c.completed && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n\n      // Tag filter\n      case todoVisiblityFilter.UIUX_TODO:\n         return todo.filter(\n            c => c.tag === \"uiux\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.FRONTEND_TODO:\n         return todo.filter(\n            c => c.tag === \"frontend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      case todoVisiblityFilter.BACKEND_TODO:\n         return todo.filter(\n            c => c.tag === \"backend\" && !c.deleted && c.task.toLocaleLowerCase().includes(todoSearch.toLocaleLowerCase())\n         );\n      default:\n         throw new Error(\"Unknown filter: \" + filter);\n   }\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n   // Mapping todo object and Visiblityfilter state to Object\n   todo: getVisibleTodo(state.todoApp.todo, state.todoApp.todoVisibilityFilter, state.todoApp.todoSearch),\n   active: state.todoApp.todoDetails\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n   toggleTodo: id => dispatch(toggleTodo(id)),\n   toggleStarredTodo: id => dispatch(toggleStarredTodo(id)),\n   togglePriorityTodo: id => dispatch(togglePriorityTodo(id)),\n   deleteTodo: id => dispatch(deleteTodo(id)),\n   todoDetails: id => dispatch(todoDetails(id))\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(todoList);\n","import React, { Fragment } from \"react\";\nimport { Row, Col, Media, Button, Input } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport * as Icon from \"react-feather\";\n\nconst TodoDetails = ({ selectedTodo, toggleStarredTodo, togglePriorityTodo, onEditClick, editTodoFlag, onChange }) => (\n   <Fragment>\n      {selectedTodo ? (\n         <div className=\"todo-app-content-detail\">\n            <Row>\n               <Col className=\"\">\n                  <Icon.Star\n                     size={20}\n                     className=\"my-2 mx-1\"\n                     onClick={() => toggleStarredTodo(selectedTodo.id)}\n                     style={{ color: selectedTodo.starred ? \"#FFC107\" : \"#495057\" }}\n                  />\n                  <Icon.AlertCircle\n                     size={20}\n                     className=\"my-2 mx-1\"\n                     onClick={() => togglePriorityTodo(selectedTodo.id)}\n                     style={{ color: selectedTodo.priority ? \"#FF586B\" : \"#495057\" }}\n                  />\n               </Col>\n               <Col className=\"text-right\">\n                  <Button className=\"btn-outline-success mr-1 mt-1\" size=\"sm\" onClick={onEditClick}>\n                     {editTodoFlag ? <Icon.Check size={16} /> : <Icon.Edit2 size={16} />}\n                  </Button>\n               </Col>\n            </Row>\n            <PerfectScrollbar>\n               <Row>\n                  <Col>\n                     {editTodoFlag ? (\n                        <Input\n                           type=\"text\"\n                           name=\"task\"\n                           id=\"task\"\n                           defaultValue={selectedTodo.task}\n                           onChange={e => onChange(selectedTodo.id, \"task\", e.target.value)}\n                        />\n                     ) : (\n                        <p className=\"lead\">{selectedTodo.completed ? <s>{selectedTodo.task}</s> : selectedTodo.task}</p>\n                     )}\n                  </Col>\n               </Row>\n               <Row className=\"mt-1\">\n                  <Col>\n                     <Row>\n                        <Col sm=\"3\">\n                           <Media\n                              object\n                              src={selectedTodo.image}\n                              alt=\"Generic placeholder image\"\n                              className=\"img-fluid rounded-circle width-25\"\n                           />\n                        </Col>\n                        <Col sm=\"9\" className=\"text-truncate\">\n                           {editTodoFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 className=\"w-80\"\n                                 name=\"full_name\"\n                                 id=\"full_name\"\n                                 defaultValue={selectedTodo.full_name}\n                                 onChange={e => onChange(selectedTodo.id, \"full_name\", e.target.value)}\n                              />\n                           ) : (\n                              selectedTodo.full_name\n                           )}\n                        </Col>\n                     </Row>\n                  </Col>\n                  <Col>\n                     <Row>\n                        <Col sm=\"3\">\n                           <Icon.Calendar size={19} />\n                        </Col>\n                        <Col sm=\"9\" className=\"text-truncate\">\n                           {editTodoFlag ? (\n                              <Input\n                                 type=\"text\"\n                                 className=\"w-80\"\n                                 name=\"due_date\"\n                                 id=\"due_date\"\n                                 defaultValue={selectedTodo.due_date}\n                                 onChange={e => onChange(selectedTodo.id, \"due_date\", e.target.value)}\n                              />\n                           ) : (\n                              selectedTodo.due_date\n                           )}\n                        </Col>\n                     </Row>\n                  </Col>\n               </Row>\n               <hr style={{ border: \"1px solid #e6ecf5\" }} />\n               <Row className=\"mb-2\">\n                  <Col>\n                     {editTodoFlag ? (\n                        <Input\n                           type=\"textarea\"\n                           rows=\"4\"\n                           name=\"comments\"\n                           id=\"comments\"\n                           defaultValue={selectedTodo.comments}\n                           onChange={e => onChange(selectedTodo.id, \"comments\", e.target.value)}\n                        />\n                     ) : (\n                        selectedTodo.comments\n                     )}\n                  </Col>\n               </Row>\n               <Row className=\"mt-1\">\n                  <Col sm=\"1\">\n                     <Icon.Briefcase size={20} />\n                  </Col>\n                  <Col sm=\"5\">\n                     {editTodoFlag ? (\n                        <Input\n                           type=\"select\"\n                           name=\"project\"\n                           id=\"project\"\n                           className=\"w-80\"\n                           defaultValue={selectedTodo.project}\n                           onChange={e => onChange(selectedTodo.id, \"project\", e.target.value)}\n                        >\n                           <option value=\"Project A\">Project A</option>\n                           <option value=\"Project B\">Project B</option>\n                        </Input>\n                     ) : (\n                        selectedTodo.project\n                     )}\n                  </Col>\n                  <Col sm=\"1\">\n                     <Icon.Tag size={20} />\n                  </Col>\n                  <Col sm=\"5\">\n                     {editTodoFlag ? (\n                        <Input\n                           type=\"select\"\n                           name=\"tag\"\n                           id=\"tag\"\n                           className=\"w-80\"\n                           defaultValue={selectedTodo.tag}\n                           onChange={e => onChange(selectedTodo.id, \"tag\", e.target.value)}\n                        >\n                           <option value=\"uiux\">UI/UX</option>\n                           <option value=\"frontend\">Frontend</option>\n                           <option value=\"backend\">Backend</option>\n                        </Input>\n                     ) : (\n                        selectedTodo.tag\n                     )}\n                  </Col>\n               </Row>\n               <hr style={{ border: \"1px solid #e6ecf5\" }} />\n               <Row>\n                  <Col>\n                     <p className=\"font-small-2 mb-0\">\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> created task on{\" \"}\n                        {selectedTodo.start_date}.\n                     </p>\n                     <p className=\"font-small-2 mb-0\">\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> added to {selectedTodo.project}.\n                     </p>\n                     <p className=\"font-small-2 mb-0\">\n                        <span className=\"text-bold-400\">{selectedTodo.full_name}</span> added to {selectedTodo.tag}.\n                     </p>\n                  </Col>\n               </Row>\n            </PerfectScrollbar>\n         </div>\n      ) : (\n         <div className=\"row h-100\">\n            <div className=\"col-sm-12 my-auto\">\n               <div className=\"text-center\">\n                  <Icon.CheckSquare size={84} color=\"#ccc\" className=\"pb-3\" />\n                  <h4>Please select a todo to show details.</h4>\n               </div>\n            </div>\n         </div>\n      )}\n   </Fragment>\n);\n\nTodoDetails.prototype = {\n   selectedTodo: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         full_name: PropTypes.string.isRequired,\n         image: PropTypes.string,\n         task: PropTypes.string,\n         start_date: PropTypes.number.isRequired,\n         due_date: PropTypes.number.isRequired,\n         project: PropTypes.string,\n         priority: PropTypes.bool.isRequired,\n         tag: PropTypes.bool.isRequired,\n         comments: PropTypes.string,\n         completed: PropTypes.bool.isRequired,\n         starred: PropTypes.bool.isRequired,\n         deleted: PropTypes.bool.isRequired\n      }).isRequired\n   ).isRequired,\n   starred: PropTypes.bool.isRequired,\n   priority: PropTypes.bool.isRequired,\n   toggleStarredTodo: PropTypes.func.isRequired,\n   togglePriorityTodo: PropTypes.func.isRequired\n};\nexport default TodoDetails;\n","import { connect } from \"react-redux\";\nimport { setEditTodoFlag,updateTodo, toggleStarredTodo, togglePriorityTodo} from \"../../redux/actions/todo/todoActions\";\nimport todoDetails from \"../../components/todo/todoDetails\";\n\nconst mapStateToProps = (state, ownProps) => ({\n   selectedTodo: state.todoApp.todo[state.todoApp.todoDetails],\n   editTodoFlag: state.todoApp.editTodo\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onEditClick: () => dispatch(setEditTodoFlag()),\n   onChange:(id, field, value) => dispatch(updateTodo(id , field, value)),\n   toggleStarredTodo: id => dispatch(toggleStarredTodo(id)),\n   togglePriorityTodo: id => dispatch(togglePriorityTodo(id))\n   \n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(todoDetails);\n","\nimport React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\n\nimport TodoFilter from \"../../components/todo/todoFilter\";\nimport TodoSearch from \"../../components/todo/todoSearch\";\n\n// import TodoList from \"../../components/todo/contacsList\";\nimport TodoList from \"../../containers/todo/visibleTodoList\";\nimport TodoDetails from \"../../containers/todo/visibleTodoDetails\";\n\nclass Todo extends Component {\n   render() {\n      return (\n         <Fragment>\n            <div className=\"todo-application\">\n               <div className=\"content-overlay\" />\n               <TodoFilter />\n               <Row className=\"todo-app-content\">\n                  <div className=\"todo-app-content-area w-100\">\n                     <div className=\"todo-app-list-mails p-0\">\n                        <TodoSearch />\n                        <TodoList />\n                     </div>\n                     <div className=\"todo-app-mail-content d-none d-md-block\">\n                        <TodoDetails />\n                     </div>\n                  </div>\n               </Row>\n            </div>\n         </Fragment>\n      );\n   }\n}\n\nexport default Todo;\n"],"sourceRoot":""}