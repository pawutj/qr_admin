{"version":3,"sources":["views/charts/chartjs/chartData.js","views/charts/chartjs/chart.js"],"names":["LineChartData","data","labels","datasets","label","fill","borderDash","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverBorderWidth","pointRadius","lineTension","options","animation","duration","easing","hover","animationDuration","mode","responsiveAnimationDuration","responsive","maintainAspectRatio","legend","position","scales","xAxes","display","gridLines","color","drawTicks","scaleLabel","labelString","yAxes","title","text","AreaChartdata","backgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","ScatterData","x","y","type","zeroLineColor","ticks","userCallback","tick","toString","BarData","scaleShowVerticalLines","DoughnutData","RadarData","PieData","PolarData","ChartJS","props","react_default","a","createElement","react","reactstrap_es","sm","className","es","height"],"mappings":"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","file":"static/js/71.4baca867.chunk.js","sourcesContent":["export const LineChartData = {\n   data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n         {\n            data: [65, 59, 80, 81, 56, 55, 40],\n            label: \"My First dataset\",\n            fill: false,\n            borderDash: [5, 5],\n            borderColor: \"#9C27B0\",\n            pointBorderColor: \"#9C27B0\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderWidth: 2,\n            pointHoverBorderWidth: 2,\n            pointRadius: 4\n         },\n         {\n            data: [28, 48, 40, 19, 86, 27, 90],\n            label: \"My Second dataset\",\n            fill: false,\n            borderDash: [5, 5],\n            borderColor: \"#00A5A8\",\n            pointBorderColor: \"#00A5A8\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderWidth: 2,\n            pointHoverBorderWidth: 2,\n            pointRadius: 4\n         },\n         {\n            data: [45, 25, 16, 36, 67, 18, 76],\n            label: \"My Third dataset - No bezier\",\n            lineTension: 0,\n            fill: false,\n            borderColor: \"#FF7D4D\",\n            pointBorderColor: \"#FF7D4D\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderWidth: 2,\n            pointHoverBorderWidth: 2,\n            pointRadius: 4\n         }\n      ]\n   },\n   options: {\n      animation: {\n         duration: 1000, // general animation time\n         easing: \"easeOutBack\"\n      },\n      hover: {\n         animationDuration: 1000, // duration of animations when hovering an item\n         mode: \"label\"\n      },\n      responsiveAnimationDuration: 1000, // animation duration after a resize\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n         position: \"bottom\"\n      },\n      scales: {\n         xAxes: [\n            {\n               display: true,\n               gridLines: {\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  display: true,\n                  labelString: \"Month\"\n               }\n            }\n         ],\n         yAxes: [\n            {\n               display: true,\n               gridLines: {\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  display: true,\n                  labelString: \"Value\"\n               }\n            }\n         ]\n      },\n      title: {\n         display: true,\n         text: \"Chart.js Line Chart - Legend\"\n      }\n   }\n};\n\nexport const AreaChartdata = {\n   data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n         {\n            data: [0, 150, 140, 105, 190, 230, 270],\n            label: \"Series A\",\n            backgroundColor: \"rgba(255, 141, 96, 0.4)\",\n            borderColor: \"transparent\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderColor: \"rgba(255, 141, 96,1)\",\n            pointHoverBackgroundColor: \"rgba(255, 141, 96,1)\",\n            pointRadius: \"5\",\n            pointHoverBorderColor: \"#FFF\",\n            pointHoverRadius: \"5\",\n            pointBorderWidth: \"2\"\n         },\n         {\n            data: [0, 90, 120, 240, 140, 250, 190],\n            label: \"Series B\",\n            backgroundColor: \"rgba(0, 157, 160, 0.7)\",\n            borderColor: \"transparent\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderColor: \"rgba(0, 157, 160,1)\",\n            pointHoverBackgroundColor: \"rgba(0, 157, 160,1)\",\n            pointRadius: \"5\",\n            pointHoverBorderColor: \"#FFF\",\n            pointHoverRadius: \"5\",\n            pointBorderWidth: \"2\"\n         }\n      ]\n   },\n   options: {\n      animation: {\n         duration: 1000, // general animation time\n         easing: \"easeOutBack\"\n      },\n      hover: {\n         animationDuration: 1000 // duration of animations when hovering an item\n      },\n      responsiveAnimationDuration: 1000, // animation duration after a resize\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n         xAxes: [\n            {\n               display: true,\n               gridLines: {\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  display: true,\n                  labelString: \"Month\"\n               }\n            }\n         ],\n         yAxes: [\n            {\n               display: true,\n               gridLines: {\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  display: true,\n                  labelString: \"Value\"\n               }\n            }\n         ]\n      }\n   }\n};\n\nexport const ScatterData = {\n   data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n         {\n            data: [\n               {\n                  x: 1,\n                  y: -1.711e-2\n               },\n               {\n                  x: 1.26,\n                  y: -2.708e-2\n               },\n               {\n                  x: 1.58,\n                  y: -4.285e-2\n               },\n               {\n                  x: 2.0,\n                  y: -6.772e-2\n               },\n               {\n                  x: 2.51,\n                  y: -1.068e-1\n               },\n               {\n                  x: 3.16,\n                  y: -1.681e-1\n               },\n               {\n                  x: 3.98,\n                  y: -2.635e-1\n               },\n               {\n                  x: 5.01,\n                  y: -4.106e-1\n               },\n               {\n                  x: 6.31,\n                  y: -6.339e-1\n               },\n               {\n                  x: 7.94,\n                  y: -9.659e-1\n               },\n               {\n                  x: 10.0,\n                  y: -1.445\n               },\n               {\n                  x: 12.6,\n                  y: -2.11\n               },\n               {\n                  x: 15.8,\n                  y: -2.992\n               },\n               {\n                  x: 20.0,\n                  y: -4.102\n               },\n               {\n                  x: 25.1,\n                  y: -5.429\n               },\n               {\n                  x: 31.6,\n                  y: -6.944\n               },\n               {\n                  x: 39.8,\n                  y: -8.607\n               },\n               {\n                  x: 50.1,\n                  y: -1.038e1\n               },\n               {\n                  x: 63.1,\n                  y: -1.223e1\n               },\n               {\n                  x: 79.4,\n                  y: -1.413e1\n               },\n               {\n                  x: 100.0,\n                  y: -1.607e1\n               },\n               {\n                  x: 126,\n                  y: -1.803e1\n               },\n               {\n                  x: 158,\n                  y: -2e1\n               },\n               {\n                  x: 200,\n                  y: -2.199e1\n               },\n               {\n                  x: 251,\n                  y: -2.398e1\n               },\n               {\n                  x: 316,\n                  y: -2.597e1\n               },\n               {\n                  x: 398,\n                  y: -2.797e1\n               },\n               {\n                  x: 501,\n                  y: -2.996e1\n               },\n               {\n                  x: 631,\n                  y: -3.196e1\n               },\n               {\n                  x: 794,\n                  y: -3.396e1\n               },\n               {\n                  x: 1000,\n                  y: -3.596e1\n               }\n            ],\n            label: \"V(node2)\",\n            backgroundColor: \"rgba(81,117,224,.6)\",\n            borderColor: \"transparent\",\n            pointBorderColor: \"#5175E0\",\n            pointBackgroundColor: \"#FFF\",\n            pointBorderWidth: 2,\n            pointHoverBorderWidth: 2,\n            pointRadius: 4\n         }\n      ]\n   },\n   options: {\n      animation: {\n         duration: 1000, // general animation time\n         easing: \"easeOutBack\"\n      },\n      hover: {\n         animationDuration: 1000 // duration of animations when hovering an item\n      },\n      responsiveAnimationDuration: 1000, // animation duration after a resize\n      responsive: true,\n      maintainAspectRatio: false,\n      title: {\n         display: false,\n         text: \"Chart.js Scatter Chart - Logarithmic X-Axis\"\n      },\n      scales: {\n         xAxes: [\n            {\n               type: \"logarithmic\",\n               position: \"bottom\",\n               gridLines: {\n                  zeroLineColor: \"rgba(0,0,0,.1)\",\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  labelString: \"Frequency\",\n                  display: true\n               }\n            }\n         ],\n         yAxes: [\n            {\n               type: \"linear\",\n               ticks: {\n                  userCallback: tick => {\n                     return tick.toString() + \"dB\";\n                  }\n               },\n               gridLines: {\n                  zeroLineColor: \"rgba(81,117,224,1)\",\n                  color: \"#f3f3f3\",\n                  drawTicks: false\n               },\n               scaleLabel: {\n                  labelString: \"Voltage\",\n                  display: true\n               }\n            }\n         ]\n      }\n   }\n};\n\nexport const BarData = {\n   data: {\n      labels: [\"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\"],\n      datasets: [\n         {\n            label: \"Series A\",\n            data: [65, 59, 80, 81, 56, 55, 40],\n            backgroundColor: \"rgba(255, 141, 96, 0.8)\",\n            borderColor: \"rgba(148,159,177,1)\",\n            pointBackgroundColor: \"rgba(148,159,177,1)\",\n            pointBorderColor: \"#fff\",\n            pointHoverBackgroundColor: \"#fff\",\n            pointHoverBorderColor: \"rgba(148,159,177,0.8)\"\n         },\n         {\n            data: [28, 48, 40, 19, 86, 27, 90],\n            label: \"Series B\",\n            backgroundColor: \"rgba(0, 157, 160, 0.8)\",\n            borderColor: \"rgba(148,159,177,1)\",\n            pointBackgroundColor: \"rgba(148,159,177,1)\",\n            pointBorderColor: \"#fff\",\n            pointHoverBackgroundColor: \"#fff\",\n            pointHoverBorderColor: \"rgba(148,159,177,0.8)\"\n         }\n      ]\n   },\n   options: {\n      scaleShowVerticalLines: false,\n      responsive: true,\n      maintainAspectRatio: false\n   }\n};\n\nexport const DoughnutData = {\n   data: {\n      labels: [\"Download Sales\", \"In-Store Sales\", \"Mail-Order Sales\"],\n      datasets: [\n         {\n            data: [350, 450, 100],\n            backgroundColor: [\n               \"rgba(0, 157, 160, 0.8)\",\n               \"rgba(28, 188, 216, 0.8)\",\n               \"rgba(255, 141, 96, 0.8)\"\n            ]\n         }\n      ]\n   },\n   options: {\n      animation: false,\n      responsive: true,\n      maintainAspectRatio: false\n   }\n};\n\nexport const RadarData = {\n   data: {\n      labels: [\n         \"Eating\",\n         \"Drinking\",\n         \"Sleeping\",\n         \"Designing\",\n         \"Coding\",\n         \"Cycling\",\n         \"Running\"\n      ],\n      datasets: [\n         {\n            data: [65, 59, 90, 81, 56, 55, 40],\n            label: \"Series A\",\n            backgroundColor: [\"rgba(255, 141, 96, 0.8)\"]\n         },\n         {\n            data: [28, 48, 40, 19, 96, 27, 100],\n            label: \"Series B\",\n            backgroundColor: [\"rgba(0, 157, 160, 0.8)\"]\n         }\n      ]\n   },\n   options: {\n      animation: false,\n      responsive: true,\n      maintainAspectRatio: false\n   }\n};\n\nexport const PieData = {\n   data: {\n      labels: [\"Download Sales\", \"In-Store Sales\", \"Mail Sales\"],\n      datasets: [\n         {\n            data: [300, 500, 100],\n            backgroundColor: [\n               \"rgba(0, 157, 160, 0.8)\",\n               \"rgba(28, 188, 216, 0.8)\",\n               \"rgba(255, 141, 96, 0.8)\"\n            ]\n         }\n      ]\n   },\n   options: {\n      animation: false,\n      responsive: true,\n      maintainAspectRatio: false\n   }\n};\n\nexport const PolarData = {\n   data: {\n      labels: [\n         \"Download Sales\",\n         \"In-Store Sales\",\n         \"Mail Sales\",\n         \"Telesales\",\n         \"Corporate Sales\"\n      ],\n      datasets: [\n         {\n            data: [300, 500, 100, 40, 120],\n            backgroundColor: [\n               \"rgba(0, 157, 160, 0.8)\",\n               \"rgba(28, 188, 216, 0.8)\",\n               \"rgba(255, 141, 96, 0.8)\",\n               \"rgba(12, 194, 126, 0.8)\",\n               \"rgba(255, 88, 107, 0.8)\"\n            ]\n         }\n      ]\n   },\n   options: {\n      animation: false,\n      responsive: true,\n      maintainAspectRatio: false\n   }\n};\n","// import external modules\nimport React, { Fragment } from \"react\";\nimport { Row, Col, Card, CardTitle, CardHeader, CardBody } from \"reactstrap\";\nimport { Bar, Line, Scatter, Radar, Pie, Polar, Doughnut } from \"react-chartjs-2\";\n\nimport {\n   BarData,\n   LineChartData,\n   AreaChartdata,\n   ScatterData,\n   DoughnutData,\n   RadarData,\n   PieData,\n   PolarData\n} from \"./chartData\";\n\nconst ChartJS = props => (\n   <Fragment>\n      <Row>\n         <Col sm=\"12\" className=\"content\">\n            <div className=\"content-header text-dark\">List</div>\n            <p className=\"content-sub-header\">\n               List groups are a flexible and powerful component for displaying not only simple lists of elements, but\n               complex ones with custom content.\n            </p>\n         </Col>\n      </Row>\n\n      <Row>\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>Bootstrap Grid options</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Line height={400} data={LineChartData.data} options={LineChartData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>AREA CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Line height={400} data={AreaChartdata.data} options={AreaChartdata.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>SCATTER CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Scatter height={400} data={ScatterData.data} options={ScatterData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>BAR CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Bar height={400} data={BarData.data} options={BarData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>DOUGHNUT CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Doughnut height={400} data={DoughnutData.data} options={DoughnutData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>RADAR CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Radar height={400} data={RadarData.data} options={RadarData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>PIE CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Pie height={400} data={PieData.data} options={PieData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n\n         <Col sm=\"12\">\n            <Card>\n               <CardHeader>\n                  <CardTitle>POLAR CHART</CardTitle>\n               </CardHeader>\n               <CardBody>\n                  <Polar height={400} data={PolarData.data} options={PolarData.options} />\n               </CardBody>\n            </Card>\n         </Col>\n      </Row>\n   </Fragment>\n);\n\nexport default ChartJS;\n"],"sourceRoot":""}